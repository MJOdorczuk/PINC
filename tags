!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABBREVIATE_BRIEF	doc/doxygen/doxyfile.mk	/^ABBREVIATE_BRIEF       =$/;"	m
ALIASES	doc/doxygen/doxyfile.mk	/^ALIASES                =$/;"	m
ALLEXTERNALS	doc/doxygen/doxyfile.mk	/^ALLEXTERNALS           = NO$/;"	m
ALPHABETICAL_INDEX	doc/doxygen/doxyfile.mk	/^ALPHABETICAL_INDEX     = YES$/;"	m
ALWAYS_DETAILED_SEC	doc/doxygen/doxyfile.mk	/^ALWAYS_DETAILED_SEC    = NO$/;"	m
AR	lib/iniparser/Makefile	/^AR	    = ar$/;"	m
AR	lib/iniparser/test/Makefile	/^AR	    = ar$/;"	m
ARFLAGS	lib/iniparser/Makefile	/^ARFLAGS = rcv$/;"	m
ARFLAGS	lib/iniparser/test/Makefile	/^ARFLAGS = rcv$/;"	m
ARRSIZE	proof of concept/global variables/main.c	6;"	d	file:
ASCIILINESZ	lib/iniparser/src/iniparser.c	14;"	d	file:
AUTOLINK_SUPPORT	doc/doxygen/doxyfile.mk	/^AUTOLINK_SUPPORT       = YES$/;"	m
ArrStruct	proof of concept/global variables/main.c	/^struct ArrStruct{$/;"	s	file:
BINARY_TOC	doc/doxygen/doxyfile.mk	/^BINARY_TOC             = NO$/;"	m
BOLTZMANN	src/pinc.h	25;"	d
BOUND	src/old/const.h	50;"	d
BOUND	src/old/triang/const.h	50;"	d
BRIEF_MEMBER_DESC	doc/doxygen/doxyfile.mk	/^BRIEF_MEMBER_DESC      = YES$/;"	m
BUCKETSIZE	src/old/const.h	271;"	d
BUCKETSIZE	src/old/triang/const.h	271;"	d
BUFFSIZE	src/io.c	28;"	d	file:
BUFFSIZE	test/test.c	13;"	d	file:
BUILTIN_STL_SUPPORT	doc/doxygen/doxyfile.mk	/^BUILTIN_STL_SUPPORT    = NO$/;"	m
CADD	makefile	/^CADD	= # Additional CFLAGS accessible from CLI$/;"	m
CALLER_GRAPH	doc/doxygen/doxyfile.mk	/^CALLER_GRAPH           = NO$/;"	m
CALL_GRAPH	doc/doxygen/doxyfile.mk	/^CALL_GRAPH             = NO$/;"	m
CASE_SENSE_NAMES	doc/doxygen/doxyfile.mk	/^CASE_SENSE_NAMES       = YES$/;"	m
CC	lib/iniparser/Makefile	/^CC      = gcc$/;"	m
CC	lib/iniparser/test/Makefile	/^CC      = gcc$/;"	m
CC	makefile	/^CC		= mpicc$/;"	m
CC	src/old/triang/makefile	/^CC = mpicc$/;"	m
CFLAGS	lib/iniparser/Makefile	/^CFLAGS  = -O2 -fPIC -Wall -ansi -pedantic$/;"	m
CFLAGS	lib/iniparser/test/Makefile	/^CFLAGS  = -g -I..\/src$/;"	m
CFLAGS	makefile	/^CFLAGS	=	-std=c11 -Wall\\$/;"	m
CFLAGS	src/old/triang/makefile	/^CFLAGS= -DINSU $(CFLAGS_TRI) -Wall -DMPI -DRESTART$/;"	m
CFLAGS_TRI	src/old/triang/makefile	/^CFLAGS_TRI=-UDEBUG -DSTANDALONE -UCLOCK\\$/;"	m
CHM_FILE	doc/doxygen/doxyfile.mk	/^CHM_FILE               =$/;"	m
CHM_INDEX_ENCODING	doc/doxygen/doxyfile.mk	/^CHM_INDEX_ENCODING     =$/;"	m
CITE_BIB_FILES	doc/doxygen/doxyfile.mk	/^CITE_BIB_FILES         =$/;"	m
CLASS_DIAGRAMS	doc/doxygen/doxyfile.mk	/^CLASS_DIAGRAMS         = YES$/;"	m
CLASS_GRAPH	doc/doxygen/doxyfile.mk	/^CLASS_GRAPH            = YES$/;"	m
COLLABORATION_GRAPH	doc/doxygen/doxyfile.mk	/^COLLABORATION_GRAPH    = YES$/;"	m
COLS_IN_ALPHA_INDEX	doc/doxygen/doxyfile.mk	/^COLS_IN_ALPHA_INDEX    = 5$/;"	m
COMPACT_LATEX	doc/doxygen/doxyfile.mk	/^COMPACT_LATEX          = NO$/;"	m
COMPACT_RTF	doc/doxygen/doxyfile.mk	/^COMPACT_RTF            = NO$/;"	m
COMPILE.c	lib/iniparser/Makefile	/^COMPILE.c=$(CC) $(CFLAGS) -c$/;"	m
CONVTEST	src/old/const.h	56;"	d
CONVTEST	src/old/triang/const.h	56;"	d
COPT	makefile	/^COPT	= -O3 # Optimization$/;"	m
COPT	proof of concept/get boundary/challenge/makefile	/^COPT = -O3$/;"	m
COPT	proof of concept/get boundary/makefile	/^COPT = -O3$/;"	m
COPT	proof of concept/get slice/makefile	/^COPT = -O3$/;"	m
COPT	proof of concept/interpolate/makefile	/^COPT = -O3$/;"	m
COPT	proof of concept/tail call recursion/makefile	/^COPT	= -O3$/;"	m
COPT	proof of concept/vectorfield/makefile	/^COPT = -O3$/;"	m
CPP_CLI_SUPPORT	doc/doxygen/doxyfile.mk	/^CPP_CLI_SUPPORT        = NO$/;"	m
CREATE_SUBDIRS	doc/doxygen/doxyfile.mk	/^CREATE_SUBDIRS         = NO$/;"	m
CROSS	src/old/triang/triangulate.h	126;"	d
CROSSFACTOR	src/old/const.h	58;"	d
CROSSFACTOR	src/old/triang/const.h	58;"	d
CROSS_SINE	src/old/triang/monotone.c	4;"	d	file:
C_EPS	src/old/triang/triangulate.h	92;"	d
Class Documentation	doc/latex/refman.tex	/^\\input{files}$/;"	c
Class Index	doc/latex/refman.tex	/^\\hypersetup{pageanchor=true}$/;"	c
Class List	doc/latex/annotated.tex	/^\\section{Class List}$/;"	s
Classes	doc/latex/multigrid_8h.tex	/^Poisson Solver, multigrid.  $/;"	u
Coding Practices	doc/introduction/main.tex	/^\\end{verbatim}$/;"	s
Comments and Documentation	doc/introduction/main.tex	/^\\end{itemize}$/;"	u
Compiling and Running PINC	doc/introduction/main.tex	/^%First, you should checkout from Git the revision of DiP3D you'd like to use. Next, a new simulation data folder must be made. Here, we use the template as a starting point (a previously run simulation would also work):$/;"	s
DDIR	makefile	/^DDIR	= doc$/;"	m
DEBRUIJN	proof of concept/interpolate/main.c	95;"	d	file:
DIAFILE_DIRS	doc/doxygen/doxyfile.mk	/^DIAFILE_DIRS           =$/;"	m
DIA_PATH	doc/doxygen/doxyfile.mk	/^DIA_PATH               =$/;"	m
DICTMINSZ	lib/iniparser/src/dictionary.c	27;"	d	file:
DICT_INVALID_KEY	lib/iniparser/src/dictionary.c	30;"	d	file:
DIM	src/old/const.h	33;"	d
DIM	src/old/triang/const.h	33;"	d
DIRECTORY_GRAPH	doc/doxygen/doxyfile.mk	/^DIRECTORY_GRAPH        = YES$/;"	m
DISABLE_INDEX	doc/doxygen/doxyfile.mk	/^DISABLE_INDEX          = NO$/;"	m
DISTRIBUTE_GROUP_DOC	doc/doxygen/doxyfile.mk	/^DISTRIBUTE_GROUP_DOC   = NO$/;"	m
DMAX	src/old/fmg/nrutil.h	11;"	d
DMIN	src/old/fmg/nrutil.h	15;"	d
DOCBOOK_OUTPUT	doc/doxygen/doxyfile.mk	/^DOCBOOK_OUTPUT         = docbook$/;"	m
DOCSET_BUNDLE_ID	doc/doxygen/doxyfile.mk	/^DOCSET_BUNDLE_ID       = org.doxygen.Project$/;"	m
DOCSET_FEEDNAME	doc/doxygen/doxyfile.mk	/^DOCSET_FEEDNAME        = "Doxygen generated docs"$/;"	m
DOCSET_PUBLISHER_ID	doc/doxygen/doxyfile.mk	/^DOCSET_PUBLISHER_ID    = org.doxygen.Publisher$/;"	m
DOCSET_PUBLISHER_NAME	doc/doxygen/doxyfile.mk	/^DOCSET_PUBLISHER_NAME  = Publisher$/;"	m
DOT	src/old/triang/triangulate.h	129;"	d
DOTFILE_DIRS	doc/doxygen/doxyfile.mk	/^DOTFILE_DIRS           =$/;"	m
DOT_CLEANUP	doc/doxygen/doxyfile.mk	/^DOT_CLEANUP            = YES$/;"	m
DOT_FONTNAME	doc/doxygen/doxyfile.mk	/^DOT_FONTNAME           = Helvetica$/;"	m
DOT_FONTPATH	doc/doxygen/doxyfile.mk	/^DOT_FONTPATH           =$/;"	m
DOT_FONTSIZE	doc/doxygen/doxyfile.mk	/^DOT_FONTSIZE           = 10$/;"	m
DOT_GRAPH_MAX_NODES	doc/doxygen/doxyfile.mk	/^DOT_GRAPH_MAX_NODES    = 50$/;"	m
DOT_IMAGE_FORMAT	doc/doxygen/doxyfile.mk	/^DOT_IMAGE_FORMAT       = png$/;"	m
DOT_MULTI_TARGETS	doc/doxygen/doxyfile.mk	/^DOT_MULTI_TARGETS      = YES$/;"	m
DOT_NUM_THREADS	doc/doxygen/doxyfile.mk	/^DOT_NUM_THREADS        = 0$/;"	m
DOT_PATH	doc/doxygen/doxyfile.mk	/^DOT_PATH               =$/;"	m
DOT_TRANSPARENT	doc/doxygen/doxyfile.mk	/^DOT_TRANSPARENT        = NO$/;"	m
DOXYFILE_ENCODING	doc/doxygen/doxyfile.mk	/^DOXYFILE_ENCODING      = UTF-8$/;"	m
DSQR	src/old/fmg/nrutil.h	8;"	d
D_COND	src/old/const.h	54;"	d
D_COND	src/old/triang/const.h	54;"	d
D_INSU	src/old/const.h	53;"	d
D_INSU	src/old/triang/const.h	53;"	d
Detailed Description	doc/latex/multigrid_8h.tex	/^\\end{DoxyCompactItemize}$/;"	u
Detailed Description	doc/latex/pusher_8h.tex	/^\\begin{DoxyCompactList}\\small\\item\\em Accelerates particles using 1st order interpolation. Fixed to 3\\+D. \\end{DoxyCompactList}\\end{DoxyCompactItemize}$/;"	u
Detailed Description	doc/latex/structGrid.tex	/^\\begin{DoxyCompactList}\\small\\item\\em H\\+D\\+F5 file space description. \\end{DoxyCompactList}\\end{DoxyCompactItemize}$/;"	u
Detailed Description	doc/latex/structMpiInfo.tex	/^\\begin{DoxyCompactList}\\small\\item\\em Factor for converting position to subdomain (n\\+Dims elements) \\end{DoxyCompactList}\\end{DoxyCompactItemize}$/;"	u
Detailed Description	doc/latex/structMultigrid.tex	/^\\begin{DoxyCompactList}\\small\\item\\em Function pointer to prolongator. \\end{DoxyCompactList}\\end{DoxyCompactItemize}$/;"	u
Detailed Description	doc/latex/structPopulation.tex	/^\\begin{DoxyCompactList}\\small\\item\\em H\\+D\\+F5 file handler. \\end{DoxyCompactList}\\end{DoxyCompactItemize}$/;"	u
Detailed Description	doc/latex/structTimer.tex	/^\\begin{DoxyCompactList}\\small\\item\\em Rank of node or negative to turn off timer. \\end{DoxyCompactList}\\end{DoxyCompactItemize}$/;"	u
ECLIPSE_DOC_ID	doc/doxygen/doxyfile.mk	/^ECLIPSE_DOC_ID         = org.doxygen.Project$/;"	m
ELECTRON_MASS	src/pinc.h	26;"	d
ENABLED_SECTIONS	doc/doxygen/doxyfile.mk	/^ENABLED_SECTIONS       =$/;"	m
ENABLE_PREPROCESSING	doc/doxygen/doxyfile.mk	/^ENABLE_PREPROCESSING   = YES$/;"	m
ENUM_VALUES_PER_LINE	doc/doxygen/doxyfile.mk	/^ENUM_VALUES_PER_LINE   = 4$/;"	m
EPS0	src/old/const.h	18;"	d
EPS0	src/old/triang/const.h	18;"	d
ERROR	src/pinc.h	/^	ERROR = 0x02,		\/\/\/< Error which makes the program unable to proceed. Program will stop.$/;"	e	enum:__anon5
EXAMPLE_PATH	doc/doxygen/doxyfile.mk	/^EXAMPLE_PATH           =$/;"	m
EXAMPLE_PATTERNS	doc/doxygen/doxyfile.mk	/^EXAMPLE_PATTERNS       =$/;"	m
EXAMPLE_RECURSIVE	doc/doxygen/doxyfile.mk	/^EXAMPLE_RECURSIVE      = NO$/;"	m
EXCLUDE	doc/doxygen/doxyfile.mk	/^EXCLUDE                =$/;"	m
EXCLUDE_PATTERNS	doc/doxygen/doxyfile.mk	/^EXCLUDE_PATTERNS       =$/;"	m
EXCLUDE_SYMBOLS	doc/doxygen/doxyfile.mk	/^EXCLUDE_SYMBOLS        =$/;"	m
EXCLUDE_SYMLINKS	doc/doxygen/doxyfile.mk	/^EXCLUDE_SYMLINKS       = NO$/;"	m
EXEC	makefile	/^EXEC	= pinc$/;"	m
EXEC	src/old/triang/makefile	/^EXEC=   dust$(FILE_EXT)$/;"	m
EXPAND_AS_DEFINED	doc/doxygen/doxyfile.mk	/^EXPAND_AS_DEFINED      =$/;"	m
EXPAND_ONLY_PREDEF	doc/doxygen/doxyfile.mk	/^EXPAND_ONLY_PREDEF     = NO$/;"	m
EXTENSION_MAPPING	doc/doxygen/doxyfile.mk	/^EXTENSION_MAPPING      =$/;"	m
EXTERNAL_GROUPS	doc/doxygen/doxyfile.mk	/^EXTERNAL_GROUPS        = YES$/;"	m
EXTERNAL_PAGES	doc/doxygen/doxyfile.mk	/^EXTERNAL_PAGES         = YES$/;"	m
EXTERNAL_SEARCH	doc/doxygen/doxyfile.mk	/^EXTERNAL_SEARCH        = NO$/;"	m
EXTERNAL_SEARCH_ID	doc/doxygen/doxyfile.mk	/^EXTERNAL_SEARCH_ID     =$/;"	m
EXTRACT_ALL	doc/doxygen/doxyfile.mk	/^EXTRACT_ALL            = NO$/;"	m
EXTRACT_ANON_NSPACES	doc/doxygen/doxyfile.mk	/^EXTRACT_ANON_NSPACES   = NO$/;"	m
EXTRACT_LOCAL_CLASSES	doc/doxygen/doxyfile.mk	/^EXTRACT_LOCAL_CLASSES  = YES$/;"	m
EXTRACT_LOCAL_METHODS	doc/doxygen/doxyfile.mk	/^EXTRACT_LOCAL_METHODS  = NO$/;"	m
EXTRACT_PACKAGE	doc/doxygen/doxyfile.mk	/^EXTRACT_PACKAGE        = NO$/;"	m
EXTRACT_PRIVATE	doc/doxygen/doxyfile.mk	/^EXTRACT_PRIVATE        = NO$/;"	m
EXTRACT_STATIC	doc/doxygen/doxyfile.mk	/^EXTRACT_STATIC         = YES$/;"	m
EXTRA_PACKAGES	doc/doxygen/doxyfile.mk	/^EXTRA_PACKAGES         =$/;"	m
EXTRA_SEARCH_MAPPINGS	doc/doxygen/doxyfile.mk	/^EXTRA_SEARCH_MAPPINGS  =$/;"	m
EXT_LINKS_IN_WINDOW	doc/doxygen/doxyfile.mk	/^EXT_LINKS_IN_WINDOW    = NO$/;"	m
FALSE	src/old/triang/interface.h	5;"	d
FALSE	src/old/triang/triangulate.h	84;"	d
FILE_EXT	src/old/triang/makefile	/^FILE_EXT = $/;"	m
FILE_VERSION_FILTER	doc/doxygen/doxyfile.mk	/^FILE_VERSION_FILTER    =$/;"	m
FILTER_PATTERNS	doc/doxygen/doxyfile.mk	/^FILTER_PATTERNS        =$/;"	m
FILTER_SOURCE_FILES	doc/doxygen/doxyfile.mk	/^FILTER_SOURCE_FILES    = NO$/;"	m
FILTER_SOURCE_PATTERNS	doc/doxygen/doxyfile.mk	/^FILTER_SOURCE_PATTERNS =$/;"	m
FIRSTPT	src/old/triang/triangulate.h	87;"	d
FMAX	src/old/fmg/nrutil.h	19;"	d
FMIN	src/old/fmg/nrutil.h	23;"	d
FORCE_LOCAL_INCLUDES	doc/doxygen/doxyfile.mk	/^FORCE_LOCAL_INCLUDES   = NO$/;"	m
FORMULA_FONTSIZE	doc/doxygen/doxyfile.mk	/^FORMULA_FONTSIZE       = 10$/;"	m
FORMULA_TRANSPARENT	doc/doxygen/doxyfile.mk	/^FORMULA_TRANSPARENT    = YES$/;"	m
FP_EQUAL	src/old/triang/triangulate.h	131;"	d
FREE_ARG	src/old/fmg/nrutil.c	10;"	d	file:
FREE_ARG	src/old/fmg/nrutil.c	343;"	d	file:
FREE_ARGG	src/old/shortcuts.c	25;"	d	file:
FREE_ARGG	src/old/triang/shortcuts.c	25;"	d	file:
FULL_PATH_NAMES	doc/doxygen/doxyfile.mk	/^FULL_PATH_NAMES        = YES$/;"	m
File Documentation	doc/latex/refman.tex	/^\\input{structTimer}$/;"	c
File Index	doc/latex/refman.tex	/^\\input{annotated}$/;"	c
File List	doc/latex/files.tex	/^\\section{File List}$/;"	s
File Structure	doc/introduction/main.tex	/^Finally, simulation .h5-files should not be part of the repository. They are incredibly large and there is also no reason to have version control on them; once a simulation is successfully run, and maybe even used in publications, it should be considered static. Simulations and their input files are also not, strictly speaking, part of the program.$/;"	u
Files	doc/latex/dir_13e138d54eb8818da29c3992edef070a.tex	/^\\label{dir_13e138d54eb8818da29c3992edef070a}\\index{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/test Directory Reference@{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/test Directory Reference}}$/;"	u
Files	doc/latex/dir_68267d1309a1af8e8297ef4c3efbcdba.tex	/^\\label{dir_68267d1309a1af8e8297ef4c3efbcdba}\\index{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src Directory Reference@{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src Directory Reference}}$/;"	u
Formatting and language	doc/introduction/main.tex	/^\\end{itemize}$/;"	u
Fs	src/old/const.h	/^double *Fs; \/*array for forces*\/$/;"	v
Fs	src/old/triang/const.h	/^double *Fs; \/*array for forces*\/$/;"	v
FsEy	src/old/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
FsEy	src/old/triang/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
FsEz	src/old/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
FsEz	src/old/triang/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
FsMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
FsMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
Fs_nodust	src/old/const.h	/^double *Fs_nodust;$/;"	v
Fs_nodust	src/old/triang/const.h	/^double *Fs_nodust;$/;"	v
Function Documentation	doc/latex/multigrid_8h.tex	/^Functions dealing with the initialisation and destruction of multigrid structures and a multigrid solver containing restriction, prolongation operatorors and smoothers $/;"	u
Function Documentation	doc/latex/pusher_8h.tex	/^All parts of a standard particle pusher is implemented herein, including particle mover, particle accelerators (leapfrog, boris) and interpolation schemes of various orders. $/;"	u
Functions	doc/latex/multigrid_8h.tex	/^\\begin{DoxyCompactList}\\small\\item\\em Contains the grids needed in a multigrid solver, as well as other specifications. \\end{DoxyCompactList}\\end{DoxyCompactItemize}$/;"	u
Functions	doc/latex/pusher_8h.tex	/^Particle Pusher.  $/;"	u
GENERATE_AUTOGEN_DEF	doc/doxygen/doxyfile.mk	/^GENERATE_AUTOGEN_DEF   = NO$/;"	m
GENERATE_BUGLIST	doc/doxygen/doxyfile.mk	/^GENERATE_BUGLIST       = YES$/;"	m
GENERATE_CHI	doc/doxygen/doxyfile.mk	/^GENERATE_CHI           = NO$/;"	m
GENERATE_DEPRECATEDLIST	doc/doxygen/doxyfile.mk	/^GENERATE_DEPRECATEDLIST= YES$/;"	m
GENERATE_DOCBOOK	doc/doxygen/doxyfile.mk	/^GENERATE_DOCBOOK       = NO$/;"	m
GENERATE_DOCSET	doc/doxygen/doxyfile.mk	/^GENERATE_DOCSET        = NO$/;"	m
GENERATE_ECLIPSEHELP	doc/doxygen/doxyfile.mk	/^GENERATE_ECLIPSEHELP   = NO$/;"	m
GENERATE_HTML	doc/doxygen/doxyfile.mk	/^GENERATE_HTML          = YES$/;"	m
GENERATE_HTMLHELP	doc/doxygen/doxyfile.mk	/^GENERATE_HTMLHELP      = NO$/;"	m
GENERATE_LATEX	doc/doxygen/doxyfile.mk	/^GENERATE_LATEX         = YES$/;"	m
GENERATE_LEGEND	doc/doxygen/doxyfile.mk	/^GENERATE_LEGEND        = YES$/;"	m
GENERATE_MAN	doc/doxygen/doxyfile.mk	/^GENERATE_MAN           = NO$/;"	m
GENERATE_PERLMOD	doc/doxygen/doxyfile.mk	/^GENERATE_PERLMOD       = NO$/;"	m
GENERATE_QHP	doc/doxygen/doxyfile.mk	/^GENERATE_QHP           = NO$/;"	m
GENERATE_RTF	doc/doxygen/doxyfile.mk	/^GENERATE_RTF           = NO$/;"	m
GENERATE_TAGFILE	doc/doxygen/doxyfile.mk	/^GENERATE_TAGFILE       =$/;"	m
GENERATE_TESTLIST	doc/doxygen/doxyfile.mk	/^GENERATE_TESTLIST      = YES$/;"	m
GENERATE_TODOLIST	doc/doxygen/doxyfile.mk	/^GENERATE_TODOLIST      = YES$/;"	m
GENERATE_TREEVIEW	doc/doxygen/doxyfile.mk	/^GENERATE_TREEVIEW      = NO$/;"	m
GENERATE_XML	doc/doxygen/doxyfile.mk	/^GENERATE_XML           = NO$/;"	m
GETLINESBUFFER	proof of concept/stool/stool.c	8;"	d	file:
GETLINESBUFFER	proof of concept/stool/stool.h	17;"	d
GNU Debugger  GDB 	doc/introduction/main.tex	/^As a final note, although the PINC Timer has a very high resolution the accuracy is more influenced by random variations and overhead when measuring short times. A remedy to this is to put the operations to be measured in a loop to get the timer up to the the millisecond\/second range. To get an idea of the resolution, the overhead and the accuracy of \\lstinline$tMsg()$ try measuring \\lstinline$tMsg()$ itself by running it in a loop\\footnote{Technically the timer is measured at the beginning of \\lstinline$tMsg()$ and reset at the end of \\lstinline$tMsg()$ such that \\texttt{diff} actually shows the time between, but not including, calls to \\lstinline$tMsg()$. This gives more accurate readings of what comes in between. On my computer \\lstinline$tMsg()$ executes in approximately $5 \\mu s$ but the overhead of the measurements is only approximately 200~ns. The discrepancy is largely due the fact that printing to the terminal takes time.}.$/;"	u
GONE	src/old/const.h	46;"	d
GONE	src/old/triang/const.h	46;"	d
GPDATA	proof of concept/stool/stool.c	10;"	d	file:
GPDATA	proof of concept/stool/stool.h	19;"	d
GPSCRIPT	proof of concept/stool/stool.c	9;"	d	file:
GPSCRIPT	proof of concept/stool/stool.h	18;"	d
GProf	doc/introduction/main.tex	/^Finally, beware that running Valgrind degrades execution speed.$/;"	u
GRAPHICAL_HIERARCHY	doc/doxygen/doxyfile.mk	/^GRAPHICAL_HIERARCHY    = YES$/;"	m
GROUP_GRAPHS	doc/doxygen/doxyfile.mk	/^GROUP_GRAPHS           = YES$/;"	m
Grid	src/pinc.h	/^} Grid;$/;"	t	typeref:struct:__anon3
Grid Struct Reference	doc/latex/structGrid.tex	/^\\hypertarget{structGrid}{}\\section{Grid Struct Reference}$/;"	s
Gx	src/old/const.h	/^double Gx,Gy,Gz; \/*no. of grid cells in x and y directions*\/$/;"	v
Gx	src/old/triang/const.h	/^double Gx,Gy,Gz; \/*no. of grid cells in x and y directions*\/$/;"	v
Gy	src/old/const.h	/^double Gx,Gy,Gz; \/*no. of grid cells in x and y directions*\/$/;"	v
Gy	src/old/triang/const.h	/^double Gx,Gy,Gz; \/*no. of grid cells in x and y directions*\/$/;"	v
Gz	src/old/const.h	/^double Gx,Gy,Gz; \/*no. of grid cells in x and y directions*\/$/;"	v
Gz	src/old/triang/const.h	/^double Gx,Gy,Gz; \/*no. of grid cells in x and y directions*\/$/;"	v
HALO_H	proof of concept/get boundary/challenge/halo.h	2;"	d
HAVE_DOT	doc/doxygen/doxyfile.mk	/^HAVE_DOT               = NO$/;"	m
HDIR	makefile	/^HDIR	= src$/;"	m
HEAD	makefile	/^HEAD	= $(patsubst %,$(HDIR)\/%,$(HEAD_))$/;"	m
HEAD_	makefile	/^HEAD_	= pinc.h pusher.h multigrid.h$/;"	m
HHC_LOCATION	doc/doxygen/doxyfile.mk	/^HHC_LOCATION           =$/;"	m
HIDE_FRIEND_COMPOUNDS	doc/doxygen/doxyfile.mk	/^HIDE_FRIEND_COMPOUNDS  = NO$/;"	m
HIDE_IN_BODY_DOCS	doc/doxygen/doxyfile.mk	/^HIDE_IN_BODY_DOCS      = NO$/;"	m
HIDE_SCOPE_NAMES	doc/doxygen/doxyfile.mk	/^HIDE_SCOPE_NAMES       = NO$/;"	m
HIDE_UNDOC_CLASSES	doc/doxygen/doxyfile.mk	/^HIDE_UNDOC_CLASSES     = NO$/;"	m
HIDE_UNDOC_MEMBERS	doc/doxygen/doxyfile.mk	/^HIDE_UNDOC_MEMBERS     = NO$/;"	m
HIDE_UNDOC_RELATIONS	doc/doxygen/doxyfile.mk	/^HIDE_UNDOC_RELATIONS   = YES$/;"	m
HTML_COLORSTYLE_GAMMA	doc/doxygen/doxyfile.mk	/^HTML_COLORSTYLE_GAMMA  = 80$/;"	m
HTML_COLORSTYLE_HUE	doc/doxygen/doxyfile.mk	/^HTML_COLORSTYLE_HUE    = 220$/;"	m
HTML_COLORSTYLE_SAT	doc/doxygen/doxyfile.mk	/^HTML_COLORSTYLE_SAT    = 100$/;"	m
HTML_DYNAMIC_SECTIONS	doc/doxygen/doxyfile.mk	/^HTML_DYNAMIC_SECTIONS  = NO$/;"	m
HTML_EXTRA_FILES	doc/doxygen/doxyfile.mk	/^HTML_EXTRA_FILES       =$/;"	m
HTML_EXTRA_STYLESHEET	doc/doxygen/doxyfile.mk	/^HTML_EXTRA_STYLESHEET  =$/;"	m
HTML_FILE_EXTENSION	doc/doxygen/doxyfile.mk	/^HTML_FILE_EXTENSION    = .html$/;"	m
HTML_FOOTER	doc/doxygen/doxyfile.mk	/^HTML_FOOTER            =$/;"	m
HTML_HEADER	doc/doxygen/doxyfile.mk	/^HTML_HEADER            =$/;"	m
HTML_INDEX_NUM_ENTRIES	doc/doxygen/doxyfile.mk	/^HTML_INDEX_NUM_ENTRIES = 100$/;"	m
HTML_OUTPUT	doc/doxygen/doxyfile.mk	/^HTML_OUTPUT            = html$/;"	m
HTML_STYLESHEET	doc/doxygen/doxyfile.mk	/^HTML_STYLESHEET        =$/;"	m
HTML_TIMESTAMP	doc/doxygen/doxyfile.mk	/^HTML_TIMESTAMP         = YES$/;"	m
IDL_PROPERTY_SUPPORT	doc/doxygen/doxyfile.mk	/^IDL_PROPERTY_SUPPORT   = YES$/;"	m
IGNORE_PREFIX	doc/doxygen/doxyfile.mk	/^IGNORE_PREFIX          =$/;"	m
IMAGE_PATH	doc/doxygen/doxyfile.mk	/^IMAGE_PATH             =$/;"	m
IMAX	src/old/fmg/nrutil.h	35;"	d
IMIN	src/old/fmg/nrutil.h	39;"	d
INCLUDED_BY_GRAPH	doc/doxygen/doxyfile.mk	/^INCLUDED_BY_GRAPH      = YES$/;"	m
INCLUDE_FILE_PATTERNS	doc/doxygen/doxyfile.mk	/^INCLUDE_FILE_PATTERNS  =$/;"	m
INCLUDE_GRAPH	doc/doxygen/doxyfile.mk	/^INCLUDE_GRAPH          = YES$/;"	m
INCLUDE_PATH	doc/doxygen/doxyfile.mk	/^INCLUDE_PATH           =$/;"	m
INFINITY	src/old/triang/triangulate.h	91;"	d
INHERIT_DOCS	doc/doxygen/doxyfile.mk	/^INHERIT_DOCS           = YES$/;"	m
INI_INVALID_KEY	lib/iniparser/src/iniparser.c	15;"	d	file:
INLINE_GROUPED_CLASSES	doc/doxygen/doxyfile.mk	/^INLINE_GROUPED_CLASSES = NO$/;"	m
INLINE_INFO	doc/doxygen/doxyfile.mk	/^INLINE_INFO            = YES$/;"	m
INLINE_INHERITED_MEMB	doc/doxygen/doxyfile.mk	/^INLINE_INHERITED_MEMB  = NO$/;"	m
INLINE_SIMPLE_STRUCTS	doc/doxygen/doxyfile.mk	/^INLINE_SIMPLE_STRUCTS  = NO$/;"	m
INLINE_SOURCES	doc/doxygen/doxyfile.mk	/^INLINE_SOURCES         = NO$/;"	m
INPUT_ENCODING	doc/doxygen/doxyfile.mk	/^INPUT_ENCODING         = UTF-8$/;"	m
INPUT_FILTER	doc/doxygen/doxyfile.mk	/^INPUT_FILTER           =$/;"	m
INTERACTIVE_SVG	doc/doxygen/doxyfile.mk	/^INTERACTIVE_SVG        = NO$/;"	m
INTERNAL_DOCS	doc/doxygen/doxyfile.mk	/^INTERNAL_DOCS          = NO$/;"	m
Indices	doc/introduction/main.tex	/^The only exception I can think of when naming the struct itself is necessary is when using opaque datatypes, if that will ever be relevant.$/;"	b
Introduction	doc/introduction/main.tex	/^\\newpage$/;"	s
JAVADOC_AUTOBRIEF	doc/doxygen/doxyfile.mk	/^JAVADOC_AUTOBRIEF      = NO$/;"	m
KE	src/old/const.h	/^double *KE; \/*array for the kinetic energy*\/$/;"	v
KE	src/old/triang/const.h	/^double *KE; \/*array for the kinetic energy*\/$/;"	v
KEMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
KEMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
KE_off	src/old/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
KE_off	src/old/triang/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
LASTPT	src/old/triang/triangulate.h	88;"	d
LATEX_BATCHMODE	doc/doxygen/doxyfile.mk	/^LATEX_BATCHMODE        = NO$/;"	m
LATEX_BIB_STYLE	doc/doxygen/doxyfile.mk	/^LATEX_BIB_STYLE        = plain$/;"	m
LATEX_CMD_NAME	doc/doxygen/doxyfile.mk	/^LATEX_CMD_NAME         = latex$/;"	m
LATEX_EXTRA_FILES	doc/doxygen/doxyfile.mk	/^LATEX_EXTRA_FILES      =$/;"	m
LATEX_FOOTER	doc/doxygen/doxyfile.mk	/^LATEX_FOOTER           =$/;"	m
LATEX_HEADER	doc/doxygen/doxyfile.mk	/^LATEX_HEADER           =$/;"	m
LATEX_HIDE_INDICES	doc/doxygen/doxyfile.mk	/^LATEX_HIDE_INDICES     = NO$/;"	m
LATEX_OUTPUT	doc/doxygen/doxyfile.mk	/^LATEX_OUTPUT           = latex$/;"	m
LATEX_SOURCE_CODE	doc/doxygen/doxyfile.mk	/^LATEX_SOURCE_CODE      = NO$/;"	m
LAYOUT_FILE	doc/doxygen/doxyfile.mk	/^LAYOUT_FILE            =$/;"	m
LDFLAGS	lib/iniparser/Makefile	/^LDFLAGS = -Wl,-rpath -Wl,\/usr\/lib -Wl,-rpath,\/usr\/lib$/;"	m
LDIR	makefile	/^LDIR	= lib$/;"	m
LDSHFLAGS	lib/iniparser/Makefile	/^LDSHFLAGS = -shared -Wl,-Bsymbolic  -Wl,-rpath -Wl,\/usr\/lib -Wl,-rpath,\/usr\/lib$/;"	m
LENGTH	src/old/triang/monotone.c	5;"	d	file:
LFLAGS	lib/iniparser/test/Makefile	/^LFLAGS  = -L.. -liniparser$/;"	m
LIBHEAD	makefile	/^LIBHEAD = $(patsubst %,$(LDIR)\/%,$(LIBHEAD_))$/;"	m
LIBHEAD_	makefile	/^LIBHEAD_= iniparser\/src\/iniparser.h$/;"	m
LIBOBJ	makefile	/^LIBOBJ = $(patsubst %,$(LDIR)\/%,$(LIBOBJ_))$/;"	m
LIBOBJ_	makefile	/^LIBOBJ_	= iniparser\/libiniparser.a$/;"	m
LIBS	src/old/triang/makefile	/^LIBS = -lm $/;"	m
LINE_COMMENT	lib/iniparser/src/iniparser.c	/^    LINE_COMMENT,$/;"	e	enum:_line_status_	file:
LINE_EMPTY	lib/iniparser/src/iniparser.c	/^    LINE_EMPTY,$/;"	e	enum:_line_status_	file:
LINE_ERROR	lib/iniparser/src/iniparser.c	/^    LINE_ERROR,$/;"	e	enum:_line_status_	file:
LINE_SECTION	lib/iniparser/src/iniparser.c	/^    LINE_SECTION,$/;"	e	enum:_line_status_	file:
LINE_UNPROCESSED	lib/iniparser/src/iniparser.c	/^    LINE_UNPROCESSED,$/;"	e	enum:_line_status_	file:
LINE_VALUE	lib/iniparser/src/iniparser.c	/^    LINE_VALUE$/;"	e	enum:_line_status_	file:
LIST_SIZE	src/old/const.h	60;"	d
LIST_SIZE	src/old/triang/const.h	60;"	d
LMAX	src/old/fmg/nrutil.h	27;"	d
LMIN	src/old/fmg/nrutil.h	31;"	d
LOOKUP_CACHE_SIZE	doc/doxygen/doxyfile.mk	/^LOOKUP_CACHE_SIZE      = 0$/;"	m
Lx	src/old/const.h	/^double Lx,Ly,Lz; \/*dimensions in x and y axis in meters*\/$/;"	v
Lx	src/old/triang/const.h	/^double Lx,Ly,Lz; \/*dimensions in x and y axis in meters*\/$/;"	v
Lx_MAX	src/old/const.h	23;"	d
Lx_MAX	src/old/triang/const.h	23;"	d
Ly	src/old/const.h	/^double Lx,Ly,Lz; \/*dimensions in x and y axis in meters*\/$/;"	v
Ly	src/old/triang/const.h	/^double Lx,Ly,Lz; \/*dimensions in x and y axis in meters*\/$/;"	v
Ly_MAX	src/old/const.h	24;"	d
Ly_MAX	src/old/triang/const.h	24;"	d
Lz	src/old/const.h	/^double Lx,Ly,Lz; \/*dimensions in x and y axis in meters*\/$/;"	v
Lz	src/old/triang/const.h	/^double Lx,Ly,Lz; \/*dimensions in x and y axis in meters*\/$/;"	v
Lz_MAX	src/old/const.h	25;"	d
Lz_MAX	src/old/triang/const.h	25;"	d
MACRO_EXPANSION	doc/doxygen/doxyfile.mk	/^MACRO_EXPANSION        = NO$/;"	m
MAKEINDEX_CMD_NAME	doc/doxygen/doxyfile.mk	/^MAKEINDEX_CMD_NAME     = makeindex$/;"	m
MAN_EXTENSION	doc/doxygen/doxyfile.mk	/^MAN_EXTENSION          = .3$/;"	m
MAN_LINKS	doc/doxygen/doxyfile.mk	/^MAN_LINKS              = NO$/;"	m
MAN_OUTPUT	doc/doxygen/doxyfile.mk	/^MAN_OUTPUT             = man$/;"	m
MARKDOWN_SUPPORT	doc/doxygen/doxyfile.mk	/^MARKDOWN_SUPPORT       = YES$/;"	m
MATHJAX_CODEFILE	doc/doxygen/doxyfile.mk	/^MATHJAX_CODEFILE       =$/;"	m
MATHJAX_EXTENSIONS	doc/doxygen/doxyfile.mk	/^MATHJAX_EXTENSIONS     =$/;"	m
MATHJAX_FORMAT	doc/doxygen/doxyfile.mk	/^MATHJAX_FORMAT         = HTML-CSS$/;"	m
MATHJAX_RELPATH	doc/doxygen/doxyfile.mk	/^MATHJAX_RELPATH        = http:\/\/cdn.mathjax.org\/mathjax\/latest$/;"	m
MAX	src/old/triang/triangulate.h	123;"	d
MAXVALSZ	lib/iniparser/src/dictionary.c	24;"	d	file:
MAX_DOT_GRAPH_DEPTH	doc/doxygen/doxyfile.mk	/^MAX_DOT_GRAPH_DEPTH    = 0$/;"	m
MAX_INITIALIZER_LINES	doc/doxygen/doxyfile.mk	/^MAX_INITIALIZER_LINES  = 30$/;"	m
MIN	src/old/triang/triangulate.h	124;"	d
MSCFILE_DIRS	doc/doxygen/doxyfile.mk	/^MSCFILE_DIRS           =$/;"	m
MSCGEN_PATH	doc/doxygen/doxyfile.mk	/^MSCGEN_PATH            =$/;"	m
MULTIGRID_H	src/multigrid.h	2;"	d
MULTILINE_CPP_IS_BRIEF	doc/doxygen/doxyfile.mk	/^MULTILINE_CPP_IS_BRIEF = NO$/;"	m
Mass_0	src/old/const.h	19;"	d
Mass_0	src/old/triang/const.h	19;"	d
Mass_1	src/old/const.h	20;"	d
Mass_1	src/old/triang/const.h	20;"	d
Mpi   Info Struct Reference	doc/latex/structMpiInfo.tex	/^\\hypertarget{structMpiInfo}{}\\section{Mpi\\+Info Struct Reference}$/;"	s
MpiInfo	src/pinc.h	/^} MpiInfo;$/;"	t	typeref:struct:__anon2
Multigrid	src/multigrid.h	/^} Multigrid;$/;"	t	typeref:struct:__anon6
Multigrid Struct Reference	doc/latex/structMultigrid.tex	/^\\hypertarget{structMultigrid}{}\\section{Multigrid Struct Reference}$/;"	s
NCYCLES	src/old/const.h	317;"	d
NCYCLES	src/old/triang/const.h	317;"	d
NGMAX	src/old/const.h	314;"	d
NGMAX	src/old/fmg/fmg.c	325;"	d	file:
NGMAX	src/old/triang/const.h	314;"	d
NOF	src/old/const.h	34;"	d
NOF	src/old/triang/const.h	34;"	d
NORMAL	src/old/const.h	49;"	d
NORMAL	src/old/triang/const.h	49;"	d
NPART_MAX	src/old/const.h	31;"	d
NPART_MAX	src/old/triang/const.h	31;"	d
NPOST	src/old/const.h	316;"	d
NPOST	src/old/fmg/fmg.c	12;"	d	file:
NPOST	src/old/fmg/fmg.c	324;"	d	file:
NPOST	src/old/triang/const.h	316;"	d
NPRE	src/old/const.h	315;"	d
NPRE	src/old/fmg/fmg.c	11;"	d	file:
NPRE	src/old/fmg/fmg.c	323;"	d	file:
NPRE	src/old/triang/const.h	315;"	d
NRANSI	src/old/fmg/fmg.c	326;"	d	file:
NRANSI	src/old/fmg/fmg.c	7;"	d	file:
NR_END	src/old/fmg/nrutil.c	342;"	d	file:
NR_END	src/old/fmg/nrutil.c	9;"	d	file:
NR_ENDD	src/old/shortcuts.c	24;"	d	file:
NR_ENDD	src/old/triang/shortcuts.c	24;"	d	file:
NVALS	lib/iniparser/src/dictionary.c	359;"	d	file:
Naming Conventions	doc/introduction/main.tex	/^\\section{Coding Practices}$/;"	u
Nd	script/distribution.py	/^Nd = vel.shape[1]	# Number of dimensions$/;"	v
Np	script/distribution.py	/^Np = vel.shape[0]	# Number of particles$/;"	v
OBJ	makefile	/^OBJ		= $(patsubst %,$(ODIR)\/%,$(OBJ_))$/;"	m
OBJS	lib/iniparser/Makefile	/^OBJS = $(SRCS:.c=.o)$/;"	m
OBJ_	makefile	/^OBJ_	= $(SRC_:.c=.o)$/;"	m
ODIR	makefile	/^ODIR	= src\/obj$/;"	m
ONCE	src/pinc.h	/^	ONCE = 0x10			\/\/\/< Output message from all MPI-nodes. To be bitwise ORed.$/;"	e	enum:__anon5
OPTIMIZE_FOR_FORTRAN	doc/doxygen/doxyfile.mk	/^OPTIMIZE_FOR_FORTRAN   = NO$/;"	m
OPTIMIZE_OUTPUT_FOR_C	doc/doxygen/doxyfile.mk	/^OPTIMIZE_OUTPUT_FOR_C  = NO$/;"	m
OPTIMIZE_OUTPUT_JAVA	doc/doxygen/doxyfile.mk	/^OPTIMIZE_OUTPUT_JAVA   = NO$/;"	m
OPTIMIZE_OUTPUT_VHDL	doc/doxygen/doxyfile.mk	/^OPTIMIZE_OUTPUT_VHDL   = NO$/;"	m
OUTPUT_DIRECTORY	doc/doxygen/doxyfile.mk	/^OUTPUT_DIRECTORY       = ..\/$/;"	m
OUTPUT_LANGUAGE	doc/doxygen/doxyfile.mk	/^OUTPUT_LANGUAGE        = English$/;"	m
PAPER_TYPE	doc/doxygen/doxyfile.mk	/^PAPER_TYPE             = a4$/;"	m
PDF_HYPERLINKS	doc/doxygen/doxyfile.mk	/^PDF_HYPERLINKS         = YES$/;"	m
PE	src/old/const.h	/^double *PE;$/;"	v
PE	src/old/triang/const.h	/^double *PE;$/;"	v
PEMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
PEMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
PEMAXhalf	src/old/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
PEMAXhalf	src/old/triang/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
PERLMOD_LATEX	doc/doxygen/doxyfile.mk	/^PERLMOD_LATEX          = NO$/;"	m
PERLMOD_MAKEVAR_PREFIX	doc/doxygen/doxyfile.mk	/^PERLMOD_MAKEVAR_PREFIX =$/;"	m
PERLMOD_PRETTY	doc/doxygen/doxyfile.mk	/^PERLMOD_PRETTY         = YES$/;"	m
PERL_PATH	doc/doxygen/doxyfile.mk	/^PERL_PATH              = \/usr\/bin\/perl$/;"	m
PEtotal	src/old/const.h	/^double *PEtotal;$/;"	v
PEtotal	src/old/triang/const.h	/^double *PEtotal;$/;"	v
PEtotalMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
PEtotalMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
PI	src/main.local.c	24;"	d	file:
PI	src/test.old.c	24;"	d	file:
PINC_H	src/pinc.h	14;"	d
PREDEFINED	doc/doxygen/doxyfile.mk	/^PREDEFINED             =$/;"	m
PROBE	src/old/const.h	51;"	d
PROBE	src/old/triang/const.h	51;"	d
PROBEOBJECTS	src/old/triang/makefile	/^PROBEOBJECTS=	main.o \\$/;"	m
PROJECT_BRIEF	doc/doxygen/doxyfile.mk	/^PROJECT_BRIEF          =$/;"	m
PROJECT_LOGO	doc/doxygen/doxyfile.mk	/^PROJECT_LOGO           =$/;"	m
PROJECT_NAME	doc/doxygen/doxyfile.mk	/^PROJECT_NAME           = "PINC"$/;"	m
PROJECT_NUMBER	doc/doxygen/doxyfile.mk	/^PROJECT_NUMBER         =$/;"	m
PRSEG	src/old/const.h	57;"	d
PRSEG	src/old/triang/const.h	57;"	d
PUSHER_H	src/pusher.h	2;"	d
Population	src/pinc.h	/^} Population;$/;"	t	typeref:struct:__anon1
Population Struct Reference	doc/latex/structPopulation.tex	/^\\hypertarget{structPopulation}{}\\section{Population Struct Reference}$/;"	s
Program Structure	doc/introduction/main.tex	/^In functions not dealing with particle or grid quantities it is perfectly valid to use e.g. \\lstinline$i$ or \\lstinline$j$ as loop counters for generic purposes. Please also see the documentation of the \\lstinline$Grid$ and \\lstinline$Population$ structs to get a better understanding of naming conventions.$/;"	u
Public Attributes	doc/latex/structGrid.tex	/^{\\ttfamily \\#include $<$pinc.\\+h$>$}$/;"	u
Public Attributes	doc/latex/structMpiInfo.tex	/^{\\ttfamily \\#include $<$pinc.\\+h$>$}$/;"	u
Public Attributes	doc/latex/structMultigrid.tex	/^{\\ttfamily \\#include $<$multigrid.\\+h$>$}$/;"	u
Public Attributes	doc/latex/structPopulation.tex	/^{\\ttfamily \\#include $<$pinc.\\+h$>$}$/;"	u
Public Attributes	doc/latex/structTimer.tex	/^{\\ttfamily \\#include $<$pinc.\\+h$>$}$/;"	u
Q	src/old/const.h	21;"	d
Q	src/old/triang/const.h	21;"	d
QCH_FILE	doc/doxygen/doxyfile.mk	/^QCH_FILE               =$/;"	m
QHG_LOCATION	doc/doxygen/doxyfile.mk	/^QHG_LOCATION           =$/;"	m
QHP_CUST_FILTER_ATTRS	doc/doxygen/doxyfile.mk	/^QHP_CUST_FILTER_ATTRS  =$/;"	m
QHP_CUST_FILTER_NAME	doc/doxygen/doxyfile.mk	/^QHP_CUST_FILTER_NAME   =$/;"	m
QHP_NAMESPACE	doc/doxygen/doxyfile.mk	/^QHP_NAMESPACE          = org.doxygen.Project$/;"	m
QHP_SECT_FILTER_ATTRS	doc/doxygen/doxyfile.mk	/^QHP_SECT_FILTER_ATTRS  =$/;"	m
QHP_VIRTUAL_FOLDER	doc/doxygen/doxyfile.mk	/^QHP_VIRTUAL_FOLDER     = doc$/;"	m
QSIZE	src/old/triang/triangulate.h	79;"	d
QT_AUTOBRIEF	doc/doxygen/doxyfile.mk	/^QT_AUTOBRIEF           = NO$/;"	m
QUIET	doc/doxygen/doxyfile.mk	/^QUIET                  = NO$/;"	m
RANLIB	lib/iniparser/Makefile	/^RANLIB = true$/;"	m
RECURSIVE	doc/doxygen/doxyfile.mk	/^RECURSIVE              = NO$/;"	m
REFERENCED_BY_RELATION	doc/doxygen/doxyfile.mk	/^REFERENCED_BY_RELATION = NO$/;"	m
REFERENCES_LINK_SOURCE	doc/doxygen/doxyfile.mk	/^REFERENCES_LINK_SOURCE = YES$/;"	m
REFERENCES_RELATION	doc/doxygen/doxyfile.mk	/^REFERENCES_RELATION    = NO$/;"	m
REPEAT_BRIEF	doc/doxygen/doxyfile.mk	/^REPEAT_BRIEF           = YES$/;"	m
RM	lib/iniparser/Makefile	/^RM      = rm -f$/;"	m
RM	lib/iniparser/test/Makefile	/^RM      = rm -f$/;"	m
RTF_EXTENSIONS_FILE	doc/doxygen/doxyfile.mk	/^RTF_EXTENSIONS_FILE    =$/;"	m
RTF_HYPERLINKS	doc/doxygen/doxyfile.mk	/^RTF_HYPERLINKS         = NO$/;"	m
RTF_OUTPUT	doc/doxygen/doxyfile.mk	/^RTF_OUTPUT             = rtf$/;"	m
RTF_STYLESHEET_FILE	doc/doxygen/doxyfile.mk	/^RTF_STYLESHEET_FILE    =$/;"	m
S	src/old/const.h	37;"	d
S	src/old/const.h	39;"	d
S	src/old/triang/const.h	37;"	d
S	src/old/triang/const.h	39;"	d
SDIR	makefile	/^SDIR	= src$/;"	m
SEARCHDATA_FILE	doc/doxygen/doxyfile.mk	/^SEARCHDATA_FILE        = searchdata.xml$/;"	m
SEARCHENGINE	doc/doxygen/doxyfile.mk	/^SEARCHENGINE           = YES$/;"	m
SEARCHENGINE_URL	doc/doxygen/doxyfile.mk	/^SEARCHENGINE_URL       =$/;"	m
SEARCH_INCLUDES	doc/doxygen/doxyfile.mk	/^SEARCH_INCLUDES        = YES$/;"	m
SEGSIZE	src/old/triang/triangulate.h	73;"	d
SEPARATE_MEMBER_PAGES	doc/doxygen/doxyfile.mk	/^SEPARATE_MEMBER_PAGES  = NO$/;"	m
SERVER_BASED_SEARCH	doc/doxygen/doxyfile.mk	/^SERVER_BASED_SEARCH    = NO$/;"	m
SHLD	lib/iniparser/Makefile	/^SHLD = ${CC} ${CFLAGS}$/;"	m
SHORT_NAMES	doc/doxygen/doxyfile.mk	/^SHORT_NAMES            = NO$/;"	m
SHOW_FILES	doc/doxygen/doxyfile.mk	/^SHOW_FILES             = YES$/;"	m
SHOW_GROUPED_MEMB_INC	doc/doxygen/doxyfile.mk	/^SHOW_GROUPED_MEMB_INC  = NO$/;"	m
SHOW_INCLUDE_FILES	doc/doxygen/doxyfile.mk	/^SHOW_INCLUDE_FILES     = YES$/;"	m
SHOW_NAMESPACES	doc/doxygen/doxyfile.mk	/^SHOW_NAMESPACES        = YES$/;"	m
SHOW_USED_FILES	doc/doxygen/doxyfile.mk	/^SHOW_USED_FILES        = YES$/;"	m
SIGN	src/old/fmg/nrutil.h	42;"	d
SIP_SUPPORT	doc/doxygen/doxyfile.mk	/^SIP_SUPPORT            = NO$/;"	m
SKIP_FUNCTION_MACROS	doc/doxygen/doxyfile.mk	/^SKIP_FUNCTION_MACROS   = YES$/;"	m
SORT_BRIEF_DOCS	doc/doxygen/doxyfile.mk	/^SORT_BRIEF_DOCS        = NO$/;"	m
SORT_BY_SCOPE_NAME	doc/doxygen/doxyfile.mk	/^SORT_BY_SCOPE_NAME     = NO$/;"	m
SORT_GROUP_NAMES	doc/doxygen/doxyfile.mk	/^SORT_GROUP_NAMES       = NO$/;"	m
SORT_MEMBERS_CTORS_1ST	doc/doxygen/doxyfile.mk	/^SORT_MEMBERS_CTORS_1ST = NO$/;"	m
SORT_MEMBER_DOCS	doc/doxygen/doxyfile.mk	/^SORT_MEMBER_DOCS       = YES$/;"	m
SOURCE_BROWSER	doc/doxygen/doxyfile.mk	/^SOURCE_BROWSER         = NO$/;"	m
SOURCE_TOOLTIPS	doc/doxygen/doxyfile.mk	/^SOURCE_TOOLTIPS        = YES$/;"	m
SP_2DN_LEFT	src/old/triang/triangulate.h	112;"	d
SP_2DN_RIGHT	src/old/triang/triangulate.h	113;"	d
SP_2UP_2DN	src/old/triang/triangulate.h	109;"	d
SP_2UP_LEFT	src/old/triang/triangulate.h	110;"	d
SP_2UP_RIGHT	src/old/triang/triangulate.h	111;"	d
SP_NOSPLIT	src/old/triang/triangulate.h	114;"	d
SP_SIMPLE_LRDN	src/old/triang/triangulate.h	108;"	d
SP_SIMPLE_LRUP	src/old/triang/triangulate.h	107;"	d
SQR	src/old/fmg/nrutil.h	5;"	d
SRC	makefile	/^SRC		= $(patsubst %,$(SDIR)\/%,$(SRC_))$/;"	m
SRCS	lib/iniparser/Makefile	/^SRCS = src\/iniparser.c \\$/;"	m
SRC_	makefile	/^SRC_	= io.c aux.c population.c grid.c pusher.c multigrid.c$/;"	m
STATUS	src/pinc.h	/^	STATUS = 0x00,		\/\/\/< Normal status output about the progress of execution.$/;"	e	enum:__anon5
STOOL_H_	proof of concept/stool/stool.h	9;"	d
STRICT_PROTO_MATCHING	doc/doxygen/doxyfile.mk	/^STRICT_PROTO_MATCHING  = NO$/;"	m
STRIP_CODE_COMMENTS	doc/doxygen/doxyfile.mk	/^STRIP_CODE_COMMENTS    = YES$/;"	m
STRIP_FROM_INC_PATH	doc/doxygen/doxyfile.mk	/^STRIP_FROM_INC_PATH    =$/;"	m
STRIP_FROM_PATH	doc/doxygen/doxyfile.mk	/^STRIP_FROM_PATH        =$/;"	m
ST_INVALID	src/old/triang/triangulate.h	104;"	d
ST_VALID	src/old/triang/triangulate.h	103;"	d
SUBGROUPING	doc/doxygen/doxyfile.mk	/^SUBGROUPING            = YES$/;"	m
SUFFIXES	lib/iniparser/Makefile	/^SUFFIXES = .o .c .h .a .so .sl$/;"	m
S_LEFT	src/old/triang/triangulate.h	99;"	d
S_RIGHT	src/old/triang/triangulate.h	100;"	d
SearchBox	doc/html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchBox.Activate	doc/html/search/search.js	/^  this.Activate = function(isActive)$/;"	m
SearchBox.CloseResultsWindow	doc/html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m
SearchBox.CloseSelectionWindow	doc/html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m
SearchBox.DOMPopupSearchResults	doc/html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m
SearchBox.DOMPopupSearchResultsWindow	doc/html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m
SearchBox.DOMSearchBox	doc/html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m
SearchBox.DOMSearchClose	doc/html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m
SearchBox.DOMSearchField	doc/html/search/search.js	/^  this.DOMSearchField = function()$/;"	m
SearchBox.DOMSearchSelect	doc/html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m
SearchBox.DOMSearchSelectWindow	doc/html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m
SearchBox.OnSearchFieldChange	doc/html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m
SearchBox.OnSearchFieldFocus	doc/html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m
SearchBox.OnSearchSelectHide	doc/html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m
SearchBox.OnSearchSelectKey	doc/html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m
SearchBox.OnSearchSelectShow	doc/html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m
SearchBox.OnSelectItem	doc/html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m
SearchBox.Search	doc/html/search/search.js	/^  this.Search = function()$/;"	m
SearchBox.SelectItemCount	doc/html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m
SearchBox.SelectItemSet	doc/html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m
SearchResults	doc/html/search/search.js	/^function SearchResults(name)$/;"	c
SearchResults.FindChildElement	doc/html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m
SearchResults.Nav	doc/html/search/search.js	/^    this.Nav = function(evt,itemIndex)$/;"	m
SearchResults.NavChild	doc/html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m
SearchResults.NavNext	doc/html/search/search.js	/^    this.NavNext = function(index)$/;"	m
SearchResults.NavPrev	doc/html/search/search.js	/^    this.NavPrev = function(index)$/;"	m
SearchResults.ProcessKeys	doc/html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m
SearchResults.Search	doc/html/search/search.js	/^    this.Search = function(search)$/;"	m
SearchResults.Toggle	doc/html/search/search.js	/^    this.Toggle = function(id)$/;"	m
Setting up a Local Copy	doc/introduction/main.tex	/^If this section is unclear and more advice on Git is needed please refer to \\texttt{mn-fysrp-pic\/docs\/git.pdf} before making any changes to the repository.$/;"	s
Simple Timing using PINC texttt  Timer	doc/introduction/main.tex	/^Mind that a significant amount of time is necessary in order for GProf to be able to determine non-zero time.$/;"	u
Structs	doc/introduction/main.tex	/^		\\end{itemize}$/;"	b
TAB_SIZE	doc/doxygen/doxyfile.mk	/^TAB_SIZE               = 4$/;"	m
TAGFILES	doc/doxygen/doxyfile.mk	/^TAGFILES               =$/;"	m
TCL_SUBST	doc/doxygen/doxyfile.mk	/^TCL_SUBST              =$/;"	m
TDIR	makefile	/^TDIR	= test$/;"	m
TEMPLATE_RELATIONS	doc/doxygen/doxyfile.mk	/^TEMPLATE_RELATIONS     = NO$/;"	m
TESTHEAD	makefile	/^TESTHEAD= $(patsubst %,$(THDIR)\/%,$(TESTHEAD_))$/;"	m
TESTHEAD_	makefile	/^TESTHEAD_ = test.h$/;"	m
TESTOBJ	makefile	/^TESTOBJ	= $(patsubst %,$(TODIR)\/%,$(TESTOBJ_))$/;"	m
TESTOBJ_	makefile	/^TESTOBJ_= test.o $(SRC_:.c=.test.o)$/;"	m
TEST_H	test/test.h	10;"	d
THDIR	makefile	/^THDIR	= test$/;"	m
TOC_EXPAND	doc/doxygen/doxyfile.mk	/^TOC_EXPAND             = NO$/;"	m
TODIR	makefile	/^TODIR	= test\/obj$/;"	m
TOLERANCE	src/old/const.h	/^double TOLERANCE; \/\/convergence limit for Poisson solver$/;"	v
TOLERANCE	src/old/triang/const.h	/^double TOLERANCE; \/\/convergence limit for Poisson solver$/;"	v
TREEVIEW_WIDTH	doc/doxygen/doxyfile.mk	/^TREEVIEW_WIDTH         = 250$/;"	m
TRI_LHS	src/old/triang/triangulate.h	119;"	d
TRI_RHS	src/old/triang/triangulate.h	120;"	d
TRSIZE	src/old/triang/triangulate.h	80;"	d
TRUE	src/old/triang/interface.h	4;"	d
TRUE	src/old/triang/triangulate.h	83;"	d
TR_FROM_DN	src/old/triang/triangulate.h	117;"	d
TR_FROM_UP	src/old/triang/triangulate.h	116;"	d
TYPEDEF_HIDES_STRUCT	doc/doxygen/doxyfile.mk	/^TYPEDEF_HIDES_STRUCT   = NO$/;"	m
T_SINK	src/old/triang/triangulate.h	70;"	d
T_X	src/old/triang/triangulate.h	68;"	d
T_Y	src/old/triang/triangulate.h	69;"	d
TimeSpec	src/pinc.h	/^typedef struct timespec TimeSpec;$/;"	t	typeref:struct:timespec
Timer	src/pinc.h	/^} Timer;$/;"	t	typeref:struct:__anon4
Timer Struct Reference	doc/latex/structTimer.tex	/^\\hypertarget{structTimer}{}\\section{Timer Struct Reference}$/;"	s
Tools	doc/introduction/main.tex	/^\\end{itemize}$/;"	s
UML_LIMIT_NUM_FIELDS	doc/doxygen/doxyfile.mk	/^UML_LIMIT_NUM_FIELDS   = 10$/;"	m
UML_LOOK	doc/doxygen/doxyfile.mk	/^UML_LOOK               = NO$/;"	m
USE_HTAGS	doc/doxygen/doxyfile.mk	/^USE_HTAGS              = NO$/;"	m
USE_MATHJAX	doc/doxygen/doxyfile.mk	/^USE_MATHJAX            = NO$/;"	m
USE_MDFILE_AS_MAINPAGE	doc/doxygen/doxyfile.mk	/^USE_MDFILE_AS_MAINPAGE =$/;"	m
USE_PDFLATEX	doc/doxygen/doxyfile.mk	/^USE_PDFLATEX           = YES$/;"	m
VERBATIM_HEADERS	doc/doxygen/doxyfile.mk	/^VERBATIM_HEADERS       = YES$/;"	m
Valgrind	doc/introduction/main.tex	/^\\section{Tools}$/;"	u
Vbound	src/old/const.h	/^double Vbound;$/;"	v
Vbound	src/old/triang/const.h	/^double Vbound;$/;"	v
Vpr	src/old/const.h	/^double Vpr_begin, Vpr_end,Vpr_step, Vpr; \/*probe potential:begining,end,step,current*\/ $/;"	v
Vpr	src/old/triang/const.h	/^double Vpr_begin, Vpr_end,Vpr_step, Vpr; \/*probe potential:begining,end,step,current*\/ $/;"	v
Vpr_begin	src/old/const.h	/^double Vpr_begin, Vpr_end,Vpr_step, Vpr; \/*probe potential:begining,end,step,current*\/ $/;"	v
Vpr_begin	src/old/triang/const.h	/^double Vpr_begin, Vpr_end,Vpr_step, Vpr; \/*probe potential:begining,end,step,current*\/ $/;"	v
Vpr_end	src/old/const.h	/^double Vpr_begin, Vpr_end,Vpr_step, Vpr; \/*probe potential:begining,end,step,current*\/ $/;"	v
Vpr_end	src/old/triang/const.h	/^double Vpr_begin, Vpr_end,Vpr_step, Vpr; \/*probe potential:begining,end,step,current*\/ $/;"	v
Vpr_step	src/old/const.h	/^double Vpr_begin, Vpr_end,Vpr_step, Vpr; \/*probe potential:begining,end,step,current*\/ $/;"	v
Vpr_step	src/old/triang/const.h	/^double Vpr_begin, Vpr_end,Vpr_step, Vpr; \/*probe potential:begining,end,step,current*\/ $/;"	v
WARNING	src/pinc.h	/^	WARNING = 0x01,		\/\/\/< Warning. Something might not be like the user intended.$/;"	e	enum:__anon5
WARNINGS	doc/doxygen/doxyfile.mk	/^WARNINGS               = YES$/;"	m
WARN_FORMAT	doc/doxygen/doxyfile.mk	/^WARN_FORMAT            = "$file:$line: $text"$/;"	m
WARN_IF_DOC_ERROR	doc/doxygen/doxyfile.mk	/^WARN_IF_DOC_ERROR      = YES$/;"	m
WARN_IF_UNDOCUMENTED	doc/doxygen/doxyfile.mk	/^WARN_IF_UNDOCUMENTED   = YES$/;"	m
WARN_LOGFILE	doc/doxygen/doxyfile.mk	/^WARN_LOGFILE           =$/;"	m
WARN_NO_PARAMDOC	doc/doxygen/doxyfile.mk	/^WARN_NO_PARAMDOC       = NO$/;"	m
Workflow	doc/introduction/main.tex	/^The \\mnfysrppic{} Git repository holds the official Particle-In-Cell (PIC) code belonging to the 4Dspace project and the Plasma and Space Physics group at the Physics Department of UiO. In order to keep the PIC code and their different versions clean and manageable and to avoid conflicts during cooperation it is of utmost importance that all users obey the rules of the repository. Each user is therefore responsible of making himself\/herself familiar with the rules stated herein. Failure to do so may result in reduced privileges in the repository.$/;"	s
XML_DTD	doc/doxygen/doxyfile.mk	/^XML_DTD                =$/;"	m
XML_OUTPUT	doc/doxygen/doxyfile.mk	/^XML_OUTPUT             = xml$/;"	m
XML_PROGRAMLISTING	doc/doxygen/doxyfile.mk	/^XML_PROGRAMLISTING     = YES$/;"	m
XML_SCHEMA	doc/doxygen/doxyfile.mk	/^XML_SCHEMA             =$/;"	m
_DICTIONARY_H_	lib/iniparser/src/dictionary.h	15;"	d
_GNU_SOURCE	proof of concept/interpolate/main.c	2;"	d	file:
_GNU_SOURCE	proof of concept/vectorfield/main.c	2;"	d	file:
_INIPARSER_H_	lib/iniparser/src/iniparser.h	11;"	d
_NR_UTILS_H_	src/old/fmg/nrutil.h	2;"	d
_XOPEN_SOURCE	proof of concept/get boundary/challenge/main.c	1;"	d	file:
_XOPEN_SOURCE	proof of concept/get boundary/main.c	1;"	d	file:
_XOPEN_SOURCE	proof of concept/get slice/main.c	1;"	d	file:
_XOPEN_SOURCE	proof of concept/get slice/main.old.c	1;"	d	file:
_XOPEN_SOURCE	proof of concept/interpolate/main.c	1;"	d	file:
_XOPEN_SOURCE	proof of concept/stool/stool.c	1;"	d	file:
_XOPEN_SOURCE	proof of concept/stool/stool.h	11;"	d
_XOPEN_SOURCE	proof of concept/tail call recursion/main.c	1;"	d	file:
_XOPEN_SOURCE	proof of concept/vectorfield/main.c	1;"	d	file:
_XOPEN_SOURCE	src/aux.c	11;"	d	file:
__interface_h	src/old/triang/interface.h	2;"	d
_dictionary_	lib/iniparser/src/dictionary.h	/^typedef struct _dictionary_ {$/;"	s
_equal_to	src/old/triang/construct.c	/^int _equal_to(v0, v1)$/;"	f
_greater_than	src/old/triang/construct.c	/^int _greater_than(v0, v1)$/;"	f
_greater_than_equal_to	src/old/triang/construct.c	/^int _greater_than_equal_to(v0, v1)$/;"	f
_less_than	src/old/triang/construct.c	/^int _less_than(v0, v1)$/;"	f
_line_status_	lib/iniparser/src/iniparser.c	/^typedef enum _line_status_ {$/;"	g	file:
_max	src/old/triang/construct.c	/^static int _max(yval, v0, v1)$/;"	f	file:
_min	src/old/triang/construct.c	/^static int _min(yval, v0, v1)$/;"	f	file:
_triangulate_h	src/old/triang/triangulate.h	2;"	d
accA1	proof of concept/vectorfield/main.c	/^void accA1(const double *E, const double *pos, double *vel, const long int *nGPointsProd, int nDims, long int nParticles){$/;"	f
accA1b	proof of concept/vectorfield/main.c	/^void accA1b(const double *E, const double *pos, double *vel, const long int *nGPointsProd, int nDims, long int nParticles){$/;"	f
accA1c	proof of concept/vectorfield/main.c	/^void accA1c(const double *E, const double *pos, double *vel, const long int *nGPointsProd, int nDims, long int nParticles){$/;"	f
accA2	proof of concept/vectorfield/main.c	/^void accA2(const double *E, const double *pos, double *vel, const long int *nGPointsProd, int nDims, long int nParticles){$/;"	f
accB	proof of concept/vectorfield/main.c	/^void accB(const double *E, const double *pos, double *vel, const long int *nGPointsProd, int nDims, long int nParticles, double *result){$/;"	f
accBb	proof of concept/vectorfield/main.c	/^void accBb(const double *E, const double *pos, double *vel, const long int *sizeProd, int nDims, long int nParticles, double *result){$/;"	f
accBc	proof of concept/vectorfield/main.c	/^void accBc(const double *E, const double *pos, double *vel, const long int *sizeProd, int nDims, long int nParticles){$/;"	f
accel	src/old/accel.c	/^void accel(float factor)$/;"	f
accel	src/old/accel_copy_with_olderfunction2d.c	/^void accel(float factor)$/;"	f
accel	src/old/triang/accel.c	/^void accel(float factor)$/;"	f
accel	src/old/triang/accel_copy_with_olderfunction2d.c	/^void accel(float factor)$/;"	f
addSlice	src/grid.c	/^void addSlice(const double *slice, Grid *grid, int d, int offset){$/;"	f
addSliceInner	src/grid.c	/^static const double *addSliceInner(const double *nextGhost, double **valp, const long int *mul,$/;"	f	file:
addThree	proof of concept/function pointers/main.c	/^void addThree(double *arr, long int arrsize){$/;"	f
addTwo	proof of concept/function pointers/main.c	/^void addTwo(double *arr, long int arrsize){$/;"	f
add_segment	src/old/triang/construct.c	/^static int add_segment(segnum)$/;"	f	file:
addint	src/old/fmg/fmg.c	/^void addint(double ***uf, double ***uc, double ***res, int nfx, int nfy, int nfz)$/;"	f
alllost	src/old/const.h	/^long int alllost; \/*total number of lost particles*\/$/;"	v
alllost	src/old/triang/const.h	/^long int alllost; \/*total number of lost particles*\/$/;"	v
allocTimer	src/aux.c	/^Timer *allocTimer(int rank){$/;"	f
allpart	src/old/const.h	/^long int allpart; \/*number of all particles*\/$/;"	v
allpart	src/old/triang/const.h	/^long int allpart; \/*number of all particles*\/$/;"	v
ap	src/old/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
ap	src/old/triang/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
area	src/old/const.h	/^  double area;$/;"	m	struct:dtriangle
area	src/old/triang/const.h	/^  double area;$/;"	m	struct:dtriangle
arr	proof of concept/global variables/main.c	/^	double *arr;$/;"	m	struct:ArrStruct	file:
arrGDyn	proof of concept/global variables/main.c	/^double *arrGDyn;$/;"	v
arrGlobal	proof of concept/global variables/main.c	/^double arrGlobal[ARRSIZE];$/;"	v
average	src/old/const.h	/^int average;$/;"	v
average	src/old/triang/const.h	/^int average;$/;"	v
average_current	src/old/dustg.c	/^void average_current(void)$/;"	f
average_current	src/old/triang/dustg.c	/^void average_current(void)$/;"	f
beam	src/old/const.h	45;"	d
beam	src/old/triang/const.h	45;"	d
bilinearProlong	src/multigrid.c	/^void bilinearProlong(Grid *fine, const Grid *coarse){$/;"	f
blockcounts	src/old/const.h	/^int blockcounts[12];$/;"	v
blockcounts	src/old/triang/const.h	/^int blockcounts[12];$/;"	v
bp	src/old/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
bp	src/old/triang/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
c0	src/old/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c0	src/old/triang/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c1	src/old/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c1	src/old/triang/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c2	src/old/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c2	src/old/triang/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c3	src/old/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c3	src/old/triang/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c4	src/old/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c4	src/old/triang/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c5	src/old/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
c5	src/old/triang/const.h	/^long int c0[2],c1[2],c2[2],c3[2],c4[2],c5[2];$/;"	v
calculate_flux	src/old/dust_triangulation.c	/^void calculate_flux(void)$/;"	f
calculate_flux	src/old/flux.c	/^void calculate_flux(void)$/;"	f
calculate_flux	src/old/triang/dust_triangulation.c	/^void calculate_flux(void)$/;"	f
calculate_flux	src/old/triang/flux.c	/^void calculate_flux(void)$/;"	f
calculate_staticparameters	src/old/dustg.c	/^void calculate_staticparameters(int arc, char *arv[])$/;"	f
calculate_staticparameters	src/old/triang/dustg.c	/^void calculate_staticparameters(int arc, char *arv[])$/;"	f
ccorner	src/old/const.h	/^int ** ccorner;$/;"	v
ccorner	src/old/triang/const.h	/^int ** ccorner;$/;"	v
cellvolume	src/old/const.h	/^double cellvolume;$/;"	v
cellvolume	src/old/triang/const.h	/^double cellvolume;$/;"	v
chain_idx	src/old/triang/monotone.c	/^static int chain_idx, op_idx, mon_idx;$/;"	v	file:
charge	src/old/const.h	/^double charge[S]; \/*charge value*\/$/;"	v
charge	src/old/triang/const.h	/^double charge[S]; \/*charge value*\/$/;"	v
chargeandnorm	src/old/const.h	/^double chargeandnorm[S]; \/*charge times norm factor*\/$/;"	v
chargeandnorm	src/old/triang/const.h	/^double chargeandnorm[S]; \/*charge times norm factor*\/$/;"	v
chargeoncond	src/old/dustg.c	/^void chargeoncond(int i)$/;"	f
chargeoncond	src/old/triang/dustg.c	/^void chargeoncond(int i)$/;"	f
checkcolcrossing	src/old/grid.c	/^void checkcolcrossing(int i)$/;"	f
checkcolcrossing	src/old/triang/grid.c	/^void checkcolcrossing(int i)$/;"	f
checkcond	src/old/dustg.c	/^void checkcond(void)$/;"	f
checkcond	src/old/triang/dustg.c	/^void checkcond(void)$/;"	f
checkpointcrossing	src/old/grid.c	/^int checkpointcrossing(int i, int j)$/;"	f
checkpointcrossing	src/old/triang/grid.c	/^int checkpointcrossing(int i, int j)$/;"	f
choose_idx	src/old/triang/misc.c	/^static int choose_idx;$/;"	v	file:
choose_segment	src/old/triang/misc.c	/^int choose_segment()$/;"	f
cleargrid	src/old/grid.c	/^void cleargrid()$/;"	f
cleargrid	src/old/triang/grid.c	/^void cleargrid()$/;"	f
cleargrid2	src/old/grid.c	/^void cleargrid2(void)$/;"	f
cleargrid2	src/old/triang/grid.c	/^void cleargrid2(void)$/;"	f
clockend	src/old/const.h	/^clock_t clockstart, clockend;$/;"	v
clockend	src/old/triang/const.h	/^clock_t clockstart, clockend;$/;"	v
clockstart	src/old/const.h	/^clock_t clockstart, clockend;$/;"	v
clockstart	src/old/triang/const.h	/^clock_t clockstart, clockend;$/;"	v
coarseSolv	src/multigrid.h	/^    void (*coarseSolv)(Grid *phi, const Grid *rho, const int nCycles);	\/\/\/< Function pointer to a Coarse Grid Solver function$/;"	m	struct:__anon6
computeRenormE	src/population.c	/^double *computeRenormE(const double *q, const double *m, int nSpecies){$/;"	f
computeRenormRho	src/population.c	/^double *computeRenormRho(const double *q, const double *m, int nSpecies, double cellVolume, double timeStep, double factor){$/;"	f
cond_present	src/old/const.h	/^int cond_present,dustmove;$/;"	v
cond_present	src/old/triang/const.h	/^int cond_present,dustmove;$/;"	v
condsq	src/old/const.h	/^struct condsq$/;"	s
condsq	src/old/const.h	/^typedef struct condsq condsq;$/;"	t	typeref:struct:condsq
condsq	src/old/triang/const.h	/^struct condsq$/;"	s
condsq	src/old/triang/const.h	/^typedef struct condsq condsq;$/;"	t	typeref:struct:condsq
condsquares	src/old/dustg.c	/^void condsquares(void){$/;"	f
condsquares	src/old/triang/dustg.c	/^void condsquares(void){$/;"	f
construct_trapezoids	src/old/triang/construct.c	/^int construct_trapezoids(nseg)$/;"	f
contourPhi	script/grid_plots.py	/^contourPhi = plt.contourf(X,Y,phi)$/;"	v
contourRho	script/grid_plots.py	/^contourRho = plt.contourf(X,Y,rho)$/;"	v
convergence	src/old/const.h	/^FILE *dustcharge, *dust_time, *convergence;$/;"	v
convergence	src/old/triang/const.h	/^FILE *dustcharge, *dust_time, *convergence;$/;"	v
convert	src/old/triang/input.c	/^void convert(void)$/;"	f
convertToId	doc/html/search/search.js	/^function convertToId(search)$/;"	f
convert_matrix	src/old/fmg/nrutil.c	/^float **convert_matrix(a,nrl,nrh,ncl,nch)$/;"	f
convert_matrix	src/old/fmg/nrutil.c	/^float **convert_matrix(float *a, long nrl, long nrh, long ncl, long nch)$/;"	f
copy	src/old/fmg/fmg.c	/^void copy(double ***aout, double ***ain, int nx, int ny, int nz)$/;"	f
copy0	src/old/fmg/fmg.c	/^void copy0(double ***aout, double *ain, int nx, int ny, int nz)$/;"	f
copyfinal	src/old/fmg/fmg.c	/^void copyfinal(double *aout, double ***ain, int nx, int ny, int nz)$/;"	f
createH5File	src/io.c	/^hid_t createH5File(const dictionary *ini, const char *fName, const char *fSubExt){$/;"	f
createResults	doc/html/search/search.js	/^function createResults()$/;"	f
create_currentarrays	src/old/grid.c	/^void create_currentarrays(void)$/;"	f
create_currentarrays	src/old/triang/grid.c	/^void create_currentarrays(void)$/;"	f
create_example_ini_file	lib/iniparser/test/iniexample.c	/^void create_example_ini_file(void)$/;"	f
create_linkedlist	src/old/accel.c	/^void create_linkedlist(void)$/;"	f
create_linkedlist	src/old/triang/accel.c	/^void create_linkedlist(void)$/;"	f
csq	src/old/const.h	/^condsq  **csq;$/;"	v
csq	src/old/triang/const.h	/^condsq  **csq;$/;"	v
cumf	src/old/dust_triangulation.c	/^double cumf(double v0, int i) \/\/cumulative distr. function$/;"	f
cumf	src/old/flux.c	/^double cumf(double v0, int i) \/\/cumulative distr. function$/;"	f
cumf	src/old/triang/dust_triangulation.c	/^double cumf(double v0, int i) \/\/cumulative distr. function$/;"	f
cumf	src/old/triang/flux.c	/^double cumf(double v0, int i) \/\/cumulative distr. function$/;"	f
cumfprim	src/old/dust_triangulation.c	/^double cumfprim(double v0, int i) \/\/distribution function for the flux$/;"	f
cumfprim	src/old/flux.c	/^double cumfprim(double v0, int i) \/\/distribution function for the flux$/;"	f
cumfprim	src/old/triang/dust_triangulation.c	/^double cumfprim(double v0, int i) \/\/distribution function for the flux$/;"	f
cumfprim	src/old/triang/flux.c	/^double cumfprim(double v0, int i) \/\/distribution function for the flux$/;"	f
curr	src/old/const.h	/^FILE *curr, *poten, *potclr, *pot2Dav; \/\/OLD$/;"	v
curr	src/old/triang/const.h	/^FILE *curr, *poten, *potclr, *pot2Dav; \/\/OLD$/;"	v
curr_av	src/old/const.h	/^long int **curr_av; \/*current averaged, each species*\/$/;"	v
curr_av	src/old/triang/const.h	/^long int **curr_av; \/*current averaged, each species*\/$/;"	v
current	src/old/const.h	/^long int **current;\/*no.of part. lost on probe,each species*\/$/;"	v
current	src/old/triang/const.h	/^long int **current;\/*no.of part. lost on probe,each species*\/$/;"	v
cvector	src/old/fmg/nrutil.c	/^unsigned char *cvector(long nl, long nh)$/;"	f
cvector	src/old/fmg/nrutil.c	/^unsigned char *cvector(nl,nh)$/;"	f
d0	src/old/triang/triangulate.h	/^  int d0, d1;$/;"	m	struct:__anon9
d1	src/old/triang/triangulate.h	/^  int d0, d1;$/;"	m	struct:__anon9
d3tensor	src/old/fmg/nrutil.c	/^double ***d3tensor(long nrl, long nrh, long ncl, long nch, long ndl, long ndh)$/;"	f
d3tensor	src/old/fmg/nrutil.c	/^double ***d3tensor(nrl,nrh,ncl,nch,ndl,ndh)$/;"	f
dV	src/old/const.h	/^double dxdy,dV;$/;"	v
dV	src/old/triang/const.h	/^double dxdy,dV;$/;"	v
dVdt	src/old/const.h	/^double dxdydt,dVdt;$/;"	v
dVdt	src/old/triang/const.h	/^double dxdydt,dVdt;$/;"	v
d_centreofmass_and_momI	src/old/dustg.c	/^void d_centreofmass_and_momI()$/;"	f
d_centreofmass_and_momI	src/old/triang/dustg.c	/^void d_centreofmass_and_momI()$/;"	f
d_globallist	src/old/const.h	/^int *d_globallist;$/;"	v
d_globallist	src/old/triang/const.h	/^int *d_globallist;$/;"	v
d_locallist	src/old/const.h	/^int **d_locallist;$/;"	v
d_locallist	src/old/triang/const.h	/^int **d_locallist;$/;"	v
d_localmax	src/old/const.h	/^int *d_localmax;$/;"	v
d_localmax	src/old/triang/const.h	/^int *d_localmax;$/;"	v
d_move	src/old/dustg.c	/^void d_move(int t)$/;"	f
d_move	src/old/triang/dustg.c	/^void d_move(int t)$/;"	f
d_particle	src/old/const.h	/^struct d_particle$/;"	s
d_particle	src/old/const.h	/^typedef struct d_particle d_particle;$/;"	t	typeref:struct:d_particle
d_particle	src/old/triang/const.h	/^struct d_particle$/;"	s
d_particle	src/old/triang/const.h	/^typedef struct d_particle d_particle;$/;"	t	typeref:struct:d_particle
d_polygon	src/old/triang/tri.c	/^void d_polygon(int arc, char *arv[])$/;"	f
d_rho	src/old/const.h	/^struct d_rho$/;"	s
d_rho	src/old/const.h	/^typedef struct d_rho d_rho;$/;"	t	typeref:struct:d_rho
d_rho	src/old/triang/const.h	/^struct d_rho$/;"	s
d_rho	src/old/triang/const.h	/^typedef struct d_rho d_rho;$/;"	t	typeref:struct:d_rho
daa	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
daa	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
daa1x	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
daa1x	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
daa1y	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
daa1y	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dbb	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dbb	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dbb1x	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dbb1x	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dbb1y	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dbb1y	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dcc	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dcc	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dcc1x	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dcc1x	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dcc1y	src/old/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
dcc1y	src/old/triang/const.h	/^double **daa,**dbb,**dcc,**daa1y,**daa1x,**dbb1y,**dbb1x,**dcc1y,**dcc1x; $/;"	v
ddelta	src/old/const.h	/^double ddelta, ddelta2;$/;"	v
ddelta	src/old/triang/const.h	/^double ddelta, ddelta2;$/;"	v
ddelta2	src/old/const.h	/^double ddelta, ddelta2;$/;"	v
ddelta2	src/old/triang/const.h	/^double ddelta, ddelta2;$/;"	v
debruijn	proof of concept/interpolate/main.c	/^static const int debruijn[32] =$/;"	v	file:
debugGaussSeidel	src/main.local.c	/^void debugGaussSeidel(dictionary *ini, Multigrid *multiRho, Multigrid *multiPhi,$/;"	f
debye	src/old/const.h	/^double debye[S]; \/*debye length*\/$/;"	v
debye	src/old/triang/const.h	/^double debye[S]; \/*debye length*\/$/;"	v
debyetotal	src/old/const.h	/^double debyetotal; \/*total debye length*\/$/;"	v
debyetotal	src/old/triang/const.h	/^double debyetotal; \/*total debye length*\/$/;"	v
define-members	doc/html/aux_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	doc/html/io_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	doc/html/pinc_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	doc/html/test_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	doc/html/test_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
dens	src/old/const.h	/^double dens[S]; \/*number density*\/$/;"	v
dens	src/old/triang/const.h	/^double dens[S]; \/*number density*\/$/;"	v
dens_err	src/old/const.h	/^FILE *dens_err;$/;"	v
dens_err	src/old/triang/const.h	/^FILE *dens_err;$/;"	v
details	doc/html/aux_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/grid_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/io_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/multigrid_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/multigrid_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/pinc_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/population_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/pusher_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/pusher_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/structGrid.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/structMpiInfo.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/structMultigrid.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/structPopulation.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/structTimer.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/test_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	doc/html/test_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
dhist	src/old/const.h	/^FILE *dhist;$/;"	v
dhist	src/old/triang/const.h	/^FILE *dhist;$/;"	v
diagint	src/old/const.h	/^int diagint, * diagint_av, * diagint_st;$/;"	v
diagint	src/old/triang/const.h	/^int diagint, * diagint_av, * diagint_st;$/;"	v
diagint_av	src/old/const.h	/^int diagint, * diagint_av, * diagint_st;$/;"	v
diagint_av	src/old/triang/const.h	/^int diagint, * diagint_av, * diagint_st;$/;"	v
diagint_st	src/old/const.h	/^int diagint, * diagint_av, * diagint_st;$/;"	v
diagint_st	src/old/triang/const.h	/^int diagint, * diagint_av, * diagint_st;$/;"	v
diagn_close	src/old/diagn.c	/^void diagn_close()$/;"	f
diagn_close	src/old/triang/diagn.c	/^void diagn_close()$/;"	f
diagn_open	src/old/diagn.c	/^void diagn_open()$/;"	f
diagn_open	src/old/triang/diagn.c	/^void diagn_open()$/;"	f
dictionary	lib/iniparser/src/dictionary.h	/^} dictionary ;$/;"	t	typeref:struct:_dictionary_
dictionary_del	lib/iniparser/src/dictionary.c	/^void dictionary_del(dictionary * d)$/;"	f
dictionary_dump	lib/iniparser/src/dictionary.c	/^void dictionary_dump(dictionary * d, FILE * out)$/;"	f
dictionary_get	lib/iniparser/src/dictionary.c	/^char * dictionary_get(dictionary * d, const char * key, char * def)$/;"	f
dictionary_hash	lib/iniparser/src/dictionary.c	/^unsigned dictionary_hash(const char * key)$/;"	f
dictionary_new	lib/iniparser/src/dictionary.c	/^dictionary * dictionary_new(int size)$/;"	f
dictionary_set	lib/iniparser/src/dictionary.c	/^int dictionary_set(dictionary * d, const char * key, const char * val)$/;"	f
dictionary_unset	lib/iniparser/src/dictionary.c	/^void dictionary_unset(dictionary * d, const char * key)$/;"	f
dmass	src/old/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmass	src/old/triang/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmass_centr_x	src/old/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmass_centr_x	src/old/triang/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmass_centr_y	src/old/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmass_centr_y	src/old/triang/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmass_centr_z	src/old/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmass_centr_z	src/old/triang/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmatrix	src/old/fmg/nrutil.c	/^double **dmatrix(long nrl, long nrh, long ncl, long nch)$/;"	f
dmatrix	src/old/fmg/nrutil.c	/^double **dmatrix(nrl,nrh,ncl,nch)$/;"	f
dmaxarg1	src/old/fmg/nrutil.h	/^static double dmaxarg1,dmaxarg2;$/;"	v
dmaxarg2	src/old/fmg/nrutil.h	/^static double dmaxarg1,dmaxarg2;$/;"	v
dminarg1	src/old/fmg/nrutil.h	/^static double dminarg1,dminarg2;$/;"	v
dminarg2	src/old/fmg/nrutil.h	/^static double dminarg1,dminarg2;$/;"	v
dmomI	src/old/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmomI	src/old/triang/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dmove	src/old/const.h	/^int *dmove;$/;"	v
dmove	src/old/triang/const.h	/^int *dmove;$/;"	v
dnumber	src/old/const.h	/^int *dnumber;$/;"	v
dnumber	src/old/triang/const.h	/^int *dnumber;$/;"	v
doubleArrProd	src/aux.c	/^double doubleArrProd(const double *a, int nElements){$/;"	f
dpart	src/old/const.h	/^d_particle **dpart, **rdpart;$/;"	v
dpart	src/old/triang/const.h	/^d_particle **dpart, **rdpart;$/;"	v
dpartlast	src/old/const.h	/^long int *dpartlast; \/*poiner to the last particle assigned to dust*\/$/;"	v
dpartlast	src/old/triang/const.h	/^long int *dpartlast; \/*poiner to the last particle assigned to dust*\/$/;"	v
dpartmax	src/old/const.h	/^long int *dpartmax;$/;"	v
dpartmax	src/old/triang/const.h	/^long int *dpartmax;$/;"	v
dpartq	src/old/const.h	/^double **dpartq, **rdpartq;$/;"	v
dpartq	src/old/triang/const.h	/^double **dpartq, **rdpartq;$/;"	v
dphifl	src/old/const.h	/^double *dphifl;$/;"	v
dphifl	src/old/triang/const.h	/^double *dphifl;$/;"	v
dr2v2	src/old/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dr2v2	src/old/triang/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dradius	src/old/const.h	/^double *dradius;$/;"	v
dradius	src/old/triang/const.h	/^double *dradius;$/;"	v
dradiusdx	src/old/const.h	/^double *dradiusdx;$/;"	v
dradiusdx	src/old/triang/const.h	/^double *dradiusdx;$/;"	v
drag_direct_x	src/old/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_direct_x	src/old/triang/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_direct_y	src/old/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_direct_y	src/old/triang/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_direct_z	src/old/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_direct_z	src/old/triang/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_elect_x	src/old/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_elect_x	src/old/triang/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_elect_y	src/old/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_elect_y	src/old/triang/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_elect_z	src/old/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_elect_z	src/old/triang/const.h	/^double *drag_direct_x, *drag_direct_y, *drag_direct_z, *drag_elect_x, *drag_elect_y, *drag_elect_z;$/;"	v
drag_force_direct	src/old/dustg.c	/^void drag_force_direct(double partvxnew, double partvynew, double partvznew, int particlespecie, int dno, double partxhit, double partyhit, double partzhit)$/;"	f
drag_force_direct	src/old/triang/dustg.c	/^void drag_force_direct(double partvxnew, double partvynew, double partvznew, int particlespecie, int dno, double partxhit, double partyhit, double partzhit)$/;"	f
drag_force_electric	src/old/dustg.c	/^void drag_force_electric(void)$/;"	f
drag_force_electric	src/old/triang/dustg.c	/^void drag_force_electric(void)$/;"	f
drho	src/old/const.h	/^d_rho **drho;$/;"	v
drho	src/old/triang/const.h	/^d_rho **drho;$/;"	v
drholast	src/old/const.h	/^int *drholast;$/;"	v
drholast	src/old/triang/const.h	/^int *drholast;$/;"	v
drot_x_y1	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_x_y1	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_x_y2	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_x_y2	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_x_z1	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_x_z1	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_x_z2	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_x_z2	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_y_x1	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_y_x1	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_y_x2	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_y_x2	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_y_z1	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_y_z1	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_y_z2	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_y_z2	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_z_x1	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_z_x1	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_z_x2	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_z_x2	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_z_y1	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_z_y1	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_z_y2	src/old/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
drot_z_y2	src/old/triang/const.h	/^double *drot_z_x1, *drot_z_x2, *drot_y_x1, *drot_y_x2, *drot_z_y1, *drot_z_y2, *drot_y_z1, *drot_y_z2, *drot_x_y1, *drot_x_y2, *drot_x_z1, *drot_x_z2;$/;"	v
dshape	src/old/const.h	/^int *dshape;$/;"	v
dshape	src/old/triang/const.h	/^int *dshape;$/;"	v
dsqrarg	src/old/fmg/nrutil.h	/^static double dsqrarg;$/;"	v
dt	src/old/const.h	/^double dt, tmax;$/;"	v
dt	src/old/triang/const.h	/^double dt, tmax;$/;"	v
dtdx	src/old/const.h	/^double dtdx, dtdy, dtdz; \/* dt\/dx and dt\/dy *\/$/;"	v
dtdx	src/old/triang/const.h	/^double dtdx, dtdy, dtdz; \/* dt\/dx and dt\/dy *\/$/;"	v
dtdy	src/old/const.h	/^double dtdx, dtdy, dtdz; \/* dt\/dx and dt\/dy *\/$/;"	v
dtdy	src/old/triang/const.h	/^double dtdx, dtdy, dtdz; \/* dt\/dx and dt\/dy *\/$/;"	v
dtdz	src/old/const.h	/^double dtdx, dtdy, dtdz; \/* dt\/dx and dt\/dy *\/$/;"	v
dtdz	src/old/triang/const.h	/^double dtdx, dtdy, dtdz; \/* dt\/dx and dt\/dy *\/$/;"	v
dtrian	src/old/const.h	/^dtriangle **dtrian;$/;"	v
dtrian	src/old/triang/const.h	/^dtriangle **dtrian;$/;"	v
dtriangle	src/old/const.h	/^struct dtriangle$/;"	s
dtriangle	src/old/const.h	/^typedef struct dtriangle dtriangle;$/;"	t	typeref:struct:dtriangle
dtriangle	src/old/triang/const.h	/^struct dtriangle$/;"	s
dtriangle	src/old/triang/const.h	/^typedef struct dtriangle dtriangle;$/;"	t	typeref:struct:dtriangle
dtype	src/old/const.h	/^int *dtype;$/;"	v
dtype	src/old/triang/const.h	/^int *dtype;$/;"	v
dump	src/old/restart.c	/^void dump(long int t)$/;"	f
dump	src/old/triang/restart.c	/^void dump(long int t)$/;"	f
dust_time	src/old/const.h	/^FILE *dustcharge, *dust_time, *convergence;$/;"	v
dust_time	src/old/triang/const.h	/^FILE *dustcharge, *dust_time, *convergence;$/;"	v
dusta	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dusta	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustaccx	src/old/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustaccx	src/old/triang/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustaccy	src/old/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustaccy	src/old/triang/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustaccz	src/old/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustaccz	src/old/triang/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustarea	src/old/dustg.c	/^double dustarea(int arc, char *arv[])$/;"	f
dustarea	src/old/triang/dustg.c	/^double dustarea(int arc, char *arv[])$/;"	f
dustb	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustb	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustbdy	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustbdy	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustcharge	src/old/const.h	/^FILE *dustcharge, *dust_time, *convergence;$/;"	v
dustcharge	src/old/triang/const.h	/^FILE *dustcharge, *dust_time, *convergence;$/;"	v
dustcx	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcx	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcxdx	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcxdx	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcy	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcy	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcydx	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcydx	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcz	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustcz	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustczdx	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustczdx	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
duste	src/old/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
duste	src/old/triang/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustmove	src/old/const.h	/^int cond_present,dustmove;$/;"	v
dustmove	src/old/triang/const.h	/^int cond_present,dustmove;$/;"	v
dustomega	src/old/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustomega	src/old/triang/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustpcx	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustpcx	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustpcy	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustpcy	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustpcz	src/old/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustpcz	src/old/triang/const.h	/^double *dustcx, *dustcy, *dustcz, *dustpcx, *dustpcy, *dustpcz, *dustcxdx, *dustcydx, *dustczdx;$/;"	v
dustq	src/old/const.h	/^double **dustq;$/;"	v
dustq	src/old/triang/const.h	/^double **dustq;$/;"	v
dustrho	src/old/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dustrho	src/old/triang/const.h	/^double *dmass, *dustrho, *dmass_centr_y, *dmass_centr_x, *dmass_centr_z, *dmomI, **dr2v2;$/;"	v
dustshape	src/old/const.h	/^FILE *dustshape;$/;"	v
dustshape	src/old/triang/const.h	/^FILE *dustshape;$/;"	v
dustshapet	src/old/const.h	/^FILE *probes1, *probes2, *probes3, *dustshapet;$/;"	v
dustshapet	src/old/triang/const.h	/^FILE *probes1, *probes2, *probes3, *dustshapet;$/;"	v
dustv	src/old/const.h	/^int **dustv; \/\/vertical marker$/;"	v
dustv	src/old/triang/const.h	/^int **dustv; \/\/vertical marker$/;"	v
dustvx	src/old/const.h	/^double **dustvx, **dustvy, **dustvz;$/;"	v
dustvx	src/old/triang/const.h	/^double **dustvx, **dustvy, **dustvz;$/;"	v
dustvxc	src/old/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustvxc	src/old/triang/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustvy	src/old/const.h	/^double **dustvx, **dustvy, **dustvz;$/;"	v
dustvy	src/old/triang/const.h	/^double **dustvx, **dustvy, **dustvz;$/;"	v
dustvyc	src/old/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustvyc	src/old/triang/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustvz	src/old/const.h	/^double **dustvx, **dustvy, **dustvz;$/;"	v
dustvz	src/old/triang/const.h	/^double **dustvx, **dustvy, **dustvz;$/;"	v
dustvzc	src/old/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustvzc	src/old/triang/const.h	/^double *dustvxc, *dustvyc, *dustvzc, *dustaccx, *dustaccy, *dustaccz, *duste, *dustomega;$/;"	v
dustworkfunct	src/old/const.h	/^double *dustworkfunct;$/;"	v
dustworkfunct	src/old/triang/const.h	/^double *dustworkfunct;$/;"	v
dustx	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustx	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustxdx	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustxdx	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustxdxold	src/old/const.h	/^double ** dustxdxold, **dustydyold, **dustzdzold;$/;"	v
dustxdxold	src/old/triang/const.h	/^double ** dustxdxold, **dustydyold, **dustzdzold;$/;"	v
dustxnormv	src/old/const.h	/^double **dustxnormv, **dustynormv;$/;"	v
dustxnormv	src/old/triang/const.h	/^double **dustxnormv, **dustynormv;$/;"	v
dusty	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dusty	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustydy	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustydy	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustydyold	src/old/const.h	/^double ** dustxdxold, **dustydyold, **dustzdzold;$/;"	v
dustydyold	src/old/triang/const.h	/^double ** dustxdxold, **dustydyold, **dustzdzold;$/;"	v
dustynormv	src/old/const.h	/^double **dustxnormv, **dustynormv;$/;"	v
dustynormv	src/old/triang/const.h	/^double **dustxnormv, **dustynormv;$/;"	v
dustz	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustz	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustzdz	src/old/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustzdz	src/old/triang/const.h	/^double **dustx, **dusty, **dustz, **dusta, **dustb, **dustxdx, **dustydy, **dustzdz, **dustbdy;$/;"	v
dustzdzold	src/old/const.h	/^double ** dustxdxold, **dustydyold, **dustzdzold;$/;"	v
dustzdzold	src/old/triang/const.h	/^double ** dustxdxold, **dustydyold, **dustzdzold;$/;"	v
dv	script/distribution.py	/^dv = 1$/;"	v
dvecmem	src/old/shortcuts.c	/^double *dvecmem(long nl,long nh)$/;"	f
dvecmem	src/old/triang/shortcuts.c	/^double *dvecmem(long nl,long nh)$/;"	f
dvector	src/old/fmg/nrutil.c	/^double *dvector(long nl, long nh)$/;"	f
dvector	src/old/fmg/nrutil.c	/^double *dvector(nl,nh)$/;"	f
dx	src/old/const.h	/^double dx,dy,dz; \/*grid spacing*\/$/;"	v
dx	src/old/triang/const.h	/^double dx,dy,dz; \/*grid spacing*\/$/;"	v
dxdt	src/old/const.h	/^double dxdt, dydt, dzdt; \/* dx\/dt and dy\/dt AS FOR NOW NOT USED*\/ $/;"	v
dxdt	src/old/triang/const.h	/^double dxdt, dydt, dzdt; \/* dx\/dt and dy\/dt AS FOR NOW NOT USED*\/ $/;"	v
dxdy	src/old/const.h	/^double dxdy,dV;$/;"	v
dxdy	src/old/triang/const.h	/^double dxdy,dV;$/;"	v
dxdydt	src/old/const.h	/^double dxdydt,dVdt;$/;"	v
dxdydt	src/old/triang/const.h	/^double dxdydt,dVdt;$/;"	v
dxdz	src/old/const.h	/^double dxdz;$/;"	v
dxdz	src/old/triang/const.h	/^double dxdz;$/;"	v
dy	src/old/const.h	/^double dx,dy,dz; \/*grid spacing*\/$/;"	v
dy	src/old/triang/const.h	/^double dx,dy,dz; \/*grid spacing*\/$/;"	v
dydt	src/old/const.h	/^double dxdt, dydt, dzdt; \/* dx\/dt and dy\/dt AS FOR NOW NOT USED*\/ $/;"	v
dydt	src/old/triang/const.h	/^double dxdt, dydt, dzdt; \/* dx\/dt and dy\/dt AS FOR NOW NOT USED*\/ $/;"	v
dz	src/old/const.h	/^double dx,dy,dz; \/*grid spacing*\/$/;"	v
dz	src/old/triang/const.h	/^double dx,dy,dz; \/*grid spacing*\/$/;"	v
dzdt	src/old/const.h	/^double dxdt, dydt, dzdt; \/* dx\/dt and dy\/dt AS FOR NOW NOT USED*\/ $/;"	v
dzdt	src/old/triang/const.h	/^double dxdt, dydt, dzdt; \/* dx\/dt and dy\/dt AS FOR NOW NOT USED*\/ $/;"	v
eavvel	src/old/const.h	/^FILE *eavvel, *iavvel;$/;"	v
eavvel	src/old/triang/const.h	/^FILE *eavvel, *iavvel;$/;"	v
edens	src/old/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
edens	src/old/triang/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
efx	src/old/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
efx	src/old/triang/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
efy	src/old/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
efy	src/old/triang/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
efz	src/old/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
efz	src/old/triang/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
eke	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
eke	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
eke_time	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
eke_time	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
electric_field	src/old/gauss.c	/^void electric_field(void)$/;"	f
electric_field	src/old/triang/gauss.c	/^void electric_field(void)$/;"	f
electron	src/old/const.h	43;"	d
electron	src/old/triang/const.h	43;"	d
elrot_x_y1	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_x_y1	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_x_y2	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_x_y2	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_x_z1	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_x_z1	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_x_z2	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_x_z2	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_y_x1	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_y_x1	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_y_x2	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_y_x2	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_y_z1	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_y_z1	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_y_z2	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_y_z2	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_z_x1	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_z_x1	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_z_x2	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_z_x2	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_z_y1	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_z_y1	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_z_y2	src/old/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
elrot_z_y2	src/old/triang/const.h	/^double *elrot_z_x1, *elrot_z_x2, *elrot_y_x1, *elrot_y_x2, *elrot_z_y1, *elrot_z_y2, *elrot_y_z1, *elrot_y_z2, *elrot_x_y1, *elrot_x_y2, *elrot_x_z1, *elrot_x_z2;$/;"	v
energy	src/pinc.h	/^	double *energy;		\/\/\/< Kinetic energy$/;"	m	struct:__anon1
enum-members	doc/html/pinc_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
epe	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
epe	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
epe_time	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
epe_time	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
erfcc	src/old/dust_triangulation.c	/^double erfcc(double x)$/;"	f
erfcc	src/old/flux.c	/^double erfcc(double x)$/;"	f
erfcc	src/old/triang/dust_triangulation.c	/^double erfcc(double x)$/;"	f
erfcc	src/old/triang/flux.c	/^double erfcc(double x)$/;"	f
evxphs	src/old/const.h	/^FILE *evxphs, *ivxphs;$/;"	v
evxphs	src/old/triang/const.h	/^FILE *evxphs, *ivxphs;$/;"	v
extent	src/old/const.h	/^MPI_Aint offsets[2], extent;$/;"	v
extent	src/old/triang/const.h	/^MPI_Aint offsets[2], extent;$/;"	v
extrapart	src/old/const.h	/^double extrapart[S][6];$/;"	v
extrapart	src/old/triang/const.h	/^double extrapart[S][6];$/;"	v
f	lib/iniparser/test/twisted-genhuge.py	/^    f=open('twisted-massive.ini', 'w')$/;"	v
f3tensor	src/old/fmg/nrutil.c	/^float ***f3tensor(long nrl, long nrh, long ncl, long nch, long ndl, long ndh)$/;"	f
f3tensor	src/old/fmg/nrutil.c	/^float ***f3tensor(nrl,nrh,ncl,nch,ndl,ndh)$/;"	f
fMsg	src/io.c	/^void fMsg(dictionary *ini, const char* restrict fNameKey, const char* restrict format, ...){$/;"	f
factorial	proof of concept/get slice/main.s	/^factorial:$/;"	l
factorial	proof of concept/tail call recursion/main.c	/^long int factorial(long int n){$/;"	f
factorial	proof of concept/tail call recursion/main.s	/^factorial:$/;"	l
file	script/distribution.py	/^file = h5py.File('..\/test_pop.pop.h5','r')$/;"	v
filePhi	script/grid_plots.py	/^filePhi = h5py.File('..\/test_phi.grid.h5','r')$/;"	v
fileRho	script/grid_plots.py	/^fileRho = h5py.File('..\/test_rho.grid.h5','r')$/;"	v
files	doc/html/dir_13e138d54eb8818da29c3992edef070a.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	doc/html/dir_68267d1309a1af8e8297ef4c3efbcdba.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
fill0	src/old/fmg/fmg.c	/^void fill0(double ***u, int nx, int ny, int nz)$/;"	f
find_new_roots	src/old/triang/construct.c	/^static int find_new_roots(segnum)$/;"	f	file:
findabv	src/old/grid.c	/^void findabv(int i)$/;"	f
findabv	src/old/triang/grid.c	/^void findabv(int i)$/;"	f
finddustvolume	src/old/dustg.c	/^double finddustvolume(int arc, char *arv[])$/;"	f
finddustvolume	src/old/triang/dustg.c	/^double finddustvolume(int arc, char *arv[])$/;"	f
flux	src/old/const.h	/^double flux[S][6];$/;"	v
flux	src/old/triang/const.h	/^double flux[S][6];$/;"	v
fluxrest	src/old/const.h	/^double fluxrest[S][6];$/;"	v
fluxrest	src/old/triang/const.h	/^double fluxrest[S][6];$/;"	v
fmg_mingridx	src/old/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_mingridx	src/old/triang/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_mingridy	src/old/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_mingridy	src/old/triang/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_mingridz	src/old/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_mingridz	src/old/triang/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_ng	src/old/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_ng	src/old/triang/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_nnx	src/old/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_nnx	src/old/triang/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_nny	src/old/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_nny	src/old/triang/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_nnz	src/old/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
fmg_nnz	src/old/triang/const.h	/^int fmg_ng, fmg_nnx, fmg_nny, fmg_nnz, fmg_mingridx, fmg_mingridy, fmg_mingridz; $/;"	v
force_chk	src/old/const.h	/^FILE *force_chk;$/;"	v
force_chk	src/old/triang/const.h	/^FILE *force_chk;$/;"	v
fp	src/old/const.h	/^FILE * fp, *fp2; \/\/OLD$/;"	v
fp	src/old/triang/const.h	/^FILE * fp, *fp2; \/\/OLD$/;"	v
fp2	src/old/const.h	/^FILE * fp, *fp2; \/\/OLD$/;"	v
fp2	src/old/triang/const.h	/^FILE * fp, *fp2; \/\/OLD$/;"	v
freeStrArr	src/io.c	/^void freeStrArr(char** strArr){$/;"	f
freeTimer	src/aux.c	/^void freeTimer(Timer *timer){$/;"	f
free_convert_matrix	src/old/fmg/nrutil.c	/^void free_convert_matrix(b,nrl,nrh,ncl,nch)$/;"	f
free_convert_matrix	src/old/fmg/nrutil.c	/^void free_convert_matrix(float **b, long nrl, long nrh, long ncl, long nch)$/;"	f
free_cvector	src/old/fmg/nrutil.c	/^void free_cvector(unsigned char *v, long nl, long nh)$/;"	f
free_cvector	src/old/fmg/nrutil.c	/^void free_cvector(v,nl,nh)$/;"	f
free_d3tensor	src/old/fmg/nrutil.c	/^void free_d3tensor(double ***t, long nrl, long nrh, long ncl, long nch,$/;"	f
free_d3tensor	src/old/fmg/nrutil.c	/^void free_d3tensor(t,nrl,nrh,ncl,nch,ndl,ndh)$/;"	f
free_dmatrix	src/old/fmg/nrutil.c	/^void free_dmatrix(double **m, long nrl, long nrh, long ncl, long nch)$/;"	f
free_dmatrix	src/old/fmg/nrutil.c	/^void free_dmatrix(m,nrl,nrh,ncl,nch)$/;"	f
free_dvecmem	src/old/shortcuts.c	/^void free_dvecmem(double *v, long nl, long nh)$/;"	f
free_dvecmem	src/old/triang/shortcuts.c	/^void free_dvecmem(double *v, long nl, long nh)$/;"	f
free_dvector	src/old/fmg/nrutil.c	/^void free_dvector(double *v, long nl, long nh)$/;"	f
free_dvector	src/old/fmg/nrutil.c	/^void free_dvector(v,nl,nh)$/;"	f
free_f3tensor	src/old/fmg/nrutil.c	/^void free_f3tensor(float ***t, long nrl, long nrh, long ncl, long nch,$/;"	f
free_f3tensor	src/old/fmg/nrutil.c	/^void free_f3tensor(t,nrl,nrh,ncl,nch,ndl,ndh)$/;"	f
free_imatrix	src/old/fmg/nrutil.c	/^void free_imatrix(int **m, long nrl, long nrh, long ncl, long nch)$/;"	f
free_imatrix	src/old/fmg/nrutil.c	/^void free_imatrix(m,nrl,nrh,ncl,nch)$/;"	f
free_ivecmem	src/old/shortcuts.c	/^void free_ivecmem(int *v, long nl, long nh)$/;"	f
free_ivecmem	src/old/triang/shortcuts.c	/^void free_ivecmem(int *v, long nl, long nh)$/;"	f
free_ivector	src/old/fmg/nrutil.c	/^void free_ivector(int *v, long nl, long nh)$/;"	f
free_ivector	src/old/fmg/nrutil.c	/^void free_ivector(v,nl,nh)$/;"	f
free_lvector	src/old/fmg/nrutil.c	/^void free_lvector(unsigned long *v, long nl, long nh)$/;"	f
free_lvector	src/old/fmg/nrutil.c	/^void free_lvector(v,nl,nh)$/;"	f
free_matrix	src/old/fmg/nrutil.c	/^void free_matrix(float **m, long nrl, long nrh, long ncl, long nch)$/;"	f
free_matrix	src/old/fmg/nrutil.c	/^void free_matrix(m,nrl,nrh,ncl,nch)$/;"	f
free_submatrix	src/old/fmg/nrutil.c	/^void free_submatrix(b,nrl,nrh,ncl,nch)$/;"	f
free_submatrix	src/old/fmg/nrutil.c	/^void free_submatrix(float **b, long nrl, long nrh, long ncl, long nch)$/;"	f
free_vector	src/old/fmg/nrutil.c	/^void free_vector(float *v, long nl, long nh)$/;"	f
free_vector	src/old/fmg/nrutil.c	/^void free_vector(v,nl,nh)$/;"	f
frho	src/old/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
frho	src/old/triang/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
func-members	doc/html/aux_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/grid_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/io_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/multigrid_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/multigrid_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/pinc_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/population_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/pusher_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/pusher_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/test_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	doc/html/test_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
gAlloc	src/grid.c	/^Grid *gAlloc(const dictionary *ini, int nValues){$/;"	f
gAllocMpi	src/grid.c	/^MpiInfo *gAllocMpi(const dictionary *ini){$/;"	f
gCloseH5	src/grid.c	/^void gCloseH5(Grid *grid){$/;"	f
gCreateH5	src/grid.c	/^void gCreateH5(const dictionary *ini, Grid *grid, const MpiInfo *mpiInfo,$/;"	f
gFinDiff1st	src/grid.c	/^void gFinDiff1st(const Grid *scalar, Grid *field){$/;"	f
gFinDiff2nd2D	src/grid.c	/^void gFinDiff2nd2D(Grid *phi, const Grid *rho){$/;"	f
gFinDiff2nd3D	src/grid.c	/^void gFinDiff2nd3D(Grid *phi, const  Grid *rho){$/;"	f
gFree	src/grid.c	/^void gFree(Grid *grid){$/;"	f
gFreeMpi	src/grid.c	/^void gFreeMpi(MpiInfo *mpiInfo){$/;"	f
gMulDouble	src/grid.c	/^void gMulDouble(Grid *grid, double num){$/;"	f
gNormalizeE	src/grid.c	/^void gNormalizeE(const dictionary *ini, Grid *E){$/;"	f
gSet	src/grid.c	/^void gSet(Grid *grid, const double *value){$/;"	f
gValDebug	src/grid.c	/^void gValDebug(Grid *grid, const MpiInfo *mpiInfo){$/;"	f
gWriteH5	src/grid.c	/^void gWriteH5(const Grid *grid, const MpiInfo *mpiInfo, double n){$/;"	f
gZero	src/grid.c	/^void gZero(Grid *grid){$/;"	f
gaussSeidel2D	src/multigrid.c	/^void gaussSeidel2D(Grid *phi, const Grid *rho, int nCycles){$/;"	f
gaussian	script/distribution.py	/^gaussian   = ((1\/(2*pi*(vth**2)))**(  0.5 ))*exp(-0.5*(v2\/vth)**2)$/;"	v
gen_bgnd	src/old/generate.c	/^void gen_bgnd(void)$/;"	f
gen_bgnd	src/old/generate_bug.c	/^void gen_bgnd(void)$/;"	f
gen_bgnd	src/old/triang/generate.c	/^void gen_bgnd(void)$/;"	f
gen_bgnd	src/old/triang/generate_bug.c	/^void gen_bgnd(void)$/;"	f
gen_boundaries	src/old/grid.c	/^void gen_boundaries(void)$/;"	f
gen_boundaries	src/old/triang/grid.c	/^void gen_boundaries(void)$/;"	f
gen_dust3D	src/old/grid.c	/^void gen_dust3D(int arc, char *arv[])$/;"	f
gen_dust3D	src/old/triang/grid.c	/^void gen_dust3D(int arc, char *arv[])$/;"	f
generate_random_ordering	src/old/triang/misc.c	/^int generate_random_ordering(n)$/;"	f
getBitNo	proof of concept/interpolate/main.c	/^inline int getBitNo(int mask){$/;"	f
getBitNoDebruijn	proof of concept/interpolate/main.c	/^static inline int getBitNoDebruijn(int mask){$/;"	f	file:
getCIndex	proof of concept/interpolate/main.c	/^inline void getCIndex(long int *p, const int mask, int nDims, const long int *nGPointsProd){$/;"	f
getFromInd	proof of concept/get slice/main.c	/^void getFromInd(double *slice, double *val, long int *indices, int nElements){$/;"	f
getFromInd	proof of concept/get slice/main.s	/^getFromInd:$/;"	l
getGhostIndices	proof of concept/get boundary/main.c	/^long int *getGhostIndices(long int *indices, const int *nGPoints, const long int *nGPointsProd, int nDims){$/;"	f
getGhostIndices	proof of concept/get boundary/scrabble.c	/^int *getGhostIndices(...){$/;"	f
getGhostIndices	proof of concept/get slice/main.old.c	/^long int *getGhostIndices(long int *indices, const int *nGPoints, const long int *nGPointsProd, int nDims){$/;"	f
getGhosts	proof of concept/get boundary/scrabble.c	/^getGhosts(double *nextGhost, const double *val, const int *mul, const int *points){$/;"	f
getGhostsOld	proof of concept/get boundary/main.c	/^double *getGhostsOld(double *nextGhost, const double **valp, const long int *mul, const int *points){$/;"	f
getGhostsOld	proof of concept/get slice/main.old.c	/^double *getGhostsOld(double *nextGhost, const double **valp, const long int *mul, const int *points){$/;"	f
getGridSlice	proof of concept/get boundary/main.c	/^double *getGridSlice(double *nextGhost, const double **valp, const long int *mul, const int *points, const long int finalMul){$/;"	f
getGridSlice	proof of concept/get slice/main.old.c	/^double *getGridSlice(double *nextGhost, const double **valp, const long int *mul, const int *points, const long int finalMul){$/;"	f
getHalo	proof of concept/get boundary/challenge/halo.c	/^inline void getHalo(double *halo, const double *val, const long  int *nGPointsProd, const int *nTGPoints,int nDims){$/;"	f
getHalo	proof of concept/get boundary/challenge/halo.s	/^getHalo:$/;"	l
getHalo	proof of concept/get boundary/main.c	/^inline void getHalo(double *halo, const double *val, const long  int *nGPointsProd, const int *nTGPoints,int nDims){$/;"	f
getHalo	proof of concept/get boundary/scrabble.c	/^ double *getHalo(...){$/;"	f
getHalo	proof of concept/get slice/main.old.c	/^inline void getHalo(double *halo, const double *val, const long  int *nGPointsProd, const int *nTGPoints,int nDims){$/;"	f
getHaloOld	proof of concept/get boundary/main.c	/^void getHaloOld(double *halo, const double *val, const long  int *nGPointsProd, const int *nGPoints,int nDims){$/;"	f
getHaloOld	proof of concept/get slice/main.old.c	/^void getHaloOld(double *halo, const double *val, const long  int *nGPointsProd, const int *nGPoints,int nDims){$/;"	f
getHaloSlice	proof of concept/get boundary/main.c	/^inline void getHaloSlice(double *halo, const double *val, const long int *nGPointsProd, const int *nGPoints, int nDims, int d, int offset){$/;"	f
getHaloSlice	proof of concept/get slice/main.old.c	/^inline void getHaloSlice(double *halo, const double *val, const long int *nGPointsProd, const int *nGPoints, int nDims, int d, int offset){$/;"	f
getIncGrayMask	proof of concept/interpolate/main.c	/^inline int getIncGrayMask(int *x){$/;"	f
getIncGrayMask2	proof of concept/interpolate/main.c	/^inline int getIncGrayMask2(int *x, int i){$/;"	f
getIndHalo	proof of concept/get boundary/main.c	/^int getIndHalo(double *halo, double *val, long int *indices, int nExt){$/;"	f
getIndHalo	proof of concept/get slice/main.old.c	/^int getIndHalo(double *halo, double *val, long int *indices, int nExt){$/;"	f
getSendRecvSetSlice	src/grid.c	/^void getSendRecvSetSlice(const int nSlicePoints, const int offsetTake,$/;"	f
getSlice	proof of concept/get boundary/challenge/halo.c	/^double *getSlice(double *nextGhost, const double **valp, const long int *mul, const int *points){$/;"	f
getSlice	proof of concept/get boundary/challenge/halo.s	/^getSlice:$/;"	l
getSlice	proof of concept/get boundary/main.c	/^double *getSlice(double *nextGhost, const double **valp, const long int *mul, const int *points){$/;"	f
getSlice	proof of concept/get slice/main.c	/^void getSlice(double *halo, const double *val, const long int *nGPointsProd, const int *nGPoints, int nDims, int d, int offset){$/;"	f
getSlice	proof of concept/get slice/main.old.c	/^double *getSlice(double *nextGhost, const double **valp, const long int *mul, const int *points){$/;"	f
getSlice	proof of concept/get slice/main.s	/^getSlice:$/;"	l
getSlice	src/grid.c	/^void getSlice(double *slice, const Grid *grid, int d, int offset){$/;"	f
getSlice2	proof of concept/get slice/main.c	/^inline void getSlice2(double *halo, const double *val, const long int *nGPointsProd, const int *nGPoints, int nDims, int d, int offset){$/;"	f
getSlice2	proof of concept/get slice/main.s	/^getSlice2:$/;"	l
getSliceIndices	proof of concept/get slice/main.c	/^void *getSliceIndices(long int *indices, const int *nGPoints, const long int *nGPointsProd, int nDims, int dim, int offset){$/;"	f
getSliceIndices	proof of concept/get slice/main.s	/^getSliceIndices:$/;"	l
getSliceInner	proof of concept/get slice/main.c	/^double *getSliceInner(double *nextGhost, const double **valp, const long int *mul, const int *points, const long int finalMul){$/;"	f
getSliceInner	proof of concept/get slice/main.s	/^getSliceInner:$/;"	l
getSliceInner	src/grid.c	/^static double *getSliceInner(double *nextGhost, const double **valp, const long int *mul,$/;"	f	file:
getSliceInner2	proof of concept/get slice/main.s	/^getSliceInner2:$/;"	l
getSubdomain	src/grid.c	/^static int *getSubdomain(const dictionary *ini){$/;"	f	file:
getWeight	proof of concept/interpolate/main.c	/^inline double getWeight(int signMask, const double *decimal, const double *complement, int nDims){$/;"	f
getWeightAndIndex	proof of concept/interpolate/main.c	/^inline double getWeightAndIndex(long int *p, const int mask, const double *decimal, const double *complement, int nDims, const long int *nGPointsProd){$/;"	f
getXPos	doc/html/search/search.js	/^function getXPos(item)$/;"	f
getYPos	doc/html/search/search.js	/^function getYPos(item)$/;"	f
get_angle	src/old/triang/monotone.c	/^static double get_angle(vp0, vpnext, vp1)$/;"	f	file:
get_vertex_positions	src/old/triang/monotone.c	/^static int get_vertex_positions(v0, v1, ip, iq)$/;"	f	file:
ghostIndices	proof of concept/get boundary/scrabble.c	/^int *ghostIndices = malloc(...);$/;"	v
gpcolumn	src/old/const.h	/^MPI_Datatype gpcolumn;$/;"	v
gpcolumn	src/old/triang/const.h	/^MPI_Datatype gpcolumn;$/;"	v
grids	src/multigrid.h	/^    Grid **grids;   \/\/\/< Array of Grid structs of decreasing coarseness$/;"	m	struct:__anon6
gridtype	src/old/const.h	/^MPI_Datatype gridtype, oldtypes[2];$/;"	v
gridtype	src/old/triang/const.h	/^MPI_Datatype gridtype, oldtypes[2];$/;"	v
h5	src/pinc.h	/^	hid_t h5;					\/\/\/< HDF5 file handler$/;"	m	struct:__anon3
h5	src/pinc.h	/^	hid_t h5;			\/\/\/< HDF5 file handler$/;"	m	struct:__anon1
h5FileSpace	src/pinc.h	/^	hid_t h5FileSpace;			\/\/\/< HDF5 file space description$/;"	m	struct:__anon3
h5MemSpace	src/pinc.h	/^	hid_t h5MemSpace;			\/\/\/< HDF5 memory space description$/;"	m	struct:__anon3
halfWeightRestrict	src/multigrid.c	/^void halfWeightRestrict(const Grid *fine, Grid *coarse){$/;"	f
hash	lib/iniparser/src/dictionary.h	/^    unsigned     *  hash ;  \/** List of hash values for keys *\/$/;"	m	struct:_dictionary_
hi	src/old/triang/triangulate.h	/^  point_t hi, lo;		\/* max\/min y-values *\/$/;"	m	struct:__anon9
history	src/old/const.h	/^FILE * history;$/;"	v
history	src/old/triang/const.h	/^FILE * history;$/;"	v
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  aux.c File Reference	doc/latex/aux_8c.tex	/^\\hypertarget{aux_8c}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/aux.c File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  grid.c File Reference	doc/latex/grid_8c.tex	/^\\hypertarget{grid_8c}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/grid.c File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  io.c File Reference	doc/latex/io_8c.tex	/^\\hypertarget{io_8c}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/io.c File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  multigrid.c File Reference	doc/latex/multigrid_8c.tex	/^\\hypertarget{multigrid_8c}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/multigrid.c File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  multigrid.h File Reference	doc/latex/multigrid_8h.tex	/^\\hypertarget{multigrid_8h}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/multigrid.h File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  pinc.h File Reference	doc/latex/pinc_8h.tex	/^\\hypertarget{pinc_8h}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/pinc.h File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  population.c File Reference	doc/latex/population_8c.tex	/^\\hypertarget{population_8c}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/population.c File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  pusher.c File Reference	doc/latex/pusher_8c.tex	/^\\hypertarget{pusher_8c}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/pusher.c File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src  pusher.h File Reference	doc/latex/pusher_8h.tex	/^\\hypertarget{pusher_8h}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src\/pusher.h File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  src Directory Reference	doc/latex/dir_68267d1309a1af8e8297ef4c3efbcdba.tex	/^\\hypertarget{dir_68267d1309a1af8e8297ef4c3efbcdba}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/src Directory Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  test  test.c File Reference	doc/latex/test_8c.tex	/^\\hypertarget{test_8c}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/test\/test.c File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  test  test.h File Reference	doc/latex/test_8h.tex	/^\\hypertarget{test_8h}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/test\/test.h File Reference}$/;"	s
home  gullik    Documents    Pi   C  mn-   fysrp-   pic  test Directory Reference	doc/latex/dir_13e138d54eb8818da29c3992edef070a.tex	/^\\hypertarget{dir_13e138d54eb8818da29c3992edef070a}{}\\section{\/home\/gullik\/\\+Documents\/\\+Pi\\+C\/mn-\\\/fysrp-\\\/pic\/test Directory Reference}$/;"	s
iStart	src/pinc.h	/^	long int *iStart;	\/\/\/< First index of specie s (nSpecies+1 elements)$/;"	m	struct:__anon1
iStop	src/pinc.h	/^	long int *iStop;	\/\/\/< First index not of specie s (nSpecies elements)$/;"	m	struct:__anon1
iavvel	src/old/const.h	/^FILE *eavvel, *iavvel;$/;"	v
iavvel	src/old/triang/const.h	/^FILE *eavvel, *iavvel;$/;"	v
idens	src/old/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
idens	src/old/triang/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
ike	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
ike	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
ike_time	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
ike_time	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
imatrix	src/old/fmg/nrutil.c	/^int **imatrix(long nrl, long nrh, long ncl, long nch)$/;"	f
imatrix	src/old/fmg/nrutil.c	/^int **imatrix(nrl,nrh,ncl,nch)$/;"	f
imaxarg1	src/old/fmg/nrutil.h	/^static int imaxarg1,imaxarg2;$/;"	v
imaxarg2	src/old/fmg/nrutil.h	/^static int imaxarg1,imaxarg2;$/;"	v
iminarg1	src/old/fmg/nrutil.h	/^static int iminarg1,iminarg2;$/;"	v
iminarg2	src/old/fmg/nrutil.h	/^static int iminarg1,iminarg2;$/;"	v
in1	src/old/const.h	/^int in1,in2,in3,in4;$/;"	m	struct:condsq
in1	src/old/triang/const.h	/^int in1,in2,in3,in4;$/;"	m	struct:condsq
in2	src/old/const.h	/^int in1,in2,in3,in4;$/;"	m	struct:condsq
in2	src/old/triang/const.h	/^int in1,in2,in3,in4;$/;"	m	struct:condsq
in3	src/old/const.h	/^int in1,in2,in3,in4;$/;"	m	struct:condsq
in3	src/old/triang/const.h	/^int in1,in2,in3,in4;$/;"	m	struct:condsq
in4	src/old/const.h	/^int in1,in2,in3,in4;$/;"	m	struct:condsq
in4	src/old/triang/const.h	/^int in1,in2,in3,in4;$/;"	m	struct:condsq
incArrGDyn	proof of concept/global variables/main.c	/^void incArrGDyn(){$/;"	f
incArrGDynUnordered	proof of concept/global variables/main.c	/^void incArrGDynUnordered(){$/;"	f
incArrGlobal	proof of concept/global variables/main.c	/^void incArrGlobal(){$/;"	f
incArrGlobalUnordered	proof of concept/global variables/main.c	/^void incArrGlobalUnordered(){$/;"	f
incArrLocal	proof of concept/global variables/main.c	/^void incArrLocal(double *arr, long int arrsize){$/;"	f
incArrLocalUnordered	proof of concept/global variables/main.c	/^void incArrLocalUnordered(double *arr, long int arrsize){$/;"	f
incArrStruct	proof of concept/global variables/main.c	/^void incArrStruct(struct ArrStruct *myStruct, long int arrsize){$/;"	f
incArrStructUnordered	proof of concept/global variables/main.c	/^void incArrStructUnordered(struct ArrStruct *myStruct, long int arrsize){$/;"	f
incGArrStruct	proof of concept/global variables/main.c	/^void incGArrStruct(){$/;"	f
incGArrStructUnordered	proof of concept/global variables/main.c	/^void incGArrStructUnordered(){$/;"	f
incGray	proof of concept/interpolate/main.c	/^inline int incGray(int x){$/;"	f
inclpath	src/old/triang/makefile	/^inclpath = .\/triang$/;"	m
iniAssertEqualNElements	src/io.c	/^int iniAssertEqualNElements(const dictionary *ini, int nKeys, ...){$/;"	f
iniGetDoubleArr	src/io.c	/^double* iniGetDoubleArr(const dictionary *ini, const char *key, int *nElements){$/;"	f
iniGetDummy	test/test.c	/^dictionary *iniGetDummy(){$/;"	f
iniGetIntArr	src/io.c	/^int* iniGetIntArr(const dictionary *ini, const char *key, int *nElements){$/;"	f
iniGetLongIntArr	src/io.c	/^long int* iniGetLongIntArr(const dictionary *ini, const char *key, int *nElements){$/;"	f
iniGetNElements	src/io.c	/^int iniGetNElements(const dictionary* ini, const char* key){$/;"	f
iniGetStrArr	src/io.c	/^char** iniGetStrArr(const dictionary *ini, const char *key, int *nElements){$/;"	f
iniOpen	src/io.c	/^dictionary* iniOpen(int argc, char *argv[]){$/;"	f
iniSetDummy	test/test.c	/^dictionary *iniSetDummy(int argc, char **argv){$/;"	f
iniparser_dump	lib/iniparser/src/iniparser.c	/^void iniparser_dump(dictionary * d, FILE * f)$/;"	f
iniparser_dump_ini	lib/iniparser/src/iniparser.c	/^void iniparser_dump_ini(dictionary * d, FILE * f)$/;"	f
iniparser_dumpsection_ini	lib/iniparser/src/iniparser.c	/^void iniparser_dumpsection_ini(dictionary * d, char * s, FILE * f)$/;"	f
iniparser_find_entry	lib/iniparser/src/iniparser.c	/^int iniparser_find_entry($/;"	f
iniparser_freedict	lib/iniparser/src/iniparser.c	/^void iniparser_freedict(dictionary * d)$/;"	f
iniparser_getboolean	lib/iniparser/src/iniparser.c	/^int iniparser_getboolean(dictionary * d, const char * key, int notfound)$/;"	f
iniparser_getdouble	lib/iniparser/src/iniparser.c	/^double iniparser_getdouble(dictionary * d, const char * key, double notfound)$/;"	f
iniparser_getint	lib/iniparser/src/iniparser.c	/^int iniparser_getint(dictionary * d, const char * key, int notfound)$/;"	f
iniparser_getnsec	lib/iniparser/src/iniparser.c	/^int iniparser_getnsec(dictionary * d)$/;"	f
iniparser_getseckeys	lib/iniparser/src/iniparser.c	/^char ** iniparser_getseckeys(dictionary * d, char * s)$/;"	f
iniparser_getsecname	lib/iniparser/src/iniparser.c	/^char * iniparser_getsecname(dictionary * d, int n)$/;"	f
iniparser_getsecnkeys	lib/iniparser/src/iniparser.c	/^int iniparser_getsecnkeys(dictionary * d, char * s)$/;"	f
iniparser_getstring	lib/iniparser/src/iniparser.c	/^char * iniparser_getstring(dictionary * d, const char * key, char * def)$/;"	f
iniparser_line	lib/iniparser/src/iniparser.c	/^static line_status iniparser_line($/;"	f	file:
iniparser_load	lib/iniparser/src/iniparser.c	/^dictionary * iniparser_load(const char * ininame)$/;"	f
iniparser_set	lib/iniparser/src/iniparser.c	/^int iniparser_set(dictionary * ini, const char * entry, const char * val)$/;"	f
iniparser_unset	lib/iniparser/src/iniparser.c	/^void iniparser_unset(dictionary * ini, const char * entry)$/;"	f
init_newpart	src/old/dust_triangulation.c	/^void init_newpart() \/\/initialize parameters for particle injection$/;"	f
init_newpart	src/old/flux.c	/^void init_newpart() \/\/initialize parameters for particle injection$/;"	f
init_newpart	src/old/triang/dust_triangulation.c	/^void init_newpart() \/\/initialize parameters for particle injection$/;"	f
init_newpart	src/old/triang/flux.c	/^void init_newpart() \/\/initialize parameters for particle injection$/;"	f
init_primeroot	src/old/generate.c	/^void init_primeroot(double seed)$/;"	f
init_primeroot	src/old/generate_bug.c	/^void init_primeroot(double seed)$/;"	f
init_primeroot	src/old/triang/generate.c	/^void init_primeroot(double seed)$/;"	f
init_primeroot	src/old/triang/generate_bug.c	/^void init_primeroot(double seed)$/;"	f
init_query_structure	src/old/triang/construct.c	/^static int init_query_structure(segnum)$/;"	f	file:
init_search	doc/html/search/search.js	/^function init_search()$/;"	f
initialise	src/old/triang/tri.c	/^static int initialise(n)$/;"	f	file:
initpartcheck	src/old/generate.c	/^int initpartcheck(double px, double py, double pz, double delta)$/;"	f
initpartcheck	src/old/generate_bug.c	/^int initpartcheck(double px, double py, double delta)$/;"	f
initpartcheck	src/old/triang/generate.c	/^int initpartcheck(double px, double py, double pz, double delta)$/;"	f
initpartcheck	src/old/triang/generate_bug.c	/^int initpartcheck(double px, double py, double delta)$/;"	f
initpartcheck_restart	src/old/generate.c	/^int initpartcheck_restart(int dno, double px, double py, double pz, double delta)$/;"	f
initpartcheck_restart	src/old/triang/generate.c	/^int initpartcheck_restart(int dno, double px, double py, double pz, double delta)$/;"	f
inline	proof of concept/vectorfield/main.c	11;"	d	file:
inner	proof of concept/interpolate/main.c	/^void inner(double *result, const double *val, const long int *mul, long int p, double factor, double *decimal, double *complement){$/;"	f
inner2	proof of concept/interpolate/main.c	/^double inner2(const double *val, const long int *mul, long int p, double *decimal, double *complement){$/;"	f
innerC	proof of concept/interpolate/main.c	/^void innerC(double *result, const double *val, const long int *mul, long int p){$/;"	f
innerC2	proof of concept/interpolate/main.c	/^double innerC2(const double *val, const long int *mul, long int p){$/;"	f
inserted	src/old/triang/construct.c	/^static int inserted(segnum, whichpt)$/;"	f	file:
inside_polygon	src/old/triang/monotone.c	/^static int inside_polygon(t)$/;"	f	file:
intArrCumProd	src/aux.c	/^int *intArrCumProd(const int *a, int nElements){$/;"	f
intArrMul	src/aux.c	/^int *intArrMul(const int *a, const int *b, int nElements){$/;"	f
intArrProd	src/aux.c	/^int intArrProd(const int *a, int nElements){$/;"	f
interp	src/old/fmg/fmg.c	/^void interp(double ***uf, double ***uc, int nfx, int nfy, int nfz)$/;"	f
interp3D	proof of concept/interpolate/main.c	/^inline double interp3D(const double *val, const double *pos, const long int *nGPointsProd){$/;"	f
interpA	proof of concept/vectorfield/main.c	/^inline double interpA(const double *val, const double *pos, const long int *nGPointsProd){$/;"	f
interpAll3D	proof of concept/interpolate/main.c	/^double interpAll3D(const double *val, const double *pos, const long int *nGPointsProd, int nDims, long int nParticles){$/;"	f
interpAllBinary	proof of concept/interpolate/main.c	/^double interpAllBinary(const double *val, const double *pos, const long int *nGPointsProd, int nDims, double *decimal, double *complement, int nCorners, long int nParticles){$/;"	f
interpAllGray	proof of concept/interpolate/main.c	/^double interpAllGray(const double *val, const double *pos, const long int *nGPointsProd, int nDims, double *decimal, double *complement, int nCorners, long int nParticles){$/;"	f
interpAllRecursive	proof of concept/interpolate/main.c	/^double interpAllRecursive(const double *val, const double *pos, const long int *nGPointsProd, int nDims, int *integer, double *decimal, double *complement, long int nParticles){$/;"	f
interpAllRecursive2	proof of concept/interpolate/main.c	/^double interpAllRecursive2(const double *val, const double *pos, const long int *nGPointsProd, int nDims, int *integer, double *decimal, double *complement, long int nParticles){$/;"	f
interpB	proof of concept/vectorfield/main.c	/^inline void interpB(double *result, const double *val, const double *pos, const long int *nGPointsProd){$/;"	f
interpBb	proof of concept/vectorfield/main.c	/^inline void interpBb(double *result, const double *val, const double *pos, const long int *sizeProd){$/;"	f
interpBc	proof of concept/vectorfield/main.c	/^inline void interpBc(double *result, const double *val, const double *pos, const long int *sizeProd){$/;"	f
interpBinary	proof of concept/interpolate/main.c	/^inline double interpBinary(const double *val, const double *pos, const long int *nGPointsProd, int nDims, double *decimal, double *complement, int nCorners){$/;"	f
interpC3D	proof of concept/interpolate/main.c	/^ inline double interpC3D(const double *val, const double *pos, const long int *nGPointsProd){$/;"	f
interpCAll3D	proof of concept/interpolate/main.c	/^double interpCAll3D(const double *val, const double *pos, const long int *nGPointsProd, int nDims, long int nParticles){$/;"	f
interpCAllBinary	proof of concept/interpolate/main.c	/^double interpCAllBinary(const double *val, const double *pos, const long int *nGPointsProd, int nDims, int nCorners, long int nParticles){$/;"	f
interpCAllGray	proof of concept/interpolate/main.c	/^double interpCAllGray(const double *val, const double *pos, const long int *nGPointsProd, int nDims, int nCorners, long int nParticles){$/;"	f
interpCAllRecursive	proof of concept/interpolate/main.c	/^double interpCAllRecursive(const double *val, const double *pos, const long int *nGPointsProd, int nDims, long int nParticles){$/;"	f
interpCAllRecursive2	proof of concept/interpolate/main.c	/^double interpCAllRecursive2(const double *val, const double *pos, const long int *nGPointsProd, int nDims, long int nParticles){$/;"	f
interpCBinary	proof of concept/interpolate/main.c	/^inline double interpCBinary(const double *val, const double *pos, const long int *nGPointsProd, int nDims, int nCorners){$/;"	f
interpCGray	proof of concept/interpolate/main.c	/^static inline double interpCGray(const double *val, const double *pos, const long int *nGPointsProd, int nDims, int nCorners){$/;"	f	file:
interpCRecursive	proof of concept/interpolate/main.c	/^inline double interpCRecursive(const double *val, const double *pos, const long int *nGPointsProd, int nDims){$/;"	f
interpCRecursive2	proof of concept/interpolate/main.c	/^inline double interpCRecursive2(const double *val, const double *pos, const long int *nGPointsProd, int nDims){$/;"	f
interpGray	proof of concept/interpolate/main.c	/^static inline double interpGray(const double *val, const double *pos, const long int *nGPointsProd, int nDims, double *decimal, double *complement, int nCorners){$/;"	f	file:
interpRecursive	proof of concept/interpolate/main.c	/^inline double interpRecursive(const double *val, const double *pos, const long int *nGPointsProd, int nDims, int *integer, double *decimal, double *complement){$/;"	f
interpRecursive2	proof of concept/interpolate/main.c	/^inline double interpRecursive2(const double *val, const double *pos, const long int *nGPointsProd, int nDims, int *integer, double *decimal, double *complement){$/;"	f
ion	src/old/const.h	44;"	d
ion	src/old/triang/const.h	44;"	d
ipe	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
ipe	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
ipe_time	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
ipe_time	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
ires	src/old/const.h	/^double ***ires[NGMAX+1],***irho[NGMAX+1],***irhs[NGMAX+1],***iu[NGMAX+1];$/;"	v
ires	src/old/triang/const.h	/^double ***ires[NGMAX+1],***irho[NGMAX+1],***irhs[NGMAX+1],***iu[NGMAX+1];$/;"	v
irho	src/old/const.h	/^double ***ires[NGMAX+1],***irho[NGMAX+1],***irhs[NGMAX+1],***iu[NGMAX+1];$/;"	v
irho	src/old/triang/const.h	/^double ***ires[NGMAX+1],***irho[NGMAX+1],***irhs[NGMAX+1],***iu[NGMAX+1];$/;"	v
irhs	src/old/const.h	/^double ***ires[NGMAX+1],***irho[NGMAX+1],***irhs[NGMAX+1],***iu[NGMAX+1];$/;"	v
irhs	src/old/triang/const.h	/^double ***ires[NGMAX+1],***irho[NGMAX+1],***irhs[NGMAX+1],***iu[NGMAX+1];$/;"	v
is_inserted	src/old/triang/triangulate.h	/^  int is_inserted;		\/* inserted in trapezoidation yet ? *\/$/;"	m	struct:__anon8
is_left_of	src/old/triang/construct.c	/^static int is_left_of(segnum, v)$/;"	f	file:
is_point_inside_polygon	src/old/triang/tri.c	/^int is_point_inside_polygon(vertex)$/;"	f
iu	src/old/const.h	/^double ***ires[NGMAX+1],***irho[NGMAX+1],***irhs[NGMAX+1],***iu[NGMAX+1];$/;"	v
iu	src/old/triang/const.h	/^double ***ires[NGMAX+1],***irho[NGMAX+1],***irhs[NGMAX+1],***iu[NGMAX+1];$/;"	v
ivecmem	src/old/shortcuts.c	/^int *ivecmem(long nl,long nh)$/;"	f
ivecmem	src/old/triang/shortcuts.c	/^int *ivecmem(long nl,long nh)$/;"	f
ivector	src/old/fmg/nrutil.c	/^int *ivector(long nl, long nh)$/;"	f
ivector	src/old/fmg/nrutil.c	/^int *ivector(nl,nh)$/;"	f
ivxphs	src/old/const.h	/^FILE *evxphs, *ivxphs;$/;"	v
ivxphs	src/old/triang/const.h	/^FILE *evxphs, *ivxphs;$/;"	v
ix	src/old/shortcuts.c	/^inline int ix(int off, int i, int j, int k)$/;"	f
ix	src/old/triang/shortcuts.c	/^inline int ix(int off, int i, int j, int k)$/;"	f
jacobian	src/multigrid.c	/^void jacobian(Grid *phi,const Grid *rho, int nCycles){$/;"	f
kenergy	src/old/const.h	/^  double kenergy;$/;"	m	struct:particle
kenergy	src/old/triang/const.h	/^  double kenergy;$/;"	m	struct:particle
key	lib/iniparser/src/dictionary.h	/^    char        **  key ;   \/** List of string keys *\/$/;"	m	struct:_dictionary_
l00001	doc/html/aux_8c.html	/^<p>The result will be given by: <\/p><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;result[0] = 1;<\/div>$/;"	a
l00001	doc/html/grid_8c.html	/^<\/div><!-- fragment --><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;getSlice(slice, grid, 0, 1);<\/div>$/;"	a
l00001	doc/html/grid_8c.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;15   16   17   18   19<\/div>$/;"	a
l00001	doc/html/grid_8c.html	/^<p>Example: We have a 1D slice consisting of 6 2s and want to insert it onto the third row, from the bottom. <\/p><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;111111<\/div>$/;"	a
l00001	doc/html/io_8c.html	/^<p>Example: <\/p><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;iniAssertEqualNElements(ini,3,&quot;mySec:a&quot;,&quot;mySec:b&quot;,&quot;mySec:c&quot;);<\/div>$/;"	a
l00001	doc/html/multigrid_8h_source.html	/^<a href="multigrid_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="preprocessor">#ifndef MULTIGRID_H<\/span><\/div>$/;"	a
l00001	doc/html/pinc_8h.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;pos[i*nDims+d] = 1000*mpiRank + i + (double)d\/10 + (double)s\/100;<\/div>$/;"	a
l00001	doc/html/pinc_8h.html	/^<p>Example: <\/p><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;iniAssertEqualNElements(ini,3,&quot;mySec:a&quot;,&quot;mySec:b&quot;,&quot;mySec:c&quot;);<\/div>$/;"	a
l00001	doc/html/pinc_8h.html	/^<p>The result will be given by: <\/p><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;result[0] = 1;<\/div>$/;"	a
l00001	doc/html/pinc_8h_source.html	/^<a href="pinc_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div>$/;"	a
l00001	doc/html/population_8c.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;pos[i*nDims+d] = 1000*mpiRank + i + (double)d\/10 + (double)s\/100;<\/div>$/;"	a
l00001	doc/html/pusher_8h_source.html	/^<a href="pusher_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="preprocessor">#ifndef PUSHER_H<\/span><\/div>$/;"	a
l00001	doc/html/test_8h.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;int myProduct(int a, int b){<\/div>$/;"	a
l00001	doc/html/test_8h.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;utRun(&amp;testMyProduct);<\/div>$/;"	a
l00001	doc/html/test_8h_source.html	/^<a href="test_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div>$/;"	a
l00002	doc/html/aux_8c.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;result[1] = a[0];<\/div>$/;"	a
l00002	doc/html/grid_8c.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;111111<\/div>$/;"	a
l00002	doc/html/grid_8c.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<\/div>$/;"	a
l00002	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="preprocessor">#define MULTIGRID_H<\/span><\/div>$/;"	a
l00002	doc/html/pinc_8h.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;result[1] = a[0];<\/div>$/;"	a
l00002	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="preprocessor">#define PUSHER_H<\/span><\/div>$/;"	a
l00002	doc/html/test_8h.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;   return a*b;<\/div>$/;"	a
l00003	doc/html/aux_8c.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;result[2] = a[0]*a[1];<\/div>$/;"	a
l00003	doc/html/grid_8c.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;10   11   12   13   14<\/div>$/;"	a
l00003	doc/html/grid_8c.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;111111<\/div>$/;"	a
l00003	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<\/div>$/;"	a
l00003	doc/html/pinc_8h.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;result[2] = a[0]*a[1];<\/div>$/;"	a
l00003	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<\/div>$/;"	a
l00003	doc/html/test_8h.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;}<\/div>$/;"	a
l00004	doc/html/aux_8c.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;...<\/div>$/;"	a
l00004	doc/html/grid_8c.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;111111<\/div>$/;"	a
l00004	doc/html/grid_8c.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<\/div>$/;"	a
l00004	doc/html/pinc_8h.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;...<\/div>$/;"	a
l00004	doc/html/test_8h.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<\/div>$/;"	a
l00005	doc/html/grid_8c.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160; 5    6    7    8    9<\/div>$/;"	a
l00005	doc/html/grid_8c.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<\/div>$/;"	a
l00005	doc/html/test_8h.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;static int testMyProduct(){<\/div>$/;"	a
l00006	doc/html/grid_8c.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div>$/;"	a
l00006	doc/html/grid_8c.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;setSlice(slice, grid, 0, 2);<\/div>$/;"	a
l00006	doc/html/test_8h.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div>$/;"	a
l00007	doc/html/grid_8c.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160; 0    1    2    3    4<\/div>$/;"	a
l00007	doc/html/grid_8c.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div>$/;"	a
l00007	doc/html/test_8h.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;   double result = myProduct(2,3);<\/div>$/;"	a
l00008	doc/html/grid_8c.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;111111<\/div>$/;"	a
l00008	doc/html/test_8h.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;   utAssert(result==6,&quot;wrong result, 2*3 claimed to be %i.&quot;,result);<\/div>$/;"	a
l00009	doc/html/grid_8c.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;222222<\/div>$/;"	a
l00009	doc/html/test_8h.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<\/div>$/;"	a
l00009	doc/html/test_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#ifndef TEST_H<\/span><\/div>$/;"	a
l00010	doc/html/grid_8c.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;111111<\/div>$/;"	a
l00010	doc/html/test_8h.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;   result = myProduct(30000,30000);<\/div>$/;"	a
l00010	doc/html/test_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#define TEST_H<\/span><\/div>$/;"	a
l00011	doc/html/grid_8c.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;111111<\/div>$/;"	a
l00011	doc/html/test_8h.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;   utAssert(result==900000000,&quot;doesn&#39;t work on large integers.&quot;);<\/div>$/;"	a
l00011	doc/html/test_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div>$/;"	a
l00012	doc/html/test_8h.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div>$/;"	a
l00012	doc/html/test_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &lt;stdarg.h&gt;<\/span><\/div>$/;"	a
l00013	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#ifndef PINC_H<\/span><\/div>$/;"	a
l00013	doc/html/test_8h.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;   return 0;<\/div>$/;"	a
l00013	doc/html/test_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;iniparser.h&quot;<\/span><\/div>$/;"	a
l00014	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#define PINC_H<\/span><\/div>$/;"	a
l00014	doc/html/test_8h.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;}<\/div>$/;"	a
l00014	doc/html/test_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div>$/;"	a
l00015	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00016	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;iniparser.h&quot;<\/span><\/div>$/;"	a
l00017	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;time.h&gt;<\/span><\/div>$/;"	a
l00018	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &lt;hdf5.h&gt;<\/span><\/div>$/;"	a
l00019	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;gsl\/gsl_rng.h&gt;<\/span><\/div>$/;"	a
l00020	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00021	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">\/******************************************************************************<\/span><\/div>$/;"	a
l00022	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment"> * DEFINING PHYSICAL CONSTANTS (following SI standard)<\/span><\/div>$/;"	a
l00023	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment"> *****************************************************************************\/<\/span><\/div>$/;"	a
l00024	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00025	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#define BOLTZMANN 1.3806488e-23<\/span><\/div>$/;"	a
l00026	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#define ELECTRON_MASS 9.10938215e-31<\/span><\/div>$/;"	a
l00027	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160; <span class="keywordtype">void<\/span> <a class="code" href="pusher_8h.html#adb88e9fc6d6539c0aed7e81d4fdf978c">puMove<\/a>(<a class="code" href="structPopulation.html">Population<\/a> *pop);<\/div>$/;"	a
l00028	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="structMultigrid.html">   28<\/a><\/span>&#160; <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>{<\/div>$/;"	a
l00028	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="comment">\/******************************************************************************<\/span><\/div>$/;"	a
l00028	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00029	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="structMultigrid.html#aaa6519cf9cc031c752646f280f78104b">   29<\/a><\/span>&#160;    <a class="code" href="structGrid.html">Grid<\/a> **<a class="code" href="structMultigrid.html#aaa6519cf9cc031c752646f280f78104b">grids<\/a>;   <\/div>$/;"	a
l00029	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="comment"> * DECLARING DATATYPES<\/span><\/div>$/;"	a
l00030	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="structMultigrid.html#ad067de0a3c5d381d7d346974014c4fd6">   30<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structMultigrid.html#ad067de0a3c5d381d7d346974014c4fd6">nLevels<\/a>;                    <\/div>$/;"	a
l00030	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment"> *****************************************************************************\/<\/span><\/div>$/;"	a
l00031	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="structMultigrid.html#afe9cb1165b41ba69c7d32017b21ccf28">   31<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structMultigrid.html#afe9cb1165b41ba69c7d32017b21ccf28">nMGCycles<\/a>;                  <\/div>$/;"	a
l00032	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    <span class="keywordtype">int<\/span> nPreSmooth;                 <\/div>$/;"	a
l00033	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <span class="keywordtype">int<\/span> nPostSmooth;<\/div>$/;"	a
l00034	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    <span class="keywordtype">int<\/span> nCoarseSolve;<\/div>$/;"	a
l00035	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00036	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="structMultigrid.html#a66c785f1d6ff0ff6f0ed403ec59209db">   36<\/a><\/span>&#160;    void (*coarseSolv)(<a class="code" href="structGrid.html">Grid<\/a> *phi, <span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *rho, <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> nCycles);  <\/div>$/;"	a
l00037	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="structMultigrid.html#a72ead5f278d47f787a4c46c0ecef3ec3">   37<\/a><\/span>&#160;    void (*postSmooth)(<a class="code" href="structGrid.html">Grid<\/a> *phi, <span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *rho, <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> nCycles);  <\/div>$/;"	a
l00038	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="structMultigrid.html#a124881c7e8be424e527e6d41322d57dd">   38<\/a><\/span>&#160;    void (*preSmooth)(<a class="code" href="structGrid.html">Grid<\/a> *phi, <span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *rho, <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> nCycles);   <\/div>$/;"	a
l00038	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160; <span class="keywordtype">void<\/span> <a class="code" href="pusher_8h.html#a614da237aea53934849b87fe533d114c">puBndPeriodic<\/a>(<a class="code" href="structPopulation.html">Population<\/a> *pop, <span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *grid);<\/div>$/;"	a
l00039	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="structMultigrid.html#ad21e55cab30da30d81913a89189741ec">   39<\/a><\/span>&#160;    void (*restrictor)(<span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *fine, <a class="code" href="structGrid.html">Grid<\/a> *coarse); <\/div>$/;"	a
l00039	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div>$/;"	a
l00040	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="structMultigrid.html#a414d5b884eaf84a945adc0c6f9835bc3">   40<\/a><\/span>&#160;    void (*prolongator)(<a class="code" href="structGrid.html">Grid<\/a> *fine, <span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *coarse);    <\/div>$/;"	a
l00041	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;} <a class="code" href="structMultigrid.html">Multigrid<\/a>;<\/div>$/;"	a
l00042	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div>$/;"	a
l00043	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<a class="code" href="structMultigrid.html">Multigrid<\/a> *mgAlloc(<span class="keyword">const<\/span> dictionary *ini, <a class="code" href="structGrid.html">Grid<\/a> *grid);<\/div>$/;"	a
l00044	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00050	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160; <span class="keywordtype">void<\/span> <a class="code" href="pusher_8h.html#a68807253b79d242c75c9dd29f1fa09fa">puDistr3D1<\/a>(<span class="keyword">const<\/span> <a class="code" href="structPopulation.html">Population<\/a> *pop, <a class="code" href="structGrid.html">Grid<\/a> *rho);<\/div>$/;"	a
l00051	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div>$/;"	a
l00054	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="multigrid_8h.html#a16df94d536cbbc6a94c43578d96cb2a6">mgFree<\/a>(<a class="code" href="structMultigrid.html">Multigrid<\/a> *multigrid);<\/div>$/;"	a
l00055	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div>$/;"	a
l00056	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="keywordtype">void<\/span> linearMGSolv(<a class="code" href="structMultigrid.html">Multigrid<\/a> *multiRho, <a class="code" href="structMultigrid.html">Multigrid<\/a> *multiPhi);<\/div>$/;"	a
l00057	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div>$/;"	a
l00058	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<span class="keywordtype">void<\/span> gaussSeidel2D(<a class="code" href="structGrid.html">Grid<\/a> *phi, <span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *rho, <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> nCycles);<\/div>$/;"	a
l00059	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<span class="keywordtype">void<\/span> jacobian(<a class="code" href="structGrid.html">Grid<\/a> *phi, <span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *rho, <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> nCycles);<\/div>$/;"	a
l00060	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00061	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<span class="comment">\/\/Restriction and prolongators<\/span><\/div>$/;"	a
l00061	doc/html/test_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="test_8h.html#a80ec367815f1e68a08f6b6390181a30a">   61<\/a><\/span>&#160;<span class="preprocessor">#define utAssert(...) do { int fail = utAssertInner(__FILE__,__func__,__LINE__,__VA_ARGS__); if(fail) return 1; } while (0)<\/span><\/div>$/;"	a
l00062	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<span class="keywordtype">void<\/span> halfWeightRestrict(<span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *fine, <a class="code" href="structGrid.html">Grid<\/a> *coarse);<\/div>$/;"	a
l00062	doc/html/test_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div>$/;"	a
l00063	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="keywordtype">void<\/span> bilinearProlong(<a class="code" href="structGrid.html">Grid<\/a> *fine,<span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *coarse);<\/div>$/;"	a
l00064	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div>$/;"	a
l00065	doc/html/multigrid_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="preprocessor"> #endif \/\/ MULTIGRID_H<\/span><\/div>$/;"	a
l00068	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno"><a class="line" href="structPopulation.html">   68<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>{<\/div>$/;"	a
l00069	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno"><a class="line" href="structPopulation.html#aefda644b2d7fd5341a046e9e4eb2ca7f">   69<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structPopulation.html#aefda644b2d7fd5341a046e9e4eb2ca7f">pos<\/a>;        <\/div>$/;"	a
l00070	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="structPopulation.html#afd2ad54ea56bd55664129a1be9c14a17">   70<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structPopulation.html#afd2ad54ea56bd55664129a1be9c14a17">vel<\/a>;        <\/div>$/;"	a
l00070	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160; <span class="keywordtype">void<\/span> <a class="code" href="pusher_8h.html#a67f3253e5dbeaa24f837f4b287f9050a">puAcc3D1<\/a>(<a class="code" href="structPopulation.html">Population<\/a> *pop, <a class="code" href="structGrid.html">Grid<\/a> *E);<\/div>$/;"	a
l00071	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno"><a class="line" href="structPopulation.html#a3775c44b29e855028bdfa6a8c6bf1762">   71<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structPopulation.html#a3775c44b29e855028bdfa6a8c6bf1762">energy<\/a>;     <\/div>$/;"	a
l00071	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00072	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno"><a class="line" href="structPopulation.html#a8474d8ebc9161b0c18ca17fc49f96c46">   72<\/a><\/span>&#160;    <span class="keywordtype">long<\/span> <span class="keywordtype">int<\/span> *<a class="code" href="structPopulation.html#a8474d8ebc9161b0c18ca17fc49f96c46">iStart<\/a>;   <\/div>$/;"	a
l00072	doc/html/pusher_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<span class="preprocessor">#endif \/\/ PUSHER_H<\/span><\/div>$/;"	a
l00073	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno"><a class="line" href="structPopulation.html#a9b5e4d60e84407c462d967f516c541c9">   73<\/a><\/span>&#160;    <span class="keywordtype">long<\/span> <span class="keywordtype">int<\/span> *<a class="code" href="structPopulation.html#a9b5e4d60e84407c462d967f516c541c9">iStop<\/a>;    <\/div>$/;"	a
l00074	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno"><a class="line" href="structPopulation.html#a8fcade69e2853fcb75fb8fef2a4ce25e">   74<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structPopulation.html#a8fcade69e2853fcb75fb8fef2a4ce25e">renormRho<\/a>;  <\/div>$/;"	a
l00074	doc/html/test_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="test_8h.html#a173db7863d64538da61c89a5eecc12f9">utAssertInner<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *file, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *func, <span class="keywordtype">int<\/span> line, <span class="keywordtype">int<\/span> test, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * restrict format,...);<\/div>$/;"	a
l00075	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno"><a class="line" href="structPopulation.html#a2f0a895540e93da895ed7f064a8eb779">   75<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structPopulation.html#a2f0a895540e93da895ed7f064a8eb779">renormE<\/a>;    <\/div>$/;"	a
l00075	doc/html/test_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div>$/;"	a
l00076	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno"><a class="line" href="structPopulation.html#a9051c27415dc8b3dfe991970dbadd37f">   76<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structPopulation.html#a9051c27415dc8b3dfe991970dbadd37f">nSpecies<\/a>;       <\/div>$/;"	a
l00077	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno"><a class="line" href="structPopulation.html#a0a5a82937fa0a2a9b99dc9c4bc2cd2be">   77<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structPopulation.html#a0a5a82937fa0a2a9b99dc9c4bc2cd2be">nDims<\/a>;          <\/div>$/;"	a
l00078	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno"><a class="line" href="structPopulation.html#a29dd75a601a40ab3842c3b871ef88bf9">   78<\/a><\/span>&#160;    hid_t <a class="code" href="structPopulation.html#a29dd75a601a40ab3842c3b871ef88bf9">h5<\/a>;           <\/div>$/;"	a
l00079	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;} <a class="code" href="structPopulation.html">Population<\/a>;<\/div>$/;"	a
l00080	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00087	doc/html/test_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="test_8h.html#a60a19d32207c2f45e8d542d80da79e7c">utRun<\/a>(<span class="keywordtype">int<\/span> (*fun)());<\/div>$/;"	a
l00088	doc/html/test_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div>$/;"	a
l00089	doc/html/test_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;dictionary *iniGetDummy();<\/div>$/;"	a
l00090	doc/html/test_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;dictionary *iniSetDummy(<span class="keywordtype">int<\/span> argc,<span class="keywordtype">char<\/span> **argv);<\/div>$/;"	a
l00091	doc/html/test_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div>$/;"	a
l00096	doc/html/test_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="test_8h.html#a4b3df40b09652e06bf63fc905210591d">utSummary<\/a>();<\/div>$/;"	a
l00097	doc/html/test_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div>$/;"	a
l00104	doc/html/test_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="test_8h.html#af212e79c078b864cf6a637b65082111a">testAux<\/a>();<\/div>$/;"	a
l00105	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html">  105<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>{<\/div>$/;"	a
l00105	doc/html/test_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div>$/;"	a
l00106	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html#ab1570d8d5d3963d3452996713492f32a">  106<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structMpiInfo.html#ab1570d8d5d3963d3452996713492f32a">mpiRank<\/a>;                <\/div>$/;"	a
l00107	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html#a0a6e677d0cb480a76402a0aeaeb9de4f">  107<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structMpiInfo.html#a0a6e677d0cb480a76402a0aeaeb9de4f">mpiSize<\/a>;                <\/div>$/;"	a
l00108	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html#a1240db78bb0d89fb81e071eeeebbf9d6">  108<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structMpiInfo.html#a1240db78bb0d89fb81e071eeeebbf9d6">nDims<\/a>;                  <\/div>$/;"	a
l00109	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html#ab7b9e38d64a255011652330f50aff565">  109<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> *<a class="code" href="structMpiInfo.html#ab7b9e38d64a255011652330f50aff565">subdomain<\/a>;             <\/div>$/;"	a
l00110	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html#a430a2929906b211198114047c9ef8f87">  110<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> *<a class="code" href="structMpiInfo.html#a430a2929906b211198114047c9ef8f87">nSubdomains<\/a>;           <\/div>$/;"	a
l00111	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html#af5359faa687cca51c04d4b899f20099f">  111<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> *<a class="code" href="structMpiInfo.html#af5359faa687cca51c04d4b899f20099f">nSubdomainsProd<\/a>;       <\/div>$/;"	a
l00112	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html#ac641c6b285e155c1a9beee18ec2be6ef">  112<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> *<a class="code" href="structMpiInfo.html#ac641c6b285e155c1a9beee18ec2be6ef">offset<\/a>;                <\/div>$/;"	a
l00112	doc/html/test_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="test_8h.html#a39b8f4a1d14118fa8cbd4d17ff4fba97">testGrid<\/a>();<\/div>$/;"	a
l00113	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno"><a class="line" href="structMpiInfo.html#a884fa4342db637275dcf043b8c44ca0c">  113<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structMpiInfo.html#a884fa4342db637275dcf043b8c44ca0c">posToSubdomain<\/a>;     <\/div>$/;"	a
l00113	doc/html/test_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<\/div>$/;"	a
l00114	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;} <a class="code" href="structMpiInfo.html">MpiInfo<\/a>;<\/div>$/;"	a
l00115	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div>$/;"	a
l00120	doc/html/test_8h_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="test_8h.html#ab57bc5468482c8f4aad380f1f0885104">testPopulation<\/a>();<\/div>$/;"	a
l00121	doc/html/test_8h_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div>$/;"	a
l00128	doc/html/test_8h_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="test_8h.html#ab6593a747110c5c611f54fa9163f162b">testIo<\/a>();<\/div>$/;"	a
l00129	doc/html/test_8h_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<\/div>$/;"	a
l00136	doc/html/test_8h_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="test_8h.html#a94ba40d45eff1a21e4a2fb4958e9cb1b">testPusher<\/a>();<\/div>$/;"	a
l00137	doc/html/test_8h_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;<\/div>$/;"	a
l00144	doc/html/test_8h_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="test_8h.html#a4e62cd57eba7b6515935315570db0b2e">testMultigrid<\/a>();<\/div>$/;"	a
l00145	doc/html/test_8h_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div>$/;"	a
l00146	doc/html/test_8h_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<span class="preprocessor">#endif \/\/ TEST_H<\/span><\/div>$/;"	a
l00229	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00229"><\/a><span class="lineno"><a class="line" href="structGrid.html">  229<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>{<\/div>$/;"	a
l00230	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00230"><\/a><span class="lineno"><a class="line" href="structGrid.html#a6678a9b7b4826c591329ab61ced8e834">  230<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structGrid.html#a6678a9b7b4826c591329ab61ced8e834">val<\/a>;                <\/div>$/;"	a
l00231	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00231"><\/a><span class="lineno"><a class="line" href="structGrid.html#a71c7f28f3712291ebcde86fed2e65382">  231<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structGrid.html#a71c7f28f3712291ebcde86fed2e65382">rank<\/a>;                   <\/div>$/;"	a
l00232	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00232"><\/a><span class="lineno"><a class="line" href="structGrid.html#a49d9929193f929c303cb44de079cfff5">  232<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> *<a class="code" href="structGrid.html#a49d9929193f929c303cb44de079cfff5">size<\/a>;                  <\/div>$/;"	a
l00233	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00233"><\/a><span class="lineno"><a class="line" href="structGrid.html#a984ad64bf717fcf072166a687f656f40">  233<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> *<a class="code" href="structGrid.html#a984ad64bf717fcf072166a687f656f40">trueSize<\/a>;              <\/div>$/;"	a
l00234	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00234"><\/a><span class="lineno"><a class="line" href="structGrid.html#a876feaa44cca67579199e207e83938db">  234<\/a><\/span>&#160;    <span class="keywordtype">long<\/span> <span class="keywordtype">int<\/span> *<a class="code" href="structGrid.html#a876feaa44cca67579199e207e83938db">sizeProd<\/a>;         <\/div>$/;"	a
l00235	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00235"><\/a><span class="lineno"><a class="line" href="structGrid.html#a0482db15e00821f8f1d01f371ad6251b">  235<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> *<a class="code" href="structGrid.html#a0482db15e00821f8f1d01f371ad6251b">nGhostLayers<\/a>;          <\/div>$/;"	a
l00236	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00236"><\/a><span class="lineno"><a class="line" href="structGrid.html#a3c5655db719ff4fc459b7295b152dd68">  236<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structGrid.html#a3c5655db719ff4fc459b7295b152dd68">stepSize<\/a>;           <\/div>$/;"	a
l00237	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;<\/div>$/;"	a
l00238	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00238"><\/a><span class="lineno"><a class="line" href="structGrid.html#a4241d33fd8a3c7132b5d51e465b85902">  238<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> *<a class="code" href="structGrid.html#a4241d33fd8a3c7132b5d51e465b85902">slice<\/a>;              <\/div>$/;"	a
l00239	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00239"><\/a><span class="lineno"><a class="line" href="structGrid.html#a1321d0650356ebe67c03cdc779bd3ffa">  239<\/a><\/span>&#160;    hid_t <a class="code" href="structGrid.html#a1321d0650356ebe67c03cdc779bd3ffa">h5<\/a>;                   <\/div>$/;"	a
l00240	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00240"><\/a><span class="lineno"><a class="line" href="structGrid.html#acbd913c7d5a462a7b6b4f2fd752f17f7">  240<\/a><\/span>&#160;    hid_t <a class="code" href="structGrid.html#acbd913c7d5a462a7b6b4f2fd752f17f7">h5MemSpace<\/a>;           <\/div>$/;"	a
l00241	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00241"><\/a><span class="lineno"><a class="line" href="structGrid.html#a8134c3ba6d49f7ef897e30a5d429054b">  241<\/a><\/span>&#160;    hid_t <a class="code" href="structGrid.html#a8134c3ba6d49f7ef897e30a5d429054b">h5FileSpace<\/a>;          <\/div>$/;"	a
l00242	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;} <a class="code" href="structGrid.html">Grid<\/a>;<\/div>$/;"	a
l00243	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;<\/div>$/;"	a
l00244	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>timespec TimeSpec;<\/div>$/;"	a
l00245	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;<\/div>$/;"	a
l00250	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00250"><\/a><span class="lineno"><a class="line" href="structTimer.html">  250<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct<\/span>{<\/div>$/;"	a
l00251	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00251"><\/a><span class="lineno"><a class="line" href="structTimer.html#abb2755a61db9b730060c35802a9e0ac1">  251<\/a><\/span>&#160;    TimeSpec <a class="code" href="structTimer.html#abb2755a61db9b730060c35802a9e0ac1">previous<\/a>;          <\/div>$/;"	a
l00252	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00252"><\/a><span class="lineno"><a class="line" href="structTimer.html#a2ea0a231e254c28d708e7e4ce5dae328">  252<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="structTimer.html#a2ea0a231e254c28d708e7e4ce5dae328">rank<\/a>;                   <\/div>$/;"	a
l00253	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;} <a class="code" href="structTimer.html">Timer<\/a>;<\/div>$/;"	a
l00254	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;<\/div>$/;"	a
l00255	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;<span class="comment">\/******************************************************************************<\/span><\/div>$/;"	a
l00256	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00256"><\/a><span class="lineno">  256<\/span>&#160;<span class="comment"> * DEFINED IN POPULATION.C<\/span><\/div>$/;"	a
l00257	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;<span class="comment"> *****************************************************************************\/<\/span><\/div>$/;"	a
l00258	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00258"><\/a><span class="lineno">  258<\/span>&#160;<\/div>$/;"	a
l00270	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;<a class="code" href="structPopulation.html">Population<\/a> *<a class="code" href="pinc_8h.html#a4b46a727a7f47e97b58ff61339fbd929">pAlloc<\/a>(<span class="keyword">const<\/span> dictionary *ini);<\/div>$/;"	a
l00271	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;<\/div>$/;"	a
l00277	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00277"><\/a><span class="lineno">  277<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a0b5f88af96ccf76c256ae272bc6e7002">pFree<\/a>(<a class="code" href="structPopulation.html">Population<\/a> *pop);<\/div>$/;"	a
l00278	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00278"><\/a><span class="lineno">  278<\/span>&#160;<\/div>$/;"	a
l00293	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00293"><\/a><span class="lineno">  293<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a2b0051b655c0d0e412a8320d20bd5e31">pSetSpecieNorm<\/a>(<span class="keyword">const<\/span> dictionary *ini, <a class="code" href="structPopulation.html">Population<\/a> *pop, <span class="keywordtype">double<\/span> timeStepMul, <span class="keywordtype">double<\/span> factor);<\/div>$/;"	a
l00294	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00294"><\/a><span class="lineno">  294<\/span>&#160;<\/div>$/;"	a
l00316	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00316"><\/a><span class="lineno">  316<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a4cba91a98a3c4640154a0b0a959c4343">pPosUniform<\/a>(<span class="keyword">const<\/span> dictionary *ini, <a class="code" href="structPopulation.html">Population<\/a> *pop, <span class="keyword">const<\/span> <a class="code" href="structMpiInfo.html">MpiInfo<\/a> *mpiInfo, <span class="keyword">const<\/span> gsl_rng *rngSync);<\/div>$/;"	a
l00317	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00317"><\/a><span class="lineno">  317<\/span>&#160;<\/div>$/;"	a
l00330	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00330"><\/a><span class="lineno">  330<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a5bd6c3c3d609b90d7f70f1ac1d6085c8">pPosDebug<\/a>(<span class="keyword">const<\/span> dictionary *ini, <a class="code" href="structPopulation.html">Population<\/a> *pop);<\/div>$/;"	a
l00331	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00331"><\/a><span class="lineno">  331<\/span>&#160;<\/div>$/;"	a
l00337	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00337"><\/a><span class="lineno">  337<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#ad3e161c9373f143a7d051a24671ce5f5">pVelSet<\/a>(<a class="code" href="structPopulation.html">Population<\/a> *pop, <span class="keyword">const<\/span> <span class="keywordtype">double<\/span> *vel);<\/div>$/;"	a
l00338	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00338"><\/a><span class="lineno">  338<\/span>&#160;<\/div>$/;"	a
l00352	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00352"><\/a><span class="lineno">  352<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a769663cd45bba21eaa676f77f53f1b27">pVelMaxwell<\/a>(<span class="keyword">const<\/span> dictionary *ini, <a class="code" href="structPopulation.html">Population<\/a> *pop, <span class="keyword">const<\/span> gsl_rng *rng);<\/div>$/;"	a
l00353	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00353"><\/a><span class="lineno">  353<\/span>&#160;<\/div>$/;"	a
l00393	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00393"><\/a><span class="lineno">  393<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#ab2837e7544561a38ebe0366673616241">pCreateH5<\/a>(<span class="keyword">const<\/span> dictionary *ini, <a class="code" href="structPopulation.html">Population<\/a> *pop, <span class="keyword">const<\/span> <a class="code" href="structMpiInfo.html">MpiInfo<\/a> *mpiInfo, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *fName);<\/div>$/;"	a
l00394	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00394"><\/a><span class="lineno">  394<\/span>&#160;<\/div>$/;"	a
l00413	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00413"><\/a><span class="lineno">  413<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a266c01b10af0e28f406ae89dbb55eda0">pWriteH5<\/a>(<a class="code" href="structPopulation.html">Population<\/a> *pop, <span class="keyword">const<\/span> <a class="code" href="structMpiInfo.html">MpiInfo<\/a> *mpiInfo, <span class="keywordtype">double<\/span> posN, <span class="keywordtype">double<\/span> velN);<\/div>$/;"	a
l00414	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00414"><\/a><span class="lineno">  414<\/span>&#160;<\/div>$/;"	a
l00420	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00420"><\/a><span class="lineno">  420<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#aed2314a33a759e18632b73fd113e994a">pCloseH5<\/a>(<a class="code" href="structPopulation.html">Population<\/a> *pop);<\/div>$/;"	a
l00421	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00421"><\/a><span class="lineno">  421<\/span>&#160;<\/div>$/;"	a
l00422	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00422"><\/a><span class="lineno">  422<\/span>&#160;<span class="comment">\/******************************************************************************<\/span><\/div>$/;"	a
l00423	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00423"><\/a><span class="lineno">  423<\/span>&#160;<span class="comment"> * DEFINED IN GRID.C<\/span><\/div>$/;"	a
l00424	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00424"><\/a><span class="lineno">  424<\/span>&#160;<span class="comment"> *****************************************************************************\/<\/span><\/div>$/;"	a
l00425	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00425"><\/a><span class="lineno">  425<\/span>&#160;<\/div>$/;"	a
l00439	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00439"><\/a><span class="lineno">  439<\/span>&#160;<a class="code" href="structGrid.html">Grid<\/a> *<a class="code" href="pinc_8h.html#a9fe849c9820f4f6153b98ebef1839a48">gAlloc<\/a>(<span class="keyword">const<\/span> dictionary *ini, <span class="keywordtype">int<\/span> nValues);<\/div>$/;"	a
l00440	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00440"><\/a><span class="lineno">  440<\/span>&#160;<\/div>$/;"	a
l00446	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00446"><\/a><span class="lineno">  446<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a893f9bed8a5bffa4e20435b95a8ff859">gFree<\/a>(<a class="code" href="structGrid.html">Grid<\/a> *grid);<\/div>$/;"	a
l00447	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00447"><\/a><span class="lineno">  447<\/span>&#160;<\/div>$/;"	a
l00453	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00453"><\/a><span class="lineno">  453<\/span>&#160;<a class="code" href="structMpiInfo.html">MpiInfo<\/a> *<a class="code" href="pinc_8h.html#a2c7b1adf615c4e1e7738ebe1e93484b9">gAllocMpi<\/a>(<span class="keyword">const<\/span> dictionary *ini);<\/div>$/;"	a
l00454	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00454"><\/a><span class="lineno">  454<\/span>&#160;<\/div>$/;"	a
l00460	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00460"><\/a><span class="lineno">  460<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#afcb6476a8d79094c848d853912d97f45">gFreeMpi<\/a>(<a class="code" href="structMpiInfo.html">MpiInfo<\/a> *mpiInfo);<\/div>$/;"	a
l00461	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00461"><\/a><span class="lineno">  461<\/span>&#160;<\/div>$/;"	a
l00478	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00478"><\/a><span class="lineno">  478<\/span>&#160;<span class="comment">\/\/void swapHalo(dictionary *ini, Grid *Grid, MpiInfo *mpiInfo, int d);<\/span><\/div>$/;"	a
l00479	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00479"><\/a><span class="lineno">  479<\/span>&#160;<\/div>$/;"	a
l00485	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00485"><\/a><span class="lineno">  485<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a3baeb84df32531dc5d3b21c3ca6eebc4">gZero<\/a>(<a class="code" href="structGrid.html">Grid<\/a> *grid);<\/div>$/;"	a
l00486	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00486"><\/a><span class="lineno">  486<\/span>&#160;<\/div>$/;"	a
l00495	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00495"><\/a><span class="lineno">  495<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a5afa588ef1b6ca739450927227ba9e1f">gSet<\/a>(<a class="code" href="structGrid.html">Grid<\/a> *grid, <span class="keyword">const<\/span> <span class="keywordtype">double<\/span> *value);<\/div>$/;"	a
l00496	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00496"><\/a><span class="lineno">  496<\/span>&#160;<\/div>$/;"	a
l00503	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00503"><\/a><span class="lineno">  503<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#aed9d938b3bb77b5ea1d9a6add0ad2497">gMulDouble<\/a>(<a class="code" href="structGrid.html">Grid<\/a> *grid, <span class="keywordtype">double<\/span> num);<\/div>$/;"	a
l00504	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00504"><\/a><span class="lineno">  504<\/span>&#160;<\/div>$/;"	a
l00511	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00511"><\/a><span class="lineno">  511<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#aa92c1db2255fdf90bc9d62d1baa36135">gFinDiff1st<\/a>(<span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *scalar, <a class="code" href="structGrid.html">Grid<\/a> *field);<\/div>$/;"	a
l00512	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00512"><\/a><span class="lineno">  512<\/span>&#160;<\/div>$/;"	a
l00520	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00520"><\/a><span class="lineno">  520<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a6db1f1756c6051f4f5f1695ae73d1c8f">gFinDiff2nd3D<\/a>(<a class="code" href="structGrid.html">Grid<\/a> *phi,<span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *rho);<\/div>$/;"	a
l00521	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00521"><\/a><span class="lineno">  521<\/span>&#160;<\/div>$/;"	a
l00522	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00522"><\/a><span class="lineno">  522<\/span>&#160;<span class="keywordtype">void<\/span> gFinDiff2nd2D(<a class="code" href="structGrid.html">Grid<\/a> *phi,<span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *rho);<\/div>$/;"	a
l00523	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00523"><\/a><span class="lineno">  523<\/span>&#160;<\/div>$/;"	a
l00532	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00532"><\/a><span class="lineno">  532<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a9a198420cad178835105bdce601ab7dc">gNormalizeE<\/a>(<span class="keyword">const<\/span> dictionary *ini, <a class="code" href="structGrid.html">Grid<\/a> *E);<\/div>$/;"	a
l00533	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00533"><\/a><span class="lineno">  533<\/span>&#160;<\/div>$/;"	a
l00534	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00534"><\/a><span class="lineno">  534<\/span>&#160;<span class="comment">\/******************************************************************************<\/span><\/div>$/;"	a
l00535	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00535"><\/a><span class="lineno">  535<\/span>&#160;<span class="comment"> * DEFINED IN IO.C<\/span><\/div>$/;"	a
l00536	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00536"><\/a><span class="lineno">  536<\/span>&#160;<span class="comment"> *****************************************************************************\/<\/span><\/div>$/;"	a
l00537	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00537"><\/a><span class="lineno">  537<\/span>&#160;<\/div>$/;"	a
l00542	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00542"><\/a><span class="lineno"><a class="line" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7">  542<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">enum<\/span>{<\/div>$/;"	a
l00543	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00543"><\/a><span class="lineno"><a class="line" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7ab15379688176677d49474245a6178d97">  543<\/a><\/span>&#160;    <a class="code" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7ab15379688176677d49474245a6178d97">STATUS<\/a> = 0x00,      <\/div>$/;"	a
l00544	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00544"><\/a><span class="lineno"><a class="line" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7a984de77c680eaff141ec910e25568a81">  544<\/a><\/span>&#160;    <a class="code" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7a984de77c680eaff141ec910e25568a81">WARNING<\/a> = 0x01,     <\/div>$/;"	a
l00545	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00545"><\/a><span class="lineno"><a class="line" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7a2fd6f336d08340583bd620a7f5694c90">  545<\/a><\/span>&#160;    <a class="code" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7a2fd6f336d08340583bd620a7f5694c90">ERROR<\/a> = 0x02,       <\/div>$/;"	a
l00546	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00546"><\/a><span class="lineno"><a class="line" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7af1110c378b0b40a4b5bd04fdd92220c4">  546<\/a><\/span>&#160;    <a class="code" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7af1110c378b0b40a4b5bd04fdd92220c4">ONCE<\/a> = 0x10         <\/div>$/;"	a
l00547	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00547"><\/a><span class="lineno">  547<\/span>&#160;} <a class="code" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7">msgKind<\/a>;<\/div>$/;"	a
l00548	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00548"><\/a><span class="lineno">  548<\/span>&#160;<\/div>$/;"	a
l00565	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00565"><\/a><span class="lineno">  565<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a6655209d3b055ac0891fac473433c8f6">msg<\/a>(<a class="code" href="pinc_8h.html#ac962c5ae4b3e0ed4feebde904cc4aad7">msgKind<\/a> kind, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* restrict format,...);<\/div>$/;"	a
l00566	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00566"><\/a><span class="lineno">  566<\/span>&#160;<\/div>$/;"	a
l00583	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00583"><\/a><span class="lineno">  583<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a57d7735f0e037f6ef61f4297db659383">fMsg<\/a>(dictionary *ini, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* restrict fNameKey, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* restrict format, ...);<\/div>$/;"	a
l00584	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00584"><\/a><span class="lineno">  584<\/span>&#160;<\/div>$/;"	a
l00594	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00594"><\/a><span class="lineno">  594<\/span>&#160;dictionary* <a class="code" href="pinc_8h.html#ab14c24eb3c043c4feb28bf4f58eddf7b">iniOpen<\/a>(<span class="keywordtype">int<\/span> argc, <span class="keywordtype">char<\/span> *argv[]);<\/div>$/;"	a
l00595	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00595"><\/a><span class="lineno">  595<\/span>&#160;<\/div>$/;"	a
l00605	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00605"><\/a><span class="lineno">  605<\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="pinc_8h.html#a491502c5ecc687890215d11e1c74b877">iniGetNElements<\/a>(<span class="keyword">const<\/span> dictionary* ini, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* key);<\/div>$/;"	a
l00606	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00606"><\/a><span class="lineno">  606<\/span>&#160;<\/div>$/;"	a
l00621	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00621"><\/a><span class="lineno">  621<\/span>&#160;<span class="keywordtype">char<\/span>** <a class="code" href="pinc_8h.html#af55b21762f3f922cff4c2766f2a43a80">iniGetStrArr<\/a>(<span class="keyword">const<\/span> dictionary *ini, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *key, <span class="keywordtype">int<\/span> *nElements);<\/div>$/;"	a
l00622	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00622"><\/a><span class="lineno">  622<\/span>&#160;<\/div>$/;"	a
l00636	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00636"><\/a><span class="lineno">  636<\/span>&#160;<span class="keywordtype">int<\/span>* <a class="code" href="pinc_8h.html#aa8e98a4de8328e9cf05ea0d658d2f8e3">iniGetIntArr<\/a>(<span class="keyword">const<\/span> dictionary *ini, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *key, <span class="keywordtype">int<\/span> *nElements);<\/div>$/;"	a
l00637	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00637"><\/a><span class="lineno">  637<\/span>&#160;<\/div>$/;"	a
l00651	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00651"><\/a><span class="lineno">  651<\/span>&#160;<span class="keywordtype">long<\/span> <span class="keywordtype">int<\/span>* <a class="code" href="pinc_8h.html#a515e71a9a7d396ba5572cf11e3dad6f6">iniGetLongIntArr<\/a>(<span class="keyword">const<\/span> dictionary *ini, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *key, <span class="keywordtype">int<\/span> *nElements);<\/div>$/;"	a
l00652	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00652"><\/a><span class="lineno">  652<\/span>&#160;<\/div>$/;"	a
l00666	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00666"><\/a><span class="lineno">  666<\/span>&#160;<span class="keywordtype">double<\/span>* <a class="code" href="pinc_8h.html#abfe89a386577b47b6510cf849a28dd7c">iniGetDoubleArr<\/a>(<span class="keyword">const<\/span> dictionary *ini, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *key, <span class="keywordtype">int<\/span> *nElements);<\/div>$/;"	a
l00667	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00667"><\/a><span class="lineno">  667<\/span>&#160;<\/div>$/;"	a
l00687	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00687"><\/a><span class="lineno">  687<\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="pinc_8h.html#a53c820a54e1775b9c4b7664a81b779ab">iniAssertEqualNElements<\/a>(<span class="keyword">const<\/span> dictionary *ini, <span class="keywordtype">int<\/span> nKeys, ...);<\/div>$/;"	a
l00688	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00688"><\/a><span class="lineno">  688<\/span>&#160;<\/div>$/;"	a
l00695	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00695"><\/a><span class="lineno">  695<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#ae5268e43472918537ec2f718c7907e64">freeStrArr<\/a>(<span class="keywordtype">char<\/span>** strArr);<\/div>$/;"	a
l00696	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00696"><\/a><span class="lineno">  696<\/span>&#160;<\/div>$/;"	a
l00736	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00736"><\/a><span class="lineno">  736<\/span>&#160;hid_t <a class="code" href="pinc_8h.html#a9e6d5d7e4c4e70aeeff5ffb66120a553">createH5File<\/a>(<span class="keyword">const<\/span> dictionary* ini, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *fName, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *fSubExt);<\/div>$/;"	a
l00737	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00737"><\/a><span class="lineno">  737<\/span>&#160;<\/div>$/;"	a
l00756	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00756"><\/a><span class="lineno">  756<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a16eec2f1c8c0b0520b0f22f1f4fbe16e">gValDebug<\/a>(<a class="code" href="structGrid.html">Grid<\/a> *grid, <span class="keyword">const<\/span> <a class="code" href="structMpiInfo.html">MpiInfo<\/a> *mpiInfo);<\/div>$/;"	a
l00757	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00757"><\/a><span class="lineno">  757<\/span>&#160;<\/div>$/;"	a
l00800	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00800"><\/a><span class="lineno">  800<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a4981b342666e29c599fbecccd7ae154e">gCreateH5<\/a>(<span class="keyword">const<\/span> dictionary *ini, <a class="code" href="structGrid.html">Grid<\/a> *grid, <span class="keyword">const<\/span> <a class="code" href="structMpiInfo.html">MpiInfo<\/a> *mpiInfo, <span class="keyword">const<\/span> <span class="keywordtype">double<\/span> *denorm, <span class="keyword">const<\/span> <span class="keywordtype">double<\/span> *dimen, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *fName);<\/div>$/;"	a
l00801	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00801"><\/a><span class="lineno">  801<\/span>&#160;<\/div>$/;"	a
l00815	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00815"><\/a><span class="lineno">  815<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a089289a8d83cd900ffa67af85fa92f16">gWriteH5<\/a>(<span class="keyword">const<\/span> <a class="code" href="structGrid.html">Grid<\/a> *grid, <span class="keyword">const<\/span> <a class="code" href="structMpiInfo.html">MpiInfo<\/a> *mpiInfo, <span class="keywordtype">double<\/span> n);<\/div>$/;"	a
l00816	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00816"><\/a><span class="lineno">  816<\/span>&#160;<\/div>$/;"	a
l00822	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00822"><\/a><span class="lineno">  822<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#aec76c35a854118f985b88fadcafad8a0">gCloseH5<\/a>(<a class="code" href="structGrid.html">Grid<\/a> *grid);<\/div>$/;"	a
l00823	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00823"><\/a><span class="lineno">  823<\/span>&#160;<\/div>$/;"	a
l00824	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00824"><\/a><span class="lineno">  824<\/span>&#160;<span class="comment">\/******************************************************************************<\/span><\/div>$/;"	a
l00825	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00825"><\/a><span class="lineno">  825<\/span>&#160;<span class="comment"> * DEFINED IN AUX.C<\/span><\/div>$/;"	a
l00826	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00826"><\/a><span class="lineno">  826<\/span>&#160;<span class="comment"> *****************************************************************************\/<\/span><\/div>$/;"	a
l00827	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00827"><\/a><span class="lineno">  827<\/span>&#160;<\/div>$/;"	a
l00836	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00836"><\/a><span class="lineno">  836<\/span>&#160;<a class="code" href="structTimer.html">Timer<\/a> *<a class="code" href="pinc_8h.html#ac88ca04fc41365decd989c75901be38d">allocTimer<\/a>(<span class="keywordtype">int<\/span> rank);<\/div>$/;"	a
l00837	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00837"><\/a><span class="lineno">  837<\/span>&#160;<\/div>$/;"	a
l00843	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00843"><\/a><span class="lineno">  843<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#a1ff6df071ef9acc4ea57bfa27c086e34">freeTimer<\/a>(<a class="code" href="structTimer.html">Timer<\/a> *timer);<\/div>$/;"	a
l00844	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00844"><\/a><span class="lineno">  844<\/span>&#160;<\/div>$/;"	a
l00862	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00862"><\/a><span class="lineno">  862<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="pinc_8h.html#af7c83aa1d87d4ad074d32a26d7734322">tMsg<\/a>(<a class="code" href="structTimer.html">Timer<\/a> *timer, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *restrict format, ...);<\/div>$/;"	a
l00863	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00863"><\/a><span class="lineno">  863<\/span>&#160;<\/div>$/;"	a
l00870	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00870"><\/a><span class="lineno">  870<\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="pinc_8h.html#aa720e9b4a23df6191e4c251684e0a4c0">intArrProd<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *a, <span class="keywordtype">int<\/span> nElements);<\/div>$/;"	a
l00871	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00871"><\/a><span class="lineno">  871<\/span>&#160;<\/div>$/;"	a
l00878	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00878"><\/a><span class="lineno">  878<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="pinc_8h.html#a78cb59f2ec4d1fd68d96837952fdf3bd">doubleArrProd<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">double<\/span> *a, <span class="keywordtype">int<\/span> nElements);<\/div>$/;"	a
l00879	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00879"><\/a><span class="lineno">  879<\/span>&#160;<\/div>$/;"	a
l00894	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00894"><\/a><span class="lineno">  894<\/span>&#160;<span class="keywordtype">int<\/span> *<a class="code" href="pinc_8h.html#aeccb00fea5c0d158b952e71a767d7eea">intArrCumProd<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *a, <span class="keywordtype">int<\/span> nElements);<\/div>$/;"	a
l00895	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00895"><\/a><span class="lineno">  895<\/span>&#160;<\/div>$/;"	a
l00910	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00910"><\/a><span class="lineno">  910<\/span>&#160;<span class="keywordtype">long<\/span> <span class="keywordtype">int<\/span> *<a class="code" href="pinc_8h.html#a52c26a9ff4e20b632f2d6ae7bb698d47">longIntArrCumProd<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *a, <span class="keywordtype">int<\/span> nElements);<\/div>$/;"	a
l00911	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00911"><\/a><span class="lineno">  911<\/span>&#160;<\/div>$/;"	a
l00919	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00919"><\/a><span class="lineno">  919<\/span>&#160;<span class="keywordtype">int<\/span> *<a class="code" href="pinc_8h.html#a24f69d67a7baf29a4ce05d348fe9c29d">intArrMul<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *a, <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *b, <span class="keywordtype">int<\/span> nElements);<\/div>$/;"	a
l00920	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00920"><\/a><span class="lineno">  920<\/span>&#160;<\/div>$/;"	a
l00931	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00931"><\/a><span class="lineno">  931<\/span>&#160;<span class="keywordtype">char<\/span> *<a class="code" href="pinc_8h.html#a92f2f3198af6d49104d20310686030e1">strAllocCat<\/a>(<span class="keywordtype">int<\/span> n,...);<\/div>$/;"	a
l00932	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00932"><\/a><span class="lineno">  932<\/span>&#160;<\/div>$/;"	a
l00933	doc/html/pinc_8h_source.html	/^<div class="line"><a name="l00933"><\/a><span class="lineno">  933<\/span>&#160;<span class="preprocessor">#endif \/\/ PINC_H<\/span><\/div>$/;"	a
latex_count	doc/latex/Makefile	/^	latex_count=8 ; \\$/;"	m
left	src/old/triang/triangulate.h	/^  int left, right;		\/* children *\/$/;"	m	struct:__anon10
letter_G	doc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_G"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;G&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_M	doc/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_M"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;M&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_P	doc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_P"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;P&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_T	doc/html/classes.html	/^<\/td><td valign="top"><a class="el" href="structMultigrid.html">Multigrid<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_T"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;T&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
line_status	lib/iniparser/src/iniparser.c	/^} line_status ;$/;"	t	typeref:enum:_line_status_	file:
linearMGSolv	src/multigrid.c	/^void linearMGSolv(Multigrid *multiRho, Multigrid *multiPhi){$/;"	f
listGetNElements	src/io.c	/^static int listGetNElements(const char* list){$/;"	f	file:
listToStrArr	src/io.c	/^static char** listToStrArr(const char* restrict list){$/;"	f	file:
llb	src/old/const.h	/^double llb[S], lzet[S], lv0[S]; \/\/lower bound, partition funct, initial velocity$/;"	v
llb	src/old/triang/const.h	/^double llb[S], lzet[S], lv0[S]; \/\/lower bound, partition funct, initial velocity$/;"	v
lldx	src/old/const.h	/^double lldx, lldy, lldz;$/;"	v
lldx	src/old/triang/const.h	/^double lldx, lldy, lldz;$/;"	v
lldy	src/old/const.h	/^double lldx, lldy, lldz;$/;"	v
lldy	src/old/triang/const.h	/^double lldx, lldy, lldz;$/;"	v
lldz	src/old/const.h	/^double lldx, lldy, lldz;$/;"	v
lldz	src/old/triang/const.h	/^double lldx, lldy, lldz;$/;"	v
llmesh	src/old/const.h	/^int *llmesh;$/;"	v
llmesh	src/old/triang/const.h	/^int *llmesh;$/;"	v
llnext	src/old/const.h	/^  int llnext;$/;"	m	struct:particle
llnext	src/old/triang/const.h	/^  int llnext;$/;"	m	struct:particle
llngx	src/old/const.h	/^int llngx, llngy, llngz;$/;"	v
llngx	src/old/triang/const.h	/^int llngx, llngy, llngz;$/;"	v
llngy	src/old/const.h	/^int llngx, llngy, llngz;$/;"	v
llngy	src/old/triang/const.h	/^int llngx, llngy, llngz;$/;"	v
llngz	src/old/const.h	/^int llngx, llngy, llngz;$/;"	v
llngz	src/old/triang/const.h	/^int llngx, llngy, llngz;$/;"	v
llsize	src/old/const.h	/^long int llsize;$/;"	v
llsize	src/old/triang/const.h	/^long int llsize;$/;"	v
lmaxarg1	src/old/fmg/nrutil.h	/^static long lmaxarg1,lmaxarg2;$/;"	v
lmaxarg2	src/old/fmg/nrutil.h	/^static long lmaxarg1,lmaxarg2;$/;"	v
lminarg1	src/old/fmg/nrutil.h	/^static long lminarg1,lminarg2;$/;"	v
lminarg2	src/old/fmg/nrutil.h	/^static long lminarg1,lminarg2;$/;"	v
lo	src/old/triang/triangulate.h	/^  point_t hi, lo;		\/* max\/min y-values *\/$/;"	m	struct:__anon9
locate_endpoint	src/old/triang/construct.c	/^int locate_endpoint(v, vo, r)$/;"	f
longIntArrCumProd	src/aux.c	/^long int *longIntArrCumProd(const int *a, int nElements){$/;"	f
lostlist	src/old/const.h	/^long int lostlist[S][NPART_MAX];\/*list of lost part.,each specie*\/$/;"	v
lostlist	src/old/triang/const.h	/^long int lostlist[S][NPART_MAX];\/*list of lost part.,each specie*\/$/;"	v
lostpart	src/old/const.h	/^long int lostpart[S]; \/*no. of lost particles,each species*\/$/;"	v
lostpart	src/old/triang/const.h	/^long int lostpart[S]; \/*no. of lost particles,each species*\/$/;"	v
lseg	src/old/triang/triangulate.h	/^  int lseg, rseg;		\/* two adjoining segments *\/$/;"	m	struct:__anon9
lut	src/old/const.h	/^int **lut;$/;"	v
lut	src/old/triang/const.h	/^int **lut;$/;"	v
lv0	src/old/const.h	/^double llb[S], lzet[S], lv0[S]; \/\/lower bound, partition funct, initial velocity$/;"	v
lv0	src/old/triang/const.h	/^double llb[S], lzet[S], lv0[S]; \/\/lower bound, partition funct, initial velocity$/;"	v
lvector	src/old/fmg/nrutil.c	/^unsigned long *lvector(long nl, long nh)$/;"	f
lvector	src/old/fmg/nrutil.c	/^unsigned long *lvector(nl,nh)$/;"	f
lzet	src/old/const.h	/^double llb[S], lzet[S], lv0[S]; \/\/lower bound, partition funct, initial velocity$/;"	v
lzet	src/old/triang/const.h	/^double llb[S], lzet[S], lv0[S]; \/\/lower bound, partition funct, initial velocity$/;"	v
main	lib/iniparser/src/dictionary.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/iniparser/test/iniexample.c	/^int main(int argc, char * argv[])$/;"	f
main	lib/iniparser/test/parse.c	/^int main(int argc, char * argv[])$/;"	f
main	proof of concept/function pointers/main.c	/^int main(int argc, char **argv){$/;"	f
main	proof of concept/get boundary/challenge/main.c	/^int main(int argc, char **argv){$/;"	f
main	proof of concept/get boundary/main.c	/^int main(int argc, char **argv){$/;"	f
main	proof of concept/get slice/main.c	/^int main(int argc, char **argv){$/;"	f
main	proof of concept/get slice/main.old.c	/^int main(int argc, char **argv){$/;"	f
main	proof of concept/get slice/main.s	/^main:$/;"	l
main	proof of concept/global variables/main.c	/^int main(){$/;"	f
main	proof of concept/interpolate/main.c	/^int main(int argc, char **argv){$/;"	f
main	proof of concept/tail call recursion/main.c	/^int main(int argc, char **argv){$/;"	f
main	proof of concept/tail call recursion/main.s	/^main:$/;"	l
main	proof of concept/vectorfield/main.c	/^int main(int argc, char **argv){$/;"	f
main	src/main.c	/^int main(int argc, char *argv[]){$/;"	f
main	src/main.local.c	/^int main(int argc, char *argv[]){$/;"	f
main	src/old/main_backup.c	/^int main(int argc, char *argv[])$/;"	f
main	src/old/triang/main.c	/^int main(int argc, char *argv[])$/;"	f
main	src/old/triang/main_backup.c	/^int main(int argc, char *argv[])$/;"	f
main	test/main.test.c	/^int main(int argc, char *argv[]){$/;"	f
makeDir	src/aux.c	/^static int makeDir(const char *dir){$/;"	f	file:
makeParentPath	src/aux.c	/^int makeParentPath(const char *path){$/;"	f
make_new_monotone_poly	src/old/triang/monotone.c	/^static int make_new_monotone_poly(mcur, v0, v1)$/;"	f	file:
marked	src/old/triang/triangulate.h	/^  int marked;			\/* polygon *\/$/;"	m	struct:__anon11
markgriddust	src/old/grid.c	/^void markgriddust(void)$/;"	f
markgriddust	src/old/triang/grid.c	/^void markgriddust(void)$/;"	f
mass	src/old/const.h	/^  double mass;$/;"	m	struct:dtriangle
mass	src/old/const.h	/^double mass[S]; \/*mass of the particles*\/$/;"	v
mass	src/old/triang/const.h	/^  double mass;$/;"	m	struct:dtriangle
mass	src/old/triang/const.h	/^double mass[S]; \/*mass of the particles*\/$/;"	v
math_N	src/old/triang/misc.c	/^int math_N(n, h)$/;"	f
math_logstar_n	src/old/triang/misc.c	/^int math_logstar_n(n)$/;"	f
matrix	src/old/fmg/nrutil.c	/^float **matrix(long nrl, long nrh, long ncl, long nch)$/;"	f
matrix	src/old/fmg/nrutil.c	/^float **matrix(nrl,nrh,ncl,nch)$/;"	f
maxarg1	src/old/fmg/nrutil.h	/^static float maxarg1,maxarg2;$/;"	v
maxarg2	src/old/fmg/nrutil.h	/^static float maxarg1,maxarg2;$/;"	v
maxwellian	script/distribution.py	/^maxwellian = ((1\/(2*pi*(vth**2)))**(Nd\/2.0))*exp(-0.5*(v \/vth)**2)*dv$/;"	v
maxx	src/old/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
maxx	src/old/triang/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
maxy	src/old/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
maxy	src/old/triang/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
mchain	src/old/triang/monotone.c	/^static monchain_t mchain[TRSIZE]; \/* Table to hold all the monotone *\/$/;"	v	file:
mem_double	lib/iniparser/src/dictionary.c	/^static void * mem_double(void * ptr, int size)$/;"	f	file:
memorydpart	src/old/dustg.c	/^void memorydpart(int no, int dmax)$/;"	f
memorydpart	src/old/triang/dustg.c	/^void memorydpart(int no, int dmax)$/;"	f
memorydust1_3D	src/old/grid.c	/^ void memorydust1_3D(int no)$/;"	f
memorydust1_3D	src/old/triang/grid.c	/^ void memorydust1_3D(int no)$/;"	f
memorydust2_3D	src/old/grid.c	/^ void memorydust2_3D(int j, int nc){$/;"	f
memorydust2_3D	src/old/triang/grid.c	/^ void memorydust2_3D(int j, int nc){$/;"	f
memoryduststatic	src/old/dustg.c	/^ void memoryduststatic(int no)$/;"	f
memoryduststatic	src/old/triang/dustg.c	/^ void memoryduststatic(int no)$/;"	f
memorygrid	src/old/grid.c	/^void memorygrid(void)$/;"	f
memorygrid	src/old/triang/grid.c	/^void memorygrid(void)$/;"	f
memorygridfree	src/old/grid.c	/^void memorygridfree(void)$/;"	f
memorygridfree	src/old/triang/grid.c	/^void memorygridfree(void)$/;"	f
merge_trapezoids	src/old/triang/construct.c	/^static int merge_trapezoids(segnum, tfirst, tlast, side)$/;"	f	file:
mg Free Multigrid $ ast$multigrid	doc/latex/multigrid_8h.tex	/^\\index{mg\\+Free@{mg\\+Free}!multigrid.\\+h@{multigrid.\\+h}}$/;"	b
mgAlloc	src/multigrid.c	/^Multigrid *mgAlloc(const dictionary *ini, Grid *grid){$/;"	f
mgAllocSubGrids	src/multigrid.c	/^Grid **mgAllocSubGrids(const dictionary *ini, Grid *grid,$/;"	f
mgFree	src/multigrid.c	/^void mgFree(Multigrid *multigrid){$/;"	f
mglin	src/old/fmg/fmg.c	/^void mglin(double *u, int ncycle)$/;"	f
mglin_destroy	src/old/fmg/fmg.c	/^void mglin_destroy()$/;"	f
mglin_init	src/old/fmg/fmg.c	/^void mglin_init(int nx, int ny, int nz)$/;"	f
minarg1	src/old/fmg/nrutil.h	/^static float minarg1,minarg2;$/;"	v
minarg2	src/old/fmg/nrutil.h	/^static float minarg1,minarg2;$/;"	v
minx	src/old/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
minx	src/old/triang/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
miny	src/old/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
miny	src/old/triang/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
mon	src/old/triang/monotone.c	/^static int mon[SEGSIZE];	\/* contains position of any vertex in *\/$/;"	v	file:
mon_idx	src/old/triang/monotone.c	/^static int chain_idx, op_idx, mon_idx;$/;"	v	file:
monchain_t	src/old/triang/triangulate.h	/^} monchain_t;			$/;"	t	typeref:struct:__anon11
monotonate_trapezoids	src/old/triang/monotone.c	/^int monotonate_trapezoids(n)$/;"	f
move	src/old/accel.c	/^void move(int t)$/;"	f
move	src/old/accel_copy_with_olderfunction2d.c	/^void move(int t)$/;"	f
move	src/old/triang/accel.c	/^void move(int t)$/;"	f
move	src/old/triang/accel_copy_with_olderfunction2d.c	/^void move(int t)$/;"	f
mpiRank	src/pinc.h	/^	int mpiRank;				\/\/\/< MPI rank$/;"	m	struct:__anon2
mpiSize	src/pinc.h	/^	int mpiSize;				\/\/\/< MPI size$/;"	m	struct:__anon2
mpicheck	src/old/const.h	/^int rank, numtasks, mpicheck;$/;"	v
mpicheck	src/old/triang/const.h	/^int rank, numtasks, mpicheck;$/;"	v
msg	src/io.c	/^void msg(msgKind kind, const char* restrict format,...){$/;"	f
msgKind	src/pinc.h	/^} msgKind;$/;"	t	typeref:enum:__anon5
mul	proof of concept/get boundary/scrabble.c	/^int *mul = &grid->nGPointsProd[nDims-1];$/;"	v
myGStruct	proof of concept/global variables/main.c	/^struct ArrStruct myGStruct;$/;"	v	typeref:struct:ArrStruct
my_file_open	src/old/shortcuts.c	/^FILE * my_file_open(const char * filename, const char * aarg){$/;"	f
my_file_open	src/old/triang/shortcuts.c	/^FILE * my_file_open(const char * filename, const char * aarg){$/;"	f
n	lib/iniparser/src/dictionary.h	/^    int             n ;     \/** Number of entries in dictionary *\/$/;"	m	struct:_dictionary_
nCoarseSolve	src/multigrid.h	/^	int nCoarseSolve;$/;"	m	struct:__anon6
nDims	src/pinc.h	/^	int nDims;					\/\/\/< Number of dimensions$/;"	m	struct:__anon2
nDims	src/pinc.h	/^	int nDims;			\/\/\/< Number of dimensions (usually 3)$/;"	m	struct:__anon1
nGhostLayers	src/pinc.h	/^	int *nGhostLayers;			\/\/\/< Number of ghost layers in grid (2*rank elements)$/;"	m	struct:__anon3
nLevels	src/multigrid.h	/^    int nLevels;         			\/\/\/< #Grid levels$/;"	m	struct:__anon6
nMGCycles	src/multigrid.h	/^    int nMGCycles;         			\/\/\/< Multigrid cycles we want to run$/;"	m	struct:__anon6
nPostSmooth	src/multigrid.h	/^	int nPostSmooth;$/;"	m	struct:__anon6
nPreSmooth	src/multigrid.h	/^	int nPreSmooth;					\/\/\/<$/;"	m	struct:__anon6
nSpecies	src/pinc.h	/^	int nSpecies;		\/\/\/< Number of species$/;"	m	struct:__anon1
nSubdomains	src/pinc.h	/^	int *nSubdomains;			\/\/\/< Number of MPI nodes (nDims elements)$/;"	m	struct:__anon2
nSubdomainsProd	src/pinc.h	/^	int *nSubdomainsProd;		\/\/\/< Cumulative product of nSubdomains (nDims+1 elements)$/;"	m	struct:__anon2
ncorners	src/old/const.h	/^int *ncorners;$/;"	v
ncorners	src/old/triang/const.h	/^int *ncorners;$/;"	v
nested-classes	doc/html/multigrid_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	doc/html/pinc_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
new_chain_element	src/old/triang/monotone.c	/^static int new_chain_element()$/;"	f	file:
new_probe_potential	src/old/grid.c	/^void new_probe_potential(double probepotential)$/;"	f
new_probe_potential	src/old/triang/grid.c	/^void new_probe_potential(double probepotential)$/;"	f
newmon	src/old/triang/monotone.c	/^static int newmon()$/;"	f	file:
newnode	src/old/triang/construct.c	/^static int newnode()$/;"	f	file:
newparticles	src/old/generate.c	/^void newparticles(int timestep)$/;"	f
newparticles	src/old/generate_bug.c	/^void newparticles(int timestep)$/;"	f
newparticles	src/old/triang/generate.c	/^void newparticles(int timestep)$/;"	f
newparticles	src/old/triang/generate_bug.c	/^void newparticles(int timestep)$/;"	f
newtrap	src/old/triang/construct.c	/^static int newtrap()$/;"	f	file:
next	src/old/triang/triangulate.h	/^  int next;			\/* Circularly linked list  *\/$/;"	m	struct:__anon11
next	src/old/triang/triangulate.h	/^  int next;			\/* Next logical segment *\/$/;"	m	struct:__anon8
nextGhost	proof of concept/get boundary/scrabble.c	/^ int *nextGhost = ghostIndices;$/;"	v
nextfree	src/old/triang/triangulate.h	/^  int nextfree;$/;"	m	struct:__anon12
ngx	src/old/const.h	/^int ngx,ngy,ngz; \/*number of grids*\/$/;"	v
ngx	src/old/triang/const.h	/^int ngx,ngy,ngz; \/*number of grids*\/$/;"	v
ngx_MAX	src/old/const.h	27;"	d
ngx_MAX	src/old/triang/const.h	27;"	d
ngy	src/old/const.h	/^int ngx,ngy,ngz; \/*number of grids*\/$/;"	v
ngy	src/old/triang/const.h	/^int ngx,ngy,ngz; \/*number of grids*\/$/;"	v
ngy_MAX	src/old/const.h	28;"	d
ngy_MAX	src/old/triang/const.h	28;"	d
ngz	src/old/const.h	/^int ngx,ngy,ngz; \/*number of grids*\/$/;"	v
ngz	src/old/triang/const.h	/^int ngx,ngy,ngz; \/*number of grids*\/$/;"	v
ngz_MAX	src/old/const.h	29;"	d
ngz_MAX	src/old/triang/const.h	29;"	d
node_t	src/old/triang/triangulate.h	/^} node_t;$/;"	t	typeref:struct:__anon10
nodetype	src/old/triang/triangulate.h	/^  int nodetype;			\/* Y-node or S-node *\/$/;"	m	struct:__anon10
noofdusts	src/old/const.h	/^int noofdusts;$/;"	v
noofdusts	src/old/triang/const.h	/^int noofdusts;$/;"	v
nooftriangles	src/old/const.h	/^int *nooftriangles;$/;"	v
nooftriangles	src/old/triang/const.h	/^int *nooftriangles;$/;"	v
normEfield	src/old/const.h	/^double normEfield;$/;"	v
normEfield	src/old/triang/const.h	/^double normEfield;$/;"	v
normPE	src/old/const.h	/^double normPE;$/;"	v
normPE	src/old/triang/const.h	/^double normPE;$/;"	v
normPP	src/old/const.h	/^double normPP;$/;"	v
normPP	src/old/triang/const.h	/^double normPP;$/;"	v
normalcharge	src/old/const.h	/^double normalcharge[S];$/;"	v
normalcharge	src/old/triang/const.h	/^double normalcharge[S];$/;"	v
normalize	src/old/grid.c	/^void normalize(void)$/;"	f
normalize	src/old/triang/grid.c	/^void normalize(void)$/;"	f
normcharge	src/old/const.h	/^double normcharge;$/;"	v
normcharge	src/old/triang/const.h	/^double normcharge;$/;"	v
normdens	src/old/const.h	/^double normdens; $/;"	v
normdens	src/old/triang/const.h	/^double normdens; $/;"	v
normmass	src/old/const.h	/^double normmass;$/;"	v
normmass	src/old/triang/const.h	/^double normmass;$/;"	v
normpot	src/old/const.h	/^double normpot;$/;"	v
normpot	src/old/triang/const.h	/^double normpot;$/;"	v
normqdens	src/old/const.h	/^double normqdens;$/;"	v
normqdens	src/old/triang/const.h	/^double normqdens;$/;"	v
normqm	src/old/const.h	/^double normqm;$/;"	v
normqm	src/old/triang/const.h	/^double normqm;$/;"	v
normtime	src/old/const.h	/^double normtime;$/;"	v
normtime	src/old/triang/const.h	/^double normtime;$/;"	v
normvel	src/old/const.h	/^double normvel;$/;"	v
normvel	src/old/triang/const.h	/^double normvel;$/;"	v
normx	src/old/const.h	/^double normx;$/;"	v
normx	src/old/triang/const.h	/^double normx;$/;"	v
npart	src/old/const.h	/^long int npart[S]; \/*number of particles*\/$/;"	v
npart	src/old/triang/const.h	/^long int npart[S]; \/*number of particles*\/$/;"	v
npartinit	src/old/const.h	/^long int npartinit[S];$/;"	v
npartinit	src/old/triang/const.h	/^long int npartinit[S];$/;"	v
nrerror	src/old/fmg/nrutil.c	/^void nrerror(char error_text[])$/;"	f
nrerror	src/old/fmg/nrutil.c	/^void nrerror(error_text)$/;"	f
numberofprints	src/old/const.h	/^int numberofprints;$/;"	v
numberofprints	src/old/triang/const.h	/^int numberofprints;$/;"	v
numtasks	src/old/const.h	/^int rank, numtasks, mpicheck;$/;"	v
numtasks	src/old/triang/const.h	/^int rank, numtasks, mpicheck;$/;"	v
offset	src/pinc.h	/^	int *offset;				\/\/\/< Offset from global reference frame (nDims elements)$/;"	m	struct:__anon2
offsets	src/old/const.h	/^MPI_Aint offsets[2], extent;$/;"	v
offsets	src/old/triang/const.h	/^MPI_Aint offsets[2], extent;$/;"	v
oldtypes	src/old/const.h	/^MPI_Datatype gridtype, oldtypes[2];$/;"	v
oldtypes	src/old/triang/const.h	/^MPI_Datatype gridtype, oldtypes[2];$/;"	v
omegap	src/old/const.h	/^double omegap[S]; \/*plasmafrequency*\/$/;"	v
omegap	src/old/triang/const.h	/^double omegap[S]; \/*plasmafrequency*\/$/;"	v
op_idx	src/old/triang/monotone.c	/^static int chain_idx, op_idx, mon_idx;$/;"	v	file:
oracle2	proof of concept/get slice/main.s	/^oracle2:$/;"	l
orthvec	src/old/const.h	/^vectorst ** unitvec, **orthvec,  ** unitvecseg, ** orthvecseg;$/;"	v
orthvec	src/old/triang/const.h	/^vectorst ** unitvec, **orthvec,  ** unitvecseg, ** orthvecseg;$/;"	v
orthvecseg	src/old/const.h	/^vectorst ** unitvec, **orthvec,  ** unitvecseg, ** orthvecseg;$/;"	v
orthvecseg	src/old/triang/const.h	/^vectorst ** unitvec, **orthvec,  ** unitvecseg, ** orthvecseg;$/;"	v
ortnormvec	src/old/dustg.c	/^void ortnormvec(void)$/;"	f
ortnormvec	src/old/triang/dustg.c	/^void ortnormvec(void)$/;"	f
pAlloc	src/population.c	/^Population *pAlloc(const dictionary *ini){$/;"	f
pCloseH5	src/population.c	/^void pCloseH5(Population *pop){$/;"	f
pCreateH5	src/population.c	/^void pCreateH5(const dictionary *ini, Population *pop, const MpiInfo *mpiInfo, const char *fName){$/;"	f
pFree	src/population.c	/^void pFree(Population *pop){$/;"	f
pPosDebug	src/population.c	/^void pPosDebug(const dictionary *ini, Population *pop){$/;"	f
pPosUniform	src/population.c	/^void pPosUniform(const dictionary *ini, Population *pop, const MpiInfo *mpiInfo, const gsl_rng *rng){$/;"	f
pSetSpecieNorm	src/population.c	/^void pSetSpecieNorm(const dictionary *ini, Population *pop, double timeStepMul, double factor){$/;"	f
pVelMaxwell	src/population.c	/^void pVelMaxwell(const dictionary *ini, Population *pop, const gsl_rng *rng){$/;"	f
pVelSet	src/population.c	/^void pVelSet(Population *pop, const double *vel){$/;"	f
pWriteH5	src/population.c	/^void pWriteH5(Population *pop, const MpiInfo *mpiInfo, double posN, double velN){$/;"	f
parent	src/old/triang/triangulate.h	/^  int parent;			\/* doubly linked DAG *\/$/;"	m	struct:__anon10
parse_ini_file	lib/iniparser/test/iniexample.c	/^int parse_ini_file(char * ini_name)$/;"	f
part	src/old/const.h	/^  particle part[NPART_MAX];$/;"	m	struct:species
part	src/old/triang/const.h	/^  particle part[NPART_MAX];$/;"	m	struct:species
particle	src/old/const.h	/^struct particle$/;"	s
particle	src/old/const.h	/^typedef struct particle particle;$/;"	t	typeref:struct:particle
particle	src/old/triang/const.h	/^struct particle$/;"	s
particle	src/old/triang/const.h	/^typedef struct particle particle;$/;"	t	typeref:struct:particle
particlesno	src/old/const.h	/^int particlesno;$/;"	v
particlesno	src/old/triang/const.h	/^int particlesno;$/;"	v
pdens	src/old/const.h	/^double *pdens; \/*array for particle number density*\/$/;"	v
pdens	src/old/triang/const.h	/^double *pdens; \/*array for particle number density*\/$/;"	v
pdensMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
pdensMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
pdens_off	src/old/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
pdens_off	src/old/triang/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
pe	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
pe	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
pe_time	src/old/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
pe_time	src/old/triang/const.h	/^FILE *epe,*eke,*ipe,*ike, *pe, *pe_time, *eke_time, *ike_time, *epe_time, *ipe_time; \/\/NEW2D$/;"	v
permute	src/old/triang/misc.c	/^static int permute[SEGSIZE];$/;"	v	file:
ph_a	src/old/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_a	src/old/triang/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_angle	src/old/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_angle	src/old/triang/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_angle_rad	src/old/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_angle_rad	src/old/triang/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_bmax	src/old/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_bmax	src/old/triang/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_bmin	src/old/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_bmin	src/old/triang/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_cosangle	src/old/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_cosangle	src/old/triang/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_energy	src/old/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_energy	src/old/triang/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_flux	src/old/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_flux	src/old/triang/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_fluxprdt	src/old/const.h	/^long int ph_fluxprdt;$/;"	v
ph_fluxprdt	src/old/triang/const.h	/^long int ph_fluxprdt;$/;"	v
ph_length	src/old/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_length	src/old/triang/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_sinangle	src/old/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_sinangle	src/old/triang/const.h	/^double ph_angle, ph_angle_rad, ph_flux, ph_energy, ph_cosangle, ph_sinangle;$/;"	v
ph_vert	src/old/const.h	/^int ph_vert; \/\/1 up, -1 down, 0 other$/;"	v
ph_vert	src/old/triang/const.h	/^int ph_vert; \/\/1 up, -1 down, 0 other$/;"	v
ph_xmax	src/old/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_xmax	src/old/triang/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_xmin	src/old/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
ph_xmin	src/old/triang/const.h	/^double ph_bmin,ph_bmax,ph_xmin,ph_xmax, ph_length, ph_a;$/;"	v
phi	src/old/const.h	/^double *phi;$/;"	v
phi	src/old/triang/const.h	/^double *phi;$/;"	v
phiMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
phiMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
phi_nodust	src/old/const.h	/^double *phi_nodust;$/;"	v
phi_nodust	src/old/triang/const.h	/^double *phi_nodust;$/;"	v
phiav	src/old/const.h	/^double *phiav;$/;"	v
phiav	src/old/triang/const.h	/^double *phiav;$/;"	v
phiavMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
phiavMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
photoelectriceffect	src/old/photons.c	/^void photoelectriceffect(void)$/;"	f
photoelectriceffect	src/old/triang/photons.c	/^void photoelectriceffect(void)$/;"	f
photonflux	src/old/photons.c	/^void photonflux(void)$/;"	f
photonflux	src/old/triang/photons.c	/^void photonflux(void)$/;"	f
photons	src/old/const.h	/^int photons;$/;"	v
photons	src/old/triang/const.h	/^int photons;$/;"	v
pi	src/old/const.h	/^double pi;$/;"	v
pi	src/old/triang/const.h	/^double pi;$/;"	v
point_t	src/old/triang/triangulate.h	/^} point_t, vector_t;$/;"	t	typeref:struct:__anon7
points	proof of concept/get boundary/scrabble.c	/^int *points = &grid->nGPoints[nDims-1];$/;"	v
points_on_sphere	src/old/spherical.c	/^void points_on_sphere(int dustnumber, int numberofpoints)$/;"	f
points_on_sphere	src/old/triang/spherical.c	/^void points_on_sphere(int dustnumber, int numberofpoints)$/;"	f
pos	src/pinc.h	/^	double *pos;		\/\/\/< Position$/;"	m	struct:__anon1
posToSubdomain	src/pinc.h	/^	double *posToSubdomain;		\/\/\/< Factor for converting position to subdomain (nDims elements)$/;"	m	struct:__anon2
postSmooth	src/multigrid.h	/^    void (*postSmooth)(Grid *phi, const Grid *rho, const int nCycles);	\/\/\/< Function pointer to a Post Smooth function$/;"	m	struct:__anon6
pot2D	src/old/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
pot2D	src/old/triang/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
pot2Dav	src/old/const.h	/^FILE *curr, *poten, *potclr, *pot2Dav; \/\/OLD$/;"	v
pot2Dav	src/old/triang/const.h	/^FILE *curr, *poten, *potclr, *pot2Dav; \/\/OLD$/;"	v
pot2Dclr	src/old/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
pot2Dclr	src/old/triang/const.h	/^FILE *pot2Dclr,*pot2D,*efx,*efy, *efz,*frho,*idens,*edens;$/;"	v
pot_probes	src/old/diagn.c	/^void pot_probes(int t)$/;"	f
pot_probes	src/old/triang/diagn.c	/^void pot_probes(int t)$/;"	f
pot_probes_init	src/old/diagn.c	/^void pot_probes_init(void)$/;"	f
pot_probes_init	src/old/triang/diagn.c	/^void pot_probes_init(void)$/;"	f
potclr	src/old/const.h	/^FILE *curr, *poten, *potclr, *pot2Dav; \/\/OLD$/;"	v
potclr	src/old/triang/const.h	/^FILE *curr, *poten, *potclr, *pot2Dav; \/\/OLD$/;"	v
potconv	src/old/const.h	/^double *potconv[CONVTEST];$/;"	v
potconv	src/old/triang/const.h	/^double *potconv[CONVTEST];$/;"	v
potconvMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
potconvMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
poten	src/old/const.h	/^FILE *curr, *poten, *potclr, *pot2Dav; \/\/OLD$/;"	v
poten	src/old/triang/const.h	/^FILE *curr, *poten, *potclr, *pot2Dav; \/\/OLD$/;"	v
preSmooth	src/multigrid.h	/^    void (*preSmooth)(Grid *phi, const Grid *rho, const int nCycles);	\/\/\/< Function pointer to a Pre Smooth function$/;"	m	struct:__anon6
prev	script/distribution.py	/^prev = start$/;"	v
prev	src/old/triang/triangulate.h	/^  int prev;			\/* Previous segment *\/$/;"	m	struct:__anon8
prev	src/old/triang/triangulate.h	/^  int prev;			\/* describing the monotone *\/$/;"	m	struct:__anon11
previous	src/pinc.h	/^	TimeSpec previous;			\/\/\/< Time of previous call$/;"	m	struct:__anon4
primeroot	src/old/generate.c	/^double primeroot(void)$/;"	f
primeroot	src/old/generate_bug.c	/^double primeroot(void)$/;"	f
primeroot	src/old/triang/generate.c	/^double primeroot(void)$/;"	f
primeroot	src/old/triang/generate_bug.c	/^double primeroot(void)$/;"	f
primerootbucket	src/old/const.h	/^double primerootbucket[BUCKETSIZE];$/;"	v
primerootbucket	src/old/triang/const.h	/^double primerootbucket[BUCKETSIZE];$/;"	v
primerootno	src/old/const.h	/^double primerootno;$/;"	v
primerootno	src/old/triang/const.h	/^double primerootno;$/;"	v
printBinary	proof of concept/interpolate/main.c	/^void printBinary(int num, int nBits){$/;"	f
printKE	src/old/diagn.c	/^void printKE(FILE *fpointer, FILE *fpointer2, int specie, int t, double weight)$/;"	f
printKE	src/old/triang/diagn.c	/^void printKE(FILE *fpointer, FILE *fpointer2, int specie, int t, double weight)$/;"	f
printKEall	src/old/diagn.c	/^void printKEall(int t)$/;"	f
printKEall	src/old/triang/diagn.c	/^void printKEall(int t)$/;"	f
printPE	src/old/diagn.c	/^void printPE(FILE *fpointer,FILE *fpointer2, int specie, int t, double weight)$/;"	f
printPE	src/old/triang/diagn.c	/^void printPE(FILE *fpointer,FILE *fpointer2, int specie, int t, double weight)$/;"	f
printPEtotal	src/old/diagn.c	/^void printPEtotal(FILE *fpointer, FILE *fpointer2, int t, double weight)$/;"	f
printPEtotal	src/old/triang/diagn.c	/^void printPEtotal(FILE *fpointer, FILE *fpointer2, int t, double weight)$/;"	f
printSP	proof of concept/get slice/main.c	/^ void printSP(){$/;"	f
printSP	proof of concept/interpolate/main.c	/^void printSP(){$/;"	f
printSP	proof of concept/tail call recursion/main.c	/^void printSP(){$/;"	f
printSP	proof of concept/tail call recursion/main.s	/^printSP:$/;"	l
printSP2	proof of concept/tail call recursion/main.c	/^void printSP2() {$/;"	f
printSP2	proof of concept/tail call recursion/main.s	/^printSP2:$/;"	l
print_avpvel	src/old/diagn.c	/^void print_avpvel(FILE *fpointer, int k, int t, double weight)$/;"	f
print_avpvel	src/old/triang/diagn.c	/^void print_avpvel(FILE *fpointer, int k, int t, double weight)$/;"	f
print_current	src/old/diagn.c	/^void print_current(int tid)$/;"	f
print_current	src/old/triang/diagn.c	/^void print_current(int tid)$/;"	f
printavpotential	src/old/diagn.c	/^void printavpotential(FILE *fpointer, int t, double weight)$/;"	f
printavpotential	src/old/triang/diagn.c	/^void printavpotential(FILE *fpointer, int t, double weight)$/;"	f
printconvpot	src/old/diagn.c	/^void printconvpot(FILE *fpointer, int t, int step)$/;"	f
printconvpot	src/old/triang/diagn.c	/^void printconvpot(FILE *fpointer, int t, int step)$/;"	f
printdensity	src/old/diagn.c	/^void printdensity(FILE *fpointer, int kk, int t, double weight)$/;"	f
printdensity	src/old/triang/diagn.c	/^void printdensity(FILE *fpointer, int kk, int t, double weight)$/;"	f
printdragforce	src/old/dustg.c	/^void printdragforce(int timestep)$/;"	f
printdragforce	src/old/triang/dustg.c	/^void printdragforce(int timestep)$/;"	f
printdth	src/old/diagn.c	/^void printdth(FILE *fpointer, int t)$/;"	f
printdth	src/old/triang/diagn.c	/^void printdth(FILE *fpointer, int t)$/;"	f
printdustcharge	src/old/diagn.c	/^void printdustcharge(FILE *fpointer, int t, double weight)$/;"	f
printdustcharge	src/old/triang/diagn.c	/^void printdustcharge(FILE *fpointer, int t, double weight)$/;"	f
printdustchargetime	src/old/diagn.c	/^void printdustchargetime(FILE *fpointer, int t, double weight)$/;"	f
printdustchargetime	src/old/triang/diagn.c	/^void printdustchargetime(FILE *fpointer, int t, double weight)$/;"	f
printdustshape	src/old/diagn.c	/^void printdustshape()$/;"	f
printdustshape	src/old/triang/diagn.c	/^void printdustshape()$/;"	f
printdustshapetime	src/old/diagn.c	/^void printdustshapetime(int t)$/;"	f
printdustshapetime	src/old/triang/diagn.c	/^void printdustshapetime(int t)$/;"	f
printefield	src/old/diagn.c	/^void printefield(FILE *fpointer, int help, int t, double weight)$/;"	f
printefield	src/old/triang/diagn.c	/^void printefield(FILE *fpointer, int help, int t, double weight)$/;"	f
printgrid	src/old/diagn.c	/^void printgrid(int t)$/;"	f
printgrid	src/old/triang/diagn.c	/^void printgrid(int t)$/;"	f
printpotential	src/old/diagn.c	/^void printpotential(FILE *fpointer, int t, double weight)$/;"	f
printpotential	src/old/triang/diagn.c	/^void printpotential(FILE *fpointer, int t, double weight)$/;"	f
printqdensity	src/old/diagn.c	/^void printqdensity(FILE *fpointer, int t, double weight)$/;"	f
printqdensity	src/old/triang/diagn.c	/^void printqdensity(FILE *fpointer, int t, double weight)$/;"	f
printscale	src/old/diagn.c	/^void printscale(FILE *fpointer)$/;"	f
printscale	src/old/triang/diagn.c	/^void printscale(FILE *fpointer)$/;"	f
probe_version	src/old/const.h	/^int probe_version;$/;"	v
probe_version	src/old/triang/const.h	/^int probe_version;$/;"	v
probes1	src/old/const.h	/^FILE *probes1, *probes2, *probes3, *dustshapet;$/;"	v
probes1	src/old/triang/const.h	/^FILE *probes1, *probes2, *probes3, *dustshapet;$/;"	v
probes2	src/old/const.h	/^FILE *probes1, *probes2, *probes3, *dustshapet;$/;"	v
probes2	src/old/triang/const.h	/^FILE *probes1, *probes2, *probes3, *dustshapet;$/;"	v
probes3	src/old/const.h	/^FILE *probes1, *probes2, *probes3, *dustshapet;$/;"	v
probes3	src/old/triang/const.h	/^FILE *probes1, *probes2, *probes3, *dustshapet;$/;"	v
probesegments	src/old/const.h	/^int probesegments;$/;"	v
probesegments	src/old/triang/const.h	/^int probesegments;$/;"	v
probex	src/old/const.h	/^int probex, probey; \/*probe dimensions in grid points*\/$/;"	v
probex	src/old/triang/const.h	/^int probex, probey; \/*probe dimensions in grid points*\/$/;"	v
probexmax	src/old/const.h	/^double probexmin, probexmax, probeymin, probeymax;$/;"	v
probexmax	src/old/triang/const.h	/^double probexmin, probexmax, probeymin, probeymax;$/;"	v
probexmin	src/old/const.h	/^double probexmin, probexmax, probeymin, probeymax;$/;"	v
probexmin	src/old/triang/const.h	/^double probexmin, probexmax, probeymin, probeymax;$/;"	v
probey	src/old/const.h	/^int probex, probey; \/*probe dimensions in grid points*\/$/;"	v
probey	src/old/triang/const.h	/^int probex, probey; \/*probe dimensions in grid points*\/$/;"	v
probeymax	src/old/const.h	/^double probexmin, probexmax, probeymin, probeymax;$/;"	v
probeymax	src/old/triang/const.h	/^double probexmin, probexmax, probeymin, probeymax;$/;"	v
probeymin	src/old/const.h	/^double probexmin, probexmax, probeymin, probeymax;$/;"	v
probeymin	src/old/triang/const.h	/^double probexmin, probexmax, probeymin, probeymax;$/;"	v
prog_restart	src/old/restart.c	/^long int prog_restart()$/;"	f
prog_restart	src/old/triang/restart.c	/^long int prog_restart()$/;"	f
prolongator	src/multigrid.h	/^	void (*prolongator)(Grid *fine, const Grid *coarse);	\/\/\/< Function pointer to prolongator$/;"	m	struct:__anon6
pt	src/old/triang/triangulate.h	/^  point_t pt;$/;"	m	struct:__anon12
pt1	src/old/const.h	/^  int pt1;$/;"	m	struct:dtriangle
pt1	src/old/triang/const.h	/^  int pt1;$/;"	m	struct:dtriangle
pt2	src/old/const.h	/^  int pt2;$/;"	m	struct:dtriangle
pt2	src/old/triang/const.h	/^  int pt2;$/;"	m	struct:dtriangle
pt3	src/old/const.h	/^  int pt3;  $/;"	m	struct:dtriangle
pt3	src/old/triang/const.h	/^  int pt3;  $/;"	m	struct:dtriangle
pu Acc3 D1 Population $ ast$pop Grid $ ast$ E	doc/latex/pusher_8h.tex	/^\\index{pu\\+Acc3\\+D1@{pu\\+Acc3\\+D1}!pusher.\\+h@{pusher.\\+h}}$/;"	b
pu Bnd Periodic Population $ ast$pop const Grid $ ast$grid	doc/latex/pusher_8h.tex	/^\\index{pu\\+Bnd\\+Periodic@{pu\\+Bnd\\+Periodic}!pusher.\\+h@{pusher.\\+h}}$/;"	b
pu Distr3 D1 const Population $ ast$pop Grid $ ast$rho	doc/latex/pusher_8h.tex	/^\\index{pu\\+Distr3\\+D1@{pu\\+Distr3\\+D1}!pusher.\\+h@{pusher.\\+h}}$/;"	b
pu Move Population $ ast$pop	doc/latex/pusher_8h.tex	/^\\index{pu\\+Move@{pu\\+Move}!pusher.\\+h@{pusher.\\+h}}$/;"	b
puAcc3D1	src/pusher.c	/^void puAcc3D1(Population *pop, Grid *E){$/;"	f
puBndPeriodic	src/pusher.c	/^void puBndPeriodic(Population *pop, const Grid *grid){$/;"	f
puDistr3D1	src/pusher.c	/^void puDistr3D1(const Population *pop, Grid *rho){$/;"	f
puInterp3D1	src/pusher.c	/^static inline void puInterp3D1(double *result, const double *pos, const double *val, const long int *sizeProd){$/;"	f	file:
puMove	src/pusher.c	/^void puMove(Population *pop){$/;"	f
pub-attribs	doc/html/structGrid.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	doc/html/structMpiInfo.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	doc/html/structMultigrid.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	doc/html/structPopulation.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	doc/html/structTimer.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
q	src/old/const.h	/^  double q;$/;"	m	struct:d_particle
q	src/old/triang/const.h	/^  double q;$/;"	m	struct:d_particle
q_idx	src/old/triang/construct.c	/^static int q_idx;$/;"	v	file:
qdens	src/old/const.h	/^double *qdens;$/;"	v
qdens	src/old/triang/const.h	/^double *qdens;$/;"	v
qdensMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
qdensMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
qm	src/old/const.h	/^double qm[S]; \/*charge to mass ratio for each species*\/$/;"	v
qm	src/old/triang/const.h	/^double qm[S]; \/*charge to mass ratio for each species*\/$/;"	v
qs	src/old/triang/construct.c	/^node_t qs[QSIZE];		\/* Query structure *\/$/;"	v
rKE	src/old/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rKE	src/old/triang/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rank	src/old/const.h	/^int rank, numtasks, mpicheck;$/;"	v
rank	src/old/triang/const.h	/^int rank, numtasks, mpicheck;$/;"	v
rank	src/pinc.h	/^	int rank;					\/\/\/< Number of dimensions of array (not grid)$/;"	m	struct:__anon3
rank	src/pinc.h	/^	int rank;					\/\/\/< Rank of node or negative to turn off timer$/;"	m	struct:__anon4
ratio	src/old/const.h	/^double ratio;$/;"	v
ratio	src/old/triang/const.h	/^double ratio;$/;"	v
rcurr_av	src/old/const.h	/^long int **rcurr_av;$/;"	v
rcurr_av	src/old/triang/const.h	/^long int **rcurr_av;$/;"	v
rdpart	src/old/const.h	/^d_particle **dpart, **rdpart;$/;"	v
rdpart	src/old/triang/const.h	/^d_particle **dpart, **rdpart;$/;"	v
rdpartq	src/old/const.h	/^double **dpartq, **rdpartq;$/;"	v
rdpartq	src/old/triang/const.h	/^double **dpartq, **rdpartq;$/;"	v
rdrho	src/old/const.h	/^double *rdrho, *tordrho;$/;"	v
rdrho	src/old/triang/const.h	/^double *rdrho, *tordrho;$/;"	v
rdrholast	src/old/const.h	/^int rdrholast;$/;"	v
rdrholast	src/old/triang/const.h	/^int rdrholast;$/;"	v
read_segments	src/old/triang/misc.c	/^int read_segments(filename, genus)$/;"	f
readdata	src/old/triang/input.c	/^void readdata(int arc, char *arv[]) $/;"	f
redistribute	src/old/dustg.c	/^void redistribute(void)$/;"	f
redistribute	src/old/triang/dustg.c	/^void redistribute(void)$/;"	f
relax	src/old/fmg/fmg.c	/^void relax(double ***u, double ***rhs, int nx, int ny, int nz)$/;"	f
renormE	src/pinc.h	/^	double *renormE;	\/\/\/< Re-normalization factors for E (nSpecies elements)$/;"	m	struct:__anon1
renormRho	src/pinc.h	/^	double *renormRho;	\/\/\/< Re-normalization factors for rho (nSpecies elements)$/;"	m	struct:__anon1
resid	src/old/fmg/fmg.c	/^void resid(double ***res, double ***u, double ***rhs, int nx, int ny, int nz)$/;"	f
restrictor	src/multigrid.h	/^	void (*restrictor)(const Grid *fine, Grid *coarse);	\/\/\/< Function pointer to restrictor$/;"	m	struct:__anon6
rho	src/old/const.h	/^  double rho;$/;"	m	struct:d_rho
rho	src/old/const.h	/^double *rho; \/*array for charge density and collected charge on the dust*\/ $/;"	v
rho	src/old/triang/const.h	/^  double rho;$/;"	m	struct:d_rho
rho	src/old/triang/const.h	/^double *rho; \/*array for charge density and collected charge on the dust*\/ $/;"	v
rhoMAX	src/old/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
rhoMAX	src/old/triang/const.h	/^int FsMAX, rhoMAX, pdensMAX, KEMAX, phiMAX, phiavMAX, PEMAX, qdensMAX, potconvMAX, PEtotalMAX; \/*array dimensions*\/ $/;"	v
rhoMAXhalf	src/old/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
rhoMAXhalf	src/old/triang/const.h	/^int FsEy, rhoMAXhalf, pdens_off, KE_off, FsEz, PEMAXhalf;$/;"	v
rho_av	src/old/const.h	/^  double rho_av;$/;"	m	struct:d_rho
rho_av	src/old/triang/const.h	/^  double rho_av;$/;"	m	struct:d_rho
right	src/old/triang/triangulate.h	/^  int left, right;		\/* children *\/$/;"	m	struct:__anon10
rlb	src/old/const.h	/^double rlb[S], rzet[S], rv0[S];$/;"	v
rlb	src/old/triang/const.h	/^double rlb[S], rzet[S], rv0[S];$/;"	v
root0	src/old/triang/triangulate.h	/^  int root0, root1;		\/* root nodes in Q *\/$/;"	m	struct:__anon8
root1	src/old/triang/triangulate.h	/^  int root0, root1;		\/* root nodes in Q *\/$/;"	m	struct:__anon8
rpdens	src/old/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rpdens	src/old/triang/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rrho	src/old/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rrho	src/old/triang/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rseg	src/old/triang/triangulate.h	/^  int lseg, rseg;		\/* two adjoining segments *\/$/;"	m	struct:__anon9
rstrct	src/old/fmg/fmg.c	/^void rstrct(double ***uc, double ***uf, int ncx, int ncy, int ncz)$/;"	f
rstrct0	src/old/fmg/fmg.c	/^void rstrct0(double ***uc, double *uf, int ncx, int ncy, int ncz)$/;"	f
rv0	src/old/const.h	/^double rlb[S], rzet[S], rv0[S];$/;"	v
rv0	src/old/triang/const.h	/^double rlb[S], rzet[S], rv0[S];$/;"	v
rvdriftx	src/old/const.h	/^double rvdriftx[S];$/;"	v
rvdriftx	src/old/triang/const.h	/^double rvdriftx[S];$/;"	v
rvxvec	src/old/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rvxvec	src/old/triang/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rvyvec	src/old/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rvyvec	src/old/triang/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rvzvec	src/old/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rvzvec	src/old/triang/const.h	/^double *rrho, *rpdens, *rKE, *rvxvec, *rvyvec, *rvzvec; \/*needed for data receiving with MPI*\/$/;"	v
rzet	src/old/const.h	/^double rlb[S], rzet[S], rv0[S];$/;"	v
rzet	src/old/triang/const.h	/^double rlb[S], rzet[S], rv0[S];$/;"	v
seg	src/old/triang/construct.c	/^segment_t seg[SEGSIZE];		\/* Segment table *\/$/;"	v
segment_t	src/old/triang/triangulate.h	/^} segment_t;$/;"	t	typeref:struct:__anon8
segnum	src/old/triang/triangulate.h	/^  int segnum;$/;"	m	struct:__anon10
setArrGDyn	proof of concept/global variables/main.c	/^void setArrGDyn(int value){$/;"	f
setArrGlobal	proof of concept/global variables/main.c	/^void setArrGlobal(int value){$/;"	f
setArrLocal	proof of concept/global variables/main.c	/^void setArrLocal(double *arr, long int arrsize, int value){$/;"	f
setArrStruct	proof of concept/global variables/main.c	/^void setArrStruct(struct ArrStruct *myStruct, long int arrsize, int value){$/;"	f
setClassAttr	doc/html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setGArrStruct	proof of concept/global variables/main.c	/^void setGArrStruct(int value){$/;"	f
setKeyActions	doc/html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
setRestrictProlong	src/multigrid.c	/^void setRestrictProlong(const dictionary *ini,Multigrid *multigrid){$/;"	f
setSlice	src/grid.c	/^void setSlice(const double *slice, Grid *grid, int d, int offset){$/;"	f
setSliceInner	src/grid.c	/^static const double *setSliceInner(const double *nextGhost, double **valp, const long int *mul,$/;"	f	file:
setSolvers	src/multigrid.c	/^void setSolvers(const dictionary *ini, Multigrid *multigrid){$/;"	f
shift_while_restarting	src/old/restart.c	/^void shift_while_restarting(int dno, double x, double y, double z)$/;"	f
shift_while_restarting	src/old/triang/restart.c	/^void shift_while_restarting(int dno, double x, double y, double z)$/;"	f
signof	src/old/dustg.c	/^inline int signof(int a) $/;"	f
signof	src/old/triang/dustg.c	/^inline int signof(int a) $/;"	f
sink	src/old/triang/triangulate.h	/^  int sink;			\/* pointer to corresponding in Q *\/$/;"	m	struct:__anon9
size	lib/iniparser/src/dictionary.h	/^    int             size ;  \/** Storage size *\/$/;"	m	struct:_dictionary_
size	src/pinc.h	/^	int *size;					\/\/\/< Size of array (including ghosts) (rank elements)$/;"	m	struct:__anon3
sizeProd	src/pinc.h	/^	long int *sizeProd;			\/\/\/< Cumulative product of size (rank+1 elements)$/;"	m	struct:__anon3
slice	src/pinc.h	/^	double *slice;				\/\/\/< Slice buffer of the grid sent to other subdomains$/;"	m	struct:__anon3
slvsml	src/old/fmg/fmg.c	/^void slvsml(double ***u, double ***rhs)$/;"	f
slvsml2	src/old/fmg/fmg.c	/^void slvsml2(double ***u, double ***rhs, int nx, int ny, int nz)$/;"	f
smaller_same_sign	src/old/dustg.c	/^inline double smaller_same_sign(double a, double b) $/;"	f
smaller_same_sign	src/old/triang/dustg.c	/^inline double smaller_same_sign(double a, double b) $/;"	f
spec	src/old/const.h	/^  int spec;$/;"	m	struct:d_particle
spec	src/old/const.h	/^species spec[S]; \/*particles are in seperate arrays*\/$/;"	v
spec	src/old/triang/const.h	/^  int spec;$/;"	m	struct:d_particle
spec	src/old/triang/const.h	/^species spec[S]; \/*particles are in seperate arrays*\/$/;"	v
species	src/old/const.h	/^struct species$/;"	s
species	src/old/const.h	/^typedef struct species species;$/;"	t	typeref:struct:species
species	src/old/triang/const.h	/^struct species$/;"	s
species	src/old/triang/const.h	/^typedef struct species species;$/;"	t	typeref:struct:species
speed	script/distribution.py	/^speed = zeros(Np)$/;"	v
sqrarg	src/old/fmg/nrutil.h	/^static float sqrarg;$/;"	v
sqrt_pi	src/old/const.h	/^double sqrt_pi;$/;"	v
sqrt_pi	src/old/triang/const.h	/^double sqrt_pi;$/;"	v
sqrt_two	src/old/const.h	/^double sqrt_two;$/;"	v
sqrt_two	src/old/triang/const.h	/^double sqrt_two;$/;"	v
sqrt_twopi	src/old/const.h	/^double sqrt_twopi;$/;"	v
sqrt_twopi	src/old/triang/const.h	/^double sqrt_twopi;$/;"	v
start	script/distribution.py	/^start = time()$/;"	v
stat	src/old/const.h	/^MPI_Status stat;$/;"	v
stat	src/old/triang/const.h	/^MPI_Status stat;$/;"	v
state	src/old/triang/triangulate.h	/^  int state;$/;"	m	struct:__anon9
std	proof of concept/function pointers/makefile	/^	gcc -o main main.c ..\/stool\/stool.c -std=c11 -lm -O0$/;"	m
std	proof of concept/function pointers/makefile	/^	gcc -o main main.c ..\/stool\/stool.c -std=c11 -lm -O3$/;"	m
std	proof of concept/get boundary/challenge/makefile	/^	gcc -o main main.c halo.h halo.o -std=c11 -lm $(COPT)$/;"	m
std	proof of concept/get boundary/makefile	/^	gcc -o main main.c -std=c11 -lm $(COPT)$/;"	m
std	proof of concept/get slice/makefile	/^	gcc -o main main.c -std=c11 -lm $(COPT)$/;"	m
std	proof of concept/global variables/makefile	/^	gcc -o main main.c ..\/stool\/stool.c -std=c11 -lm -O3$/;"	m
std	proof of concept/global variables/makefile	/^	gcc -o main main.c ..\/stool\/stool.c -std=c11 -lm$/;"	m
std	proof of concept/interpolate/makefile	/^	gcc -o main main.c -std=c11 -lm -lgsl -lblas $(COPT)$/;"	m
std	proof of concept/tail call recursion/makefile	/^	gcc -S main.c -std=c11 $(COPT)$/;"	m
std	proof of concept/vectorfield/makefile	/^	gcc -o main main.c -std=c11 -lm -lgsl -lblas $(COPT)$/;"	m
stepSize	src/pinc.h	/^	double *stepSize;			\/\/\/< Step-sizes in Debye lengths (rank elements)$/;"	m	struct:__anon3
storeLayer	proof of concept/get boundary/scrabble.c	/^function storeLayer(const int *prod,const int *nPoints,double *ghost, double *val){$/;"	f
strAllocCat	src/aux.c	/^char *strAllocCat(int n, ...){$/;"	f
strlwc	lib/iniparser/src/iniparser.c	/^static char * strlwc(const char * s)$/;"	f	file:
strstrip	lib/iniparser/src/iniparser.c	/^static char * strstrip(const char * s)$/;"	f	file:
subdomain	src/pinc.h	/^	int *subdomain;				\/\/\/< MPI node (nDims elements)$/;"	m	struct:__anon2
submatrix	src/old/fmg/nrutil.c	/^float **submatrix(a,oldrl,oldrh,oldcl,oldch,newrl,newcl)$/;"	f
submatrix	src/old/fmg/nrutil.c	/^float **submatrix(float **a, long oldrl, long oldrh, long oldcl, long oldch,$/;"	f
tFormat	src/aux.c	/^ static void tFormat(char *str, int len, const TimeSpec *time){$/;"	f	file:
tMsg	src/aux.c	/^void tMsg(Timer *timer, const char *restrict format, ...){$/;"	f
takecut	src/old/const.h	/^int takecut;$/;"	v
takecut	src/old/triang/const.h	/^int takecut;$/;"	v
tcx	src/old/const.h	/^  double tcx;$/;"	m	struct:dtriangle
tcx	src/old/triang/const.h	/^  double tcx;$/;"	m	struct:dtriangle
tcy	src/old/const.h	/^  double tcy;$/;"	m	struct:dtriangle
tcy	src/old/triang/const.h	/^  double tcy;$/;"	m	struct:dtriangle
tempx	src/old/const.h	/^double tempx[S]; \/*temperature in eV, x direction*\/$/;"	v
tempx	src/old/triang/const.h	/^double tempx[S]; \/*temperature in eV, x direction*\/$/;"	v
tempy	src/old/const.h	/^double tempy[S]; \/*temperature in eV, y direction*\/$/;"	v
tempy	src/old/triang/const.h	/^double tempy[S]; \/*temperature in eV, y direction*\/$/;"	v
tempz	src/old/const.h	/^double tempz[S];$/;"	v
tempz	src/old/triang/const.h	/^double tempz[S];$/;"	v
testAux	test/aux.test.c	/^void testAux(){$/;"	f
testFinDiff1st	test/grid.test.c	/^static int testFinDiff1st(){$/;"	f	file:
testFinDiff2nd2D	test/grid.test.c	/^static int testFinDiff2nd2D(){$/;"	f	file:
testGValDebug	test/grid.test.c	/^int testGValDebug(){$/;"	f
testGaussSeidel	test/multigrid.test.c	/^static int testGaussSeidel(){$/;"	f	file:
testGrid	test/grid.test.c	/^void testGrid(){$/;"	f
testIntArrProd	test/aux.test.c	/^static int testIntArrProd(){$/;"	f	file:
testIo	test/io.test.c	/^void testIo(){$/;"	f
testMultigrid	test/multigrid.test.c	/^void testMultigrid(){$/;"	f
testPopulation	test/population.test.c	/^void testPopulation(){$/;"	f
testPusher	test/pusher.test.c	/^void testPusher(){$/;"	f
testStructs	test/multigrid.test.c	/^static int testStructs(){$/;"	f	file:
testgFinDiff2nd3D	test/grid.test.c	/^static int testgFinDiff2nd3D(){$/;"	f	file:
testowy	src/old/const.h	/^FILE *testowy;$/;"	v
testowy	src/old/triang/const.h	/^FILE *testowy;$/;"	v
ti2te	src/old/const.h	/^double ti2te; \/*temperature ratio*\/$/;"	v
ti2te	src/old/triang/const.h	/^double ti2te; \/*temperature ratio*\/$/;"	v
timeelapsed	src/old/const.h	/^double timeelapsed;$/;"	v
timeelapsed	src/old/triang/const.h	/^double timeelapsed;$/;"	v
timeending	src/old/const.h	/^time_t timestart, timeending;$/;"	v
timeending	src/old/triang/const.h	/^time_t timestart, timeending;$/;"	v
timer	script/distribution.py	/^def timer(text):$/;"	f
timerprobes	src/old/const.h	/^int timerprobes;$/;"	v
timerprobes	src/old/triang/const.h	/^int timerprobes;$/;"	v
timestart	src/old/const.h	/^time_t timestart, timeending;$/;"	v
timestart	src/old/triang/const.h	/^time_t timestart, timeending;$/;"	v
tmax	src/old/const.h	/^double dt, tmax;$/;"	v
tmax	src/old/triang/const.h	/^double dt, tmax;$/;"	v
tmp_dpart	src/old/const.h	/^d_particle *tmp_dpart;$/;"	v
tmp_dpart	src/old/triang/const.h	/^d_particle *tmp_dpart;$/;"	v
toGlobalFrame	src/population.c	/^void toGlobalFrame(Population *pop, const MpiInfo *mpiInfo){$/;"	f
toGray	proof of concept/interpolate/main.c	/^inline int toGray(int x){$/;"	f
toLocalFrame	src/population.c	/^void toLocalFrame(Population *pop, const MpiInfo *mpiInfo){$/;"	f
toggleFolder	doc/html/dynsections.js	/^function toggleFolder(id)$/;"	f
toggleInherit	doc/html/dynsections.js	/^function toggleInherit(id)$/;"	f
toggleLevel	doc/html/dynsections.js	/^function toggleLevel(level)$/;"	f
toggleVisibility	doc/html/dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
tolfloating	src/old/const.h	/^double tolfloating; \/\/toler. for float. pot.,condƒtor mode$/;"	v
tolfloating	src/old/triang/const.h	/^double tolfloating; \/\/toler. for float. pot.,condƒtor mode$/;"	v
tordrho	src/old/const.h	/^double *rdrho, *tordrho;$/;"	v
tordrho	src/old/triang/const.h	/^double *rdrho, *tordrho;$/;"	v
totalflux	src/old/const.h	/^double totalflux[S];$/;"	v
totalflux	src/old/triang/const.h	/^double totalflux[S];$/;"	v
tprint	proof of concept/stool/stool.c	/^void tprint(struct timespec *time){$/;"	f
tprobe	proof of concept/get boundary/challenge/main.c	/^ void tprobe(const char * label){$/;"	f
tprobe	proof of concept/get boundary/main.c	/^ void tprobe(const char * label){$/;"	f
tprobe	proof of concept/get slice/main.c	/^ void tprobe(const char * label){$/;"	f
tprobe	proof of concept/get slice/main.old.c	/^ void tprobe(const char * label){$/;"	f
tprobe	proof of concept/get slice/main.s	/^tprobe:$/;"	l
tprobe	proof of concept/interpolate/main.c	/^struct timespec tprobe(const char * label){$/;"	f
tprobe	proof of concept/stool/stool.c	/^void tprobe(const char * label){$/;"	f
tprobe	proof of concept/tail call recursion/main.c	/^ void tprobe(const char * label){$/;"	f
tprobe	proof of concept/tail call recursion/main.s	/^tprobe:$/;"	l
tprobe	proof of concept/vectorfield/main.c	/^struct timespec tprobe(const char * label){$/;"	f
tr	src/old/triang/construct.c	/^trap_t tr[TRSIZE];		\/* Trapezoid structure *\/$/;"	v
tr_idx	src/old/triang/construct.c	/^static int tr_idx;$/;"	v	file:
trap_t	src/old/triang/triangulate.h	/^} trap_t;$/;"	t	typeref:struct:__anon9
traverse_polygon	src/old/triang/monotone.c	/^static int traverse_polygon(mcur, trnum, from, dir)$/;"	f	file:
triangulate_monotone_polygons	src/old/triang/monotone.c	/^int triangulate_monotone_polygons(nvert, nmonpoly, op)$/;"	f
triangulate_polygon	src/old/triang/tri.c	/^int triangulate_polygon(ncontours, cntr, vertices, triangles)$/;"	f
triangulate_single_polygon	src/old/triang/monotone.c	/^static int triangulate_single_polygon(nvert, posmax, side, op)$/;"	f	file:
trnum	src/old/triang/triangulate.h	/^  int trnum;$/;"	m	struct:__anon10
trueSize	src/pinc.h	/^	int *trueSize;				\/\/\/< Size of array (excluding ghosts) (rank elements)$/;"	m	struct:__anon3
typedef-members	doc/html/pinc_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
u0	src/old/triang/triangulate.h	/^  int u0, u1;$/;"	m	struct:__anon9
u1	src/old/triang/triangulate.h	/^  int u0, u1;$/;"	m	struct:__anon9
unitvec	src/old/const.h	/^vectorst ** unitvec, **orthvec,  ** unitvecseg, ** orthvecseg;$/;"	v
unitvec	src/old/triang/const.h	/^vectorst ** unitvec, **orthvec,  ** unitvecseg, ** orthvecseg;$/;"	v
unitvecseg	src/old/const.h	/^vectorst ** unitvec, **orthvec,  ** unitvecseg, ** orthvecseg;$/;"	v
unitvecseg	src/old/triang/const.h	/^vectorst ** unitvec, **orthvec,  ** unitvecseg, ** orthvecseg;$/;"	v
updateStripes	doc/html/dynsections.js	/^function updateStripes()$/;"	f
usave	src/old/triang/triangulate.h	/^  int usave, uside;		\/* I forgot what this means *\/$/;"	m	struct:__anon9
uside	src/old/triang/triangulate.h	/^  int usave, uside;		\/* I forgot what this means *\/$/;"	m	struct:__anon9
utAssert	test/test.h	61;"	d
utAssertInner	test/test.c	/^int utAssertInner(const char *file, const char *func, int line, int test, const char * restrict format,...){$/;"	f
utRun	test/test.c	/^void utRun(int (*fun)()){$/;"	f
utSummary	test/test.c	/^void utSummary(){$/;"	f
v	script/distribution.py	/^v = linspace(0,6,100)$/;"	v
v0	src/old/triang/triangulate.h	/^  point_t v0, v1;		\/* two endpoints *\/$/;"	m	struct:__anon8
v1	src/old/triang/triangulate.h	/^  point_t v0, v1;		\/* two endpoints *\/$/;"	m	struct:__anon8
v2	script/distribution.py	/^v2 = linspace(-6,6,100) $/;"	v
vadd	proof of concept/stool/stool.c	/^void vadd(double *v, int N, double value){$/;"	f
val	lib/iniparser/src/dictionary.h	/^    char        **  val ;   \/** List of string values *\/$/;"	m	struct:_dictionary_
val	proof of concept/get boundary/scrabble.c	/^int *val = gridQuantity->val;$/;"	v
val	src/pinc.h	/^	double *val;				\/\/\/< Array of values on the grid$/;"	m	struct:__anon3
vavg	proof of concept/stool/stool.c	/^double vavg(double *v, int N){$/;"	f
vdev	proof of concept/stool/stool.c	/^double vdev(double *v, int N, double value){$/;"	f
vdriftx	src/old/const.h	/^double vdriftx[S]; \/*drift of the specie in x dir*\/$/;"	v
vdriftx	src/old/triang/const.h	/^double vdriftx[S]; \/*drift of the specie in x dir*\/$/;"	v
vector	src/old/fmg/nrutil.c	/^float *vector(long nl, long nh)$/;"	f
vector	src/old/fmg/nrutil.c	/^float *vector(nl,nh)$/;"	f
vector_t	src/old/triang/triangulate.h	/^} point_t, vector_t;$/;"	t	typeref:struct:__anon7
vectorst	src/old/const.h	/^struct vectorst$/;"	s
vectorst	src/old/const.h	/^typedef struct vectorst vectorst;$/;"	t	typeref:struct:vectorst
vectorst	src/old/triang/const.h	/^struct vectorst$/;"	s
vectorst	src/old/triang/const.h	/^typedef struct vectorst vectorst;$/;"	t	typeref:struct:vectorst
vel	src/pinc.h	/^	double *vel;		\/\/\/< Velocity$/;"	m	struct:__anon1
vert	src/old/triang/monotone.c	/^static vertexchain_t vert[SEGSIZE]; \/* chain init. information. This *\/$/;"	v	file:
vertexchain_t	src/old/triang/triangulate.h	/^} vertexchain_t;$/;"	t	typeref:struct:__anon12
vertp	src/old/const.h	/^int *vertp;$/;"	v
vertp	src/old/triang/const.h	/^int *vertp;$/;"	v
vext	proof of concept/stool/stool.c	/^double vext(double *v, int N){$/;"	f
vipcorner	src/old/const.h	/^int ** vipcorner; \/\/virtual particle corner$/;"	v
vipcorner	src/old/triang/const.h	/^int ** vipcorner; \/\/virtual particle corner$/;"	v
virtpart	src/old/dustg.c	/^void virtpart(void)$/;"	f
virtpart	src/old/triang/dustg.c	/^void virtpart(void)$/;"	f
visited	src/old/triang/monotone.c	/^static int visited[TRSIZE];$/;"	v	file:
vmax	proof of concept/stool/stool.c	/^double vmax(double *v, int N){$/;"	f
vmean	src/old/const.h	/^double vmean[S];\/*mean velocity*\/$/;"	v
vmean	src/old/triang/const.h	/^double vmean[S];\/*mean velocity*\/$/;"	v
vmin	proof of concept/stool/stool.c	/^double vmin(double *v, int N){$/;"	f
vmul	proof of concept/stool/stool.c	/^void vmul(double *v, int N, double value){$/;"	f
vnext	src/old/triang/triangulate.h	/^  int vnext[4];			\/* next vertices for the 4 chains *\/$/;"	m	struct:__anon12
vnum	src/old/triang/triangulate.h	/^  int vnum;$/;"	m	struct:__anon11
vpos	src/old/triang/triangulate.h	/^  int vpos[4];			\/* position of v in the 4 chains *\/$/;"	m	struct:__anon12
vprint	proof of concept/stool/stool.c	/^void vprint(double *v, int N){$/;"	f
vsetall	proof of concept/stool/stool.c	/^void vsetall(double *v, int N, double value){$/;"	f
vth	script/distribution.py	/^vth = 1$/;"	v
vthx	src/old/const.h	/^double vthx[S]; \/*thermal velocity in x dir*\/$/;"	v
vthx	src/old/triang/const.h	/^double vthx[S]; \/*thermal velocity in x dir*\/$/;"	v
vthy	src/old/const.h	/^double vthy[S]; \/*thermal velocity in y dir*\/$/;"	v
vthy	src/old/triang/const.h	/^double vthy[S]; \/*thermal velocity in y dir*\/$/;"	v
vthz	src/old/const.h	/^double vthz[S]; $/;"	v
vthz	src/old/triang/const.h	/^double vthz[S]; $/;"	v
vx	src/old/const.h	/^  double vx;$/;"	m	struct:particle
vx	src/old/triang/const.h	/^  double vx;$/;"	m	struct:particle
vxvec	src/old/const.h	/^double *vxvec, *vyvec, *vzvec;$/;"	v
vxvec	src/old/triang/const.h	/^double *vxvec, *vyvec, *vzvec;$/;"	v
vy	src/old/const.h	/^  double vy;$/;"	m	struct:particle
vy	src/old/triang/const.h	/^  double vy;$/;"	m	struct:particle
vyvec	src/old/const.h	/^double *vxvec, *vyvec, *vzvec;$/;"	v
vyvec	src/old/triang/const.h	/^double *vxvec, *vyvec, *vzvec;$/;"	v
vz	src/old/const.h	/^  double vz;$/;"	m	struct:particle
vz	src/old/triang/const.h	/^  double vz;$/;"	m	struct:particle
vzvec	src/old/const.h	/^double *vxvec, *vyvec, *vzvec;$/;"	v
vzvec	src/old/triang/const.h	/^double *vxvec, *vyvec, *vzvec;$/;"	v
weight	src/old/const.h	/^double weight;$/;"	v
weight	src/old/triang/const.h	/^double weight;$/;"	v
weighting1	src/old/grid.c	/^void weighting1(void)$/;"	f
weighting1	src/old/triang/grid.c	/^void weighting1(void)$/;"	f
weightingdust1	src/old/dustg.c	/^void weightingdust1(int ko)$/;"	f
weightingdust1	src/old/triang/dustg.c	/^void weightingdust1(int ko)$/;"	f
wronginitpartcheck	src/old/generate_bug.c	/^int wronginitpartcheck(double px, double py, double delta)$/;"	f
wronginitpartcheck	src/old/triang/generate_bug.c	/^int wronginitpartcheck(double px, double py, double delta)$/;"	f
x	script/grid_plots.py	/^x = np.arange(rho.shape[1])$/;"	v
x	src/old/const.h	/^  double x;$/;"	m	struct:d_particle
x	src/old/const.h	/^  double x;$/;"	m	struct:d_rho
x	src/old/const.h	/^  double x;$/;"	m	struct:particle
x	src/old/const.h	/^double x;$/;"	m	struct:vectorst
x	src/old/triang/const.h	/^  double x;$/;"	m	struct:d_particle
x	src/old/triang/const.h	/^  double x;$/;"	m	struct:d_rho
x	src/old/triang/const.h	/^  double x;$/;"	m	struct:particle
x	src/old/triang/const.h	/^double x;$/;"	m	struct:vectorst
x	src/old/triang/triangulate.h	/^  double x, y;$/;"	m	struct:__anon7
x1	src/old/const.h	/^double x1,x2,x3,x4;$/;"	m	struct:condsq
x1	src/old/triang/const.h	/^double x1,x2,x3,x4;$/;"	m	struct:condsq
x1p	src/old/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
x1p	src/old/triang/const.h	/^double *ap,*bp,*x1p,*maxx, *minx,*maxy,*miny;$/;"	v
x2	src/old/const.h	/^double x1,x2,x3,x4;$/;"	m	struct:condsq
x2	src/old/triang/const.h	/^double x1,x2,x3,x4;$/;"	m	struct:condsq
x3	src/old/const.h	/^double x1,x2,x3,x4;$/;"	m	struct:condsq
x3	src/old/triang/const.h	/^double x1,x2,x3,x4;$/;"	m	struct:condsq
x4	src/old/const.h	/^double x1,x2,x3,x4;$/;"	m	struct:condsq
x4	src/old/triang/const.h	/^double x1,x2,x3,x4;$/;"	m	struct:condsq
xstrdup	lib/iniparser/src/dictionary.c	/^static char * xstrdup(const char * s)$/;"	f	file:
y	script/grid_plots.py	/^y = np.arange(rho.shape[0])$/;"	v
y	src/old/const.h	/^  double y;$/;"	m	struct:d_particle
y	src/old/const.h	/^  double y;$/;"	m	struct:d_rho
y	src/old/const.h	/^  double y;$/;"	m	struct:particle
y	src/old/const.h	/^double y;$/;"	m	struct:vectorst
y	src/old/triang/const.h	/^  double y;$/;"	m	struct:d_particle
y	src/old/triang/const.h	/^  double y;$/;"	m	struct:d_rho
y	src/old/triang/const.h	/^  double y;$/;"	m	struct:particle
y	src/old/triang/const.h	/^double y;$/;"	m	struct:vectorst
y	src/old/triang/triangulate.h	/^  double x, y;$/;"	m	struct:__anon7
y1	src/old/const.h	/^double y1,y2,y3,y4;$/;"	m	struct:condsq
y1	src/old/triang/const.h	/^double y1,y2,y3,y4;$/;"	m	struct:condsq
y2	src/old/const.h	/^double y1,y2,y3,y4;$/;"	m	struct:condsq
y2	src/old/triang/const.h	/^double y1,y2,y3,y4;$/;"	m	struct:condsq
y3	src/old/const.h	/^double y1,y2,y3,y4;$/;"	m	struct:condsq
y3	src/old/triang/const.h	/^double y1,y2,y3,y4;$/;"	m	struct:condsq
y4	src/old/const.h	/^double y1,y2,y3,y4;$/;"	m	struct:condsq
y4	src/old/triang/const.h	/^double y1,y2,y3,y4;$/;"	m	struct:condsq
yval	src/old/triang/triangulate.h	/^  point_t yval;$/;"	m	struct:__anon10
z	src/old/const.h	/^  double z;$/;"	m	struct:d_particle
z	src/old/const.h	/^  double z;$/;"	m	struct:particle
z	src/old/triang/const.h	/^  double z;$/;"	m	struct:d_particle
z	src/old/triang/const.h	/^  double z;$/;"	m	struct:particle
zet1	src/old/dust_triangulation.c	/^double zet1(int i) \/\/statistical sum - partition function$/;"	f
zet1	src/old/flux.c	/^double zet1(int i) \/\/statistical sum - partition function$/;"	f
zet1	src/old/triang/dust_triangulation.c	/^double zet1(int i) \/\/statistical sum - partition function$/;"	f
zet1	src/old/triang/flux.c	/^double zet1(int i) \/\/statistical sum - partition function$/;"	f
