;
; @file			input.ini
; @author		Sigvald Marholm <sigvaldm@fys.uio.no>,
;				Gullik Vetvik Killie <gullikvk@student.matnat.uio.no>
; @copyright	University of Oslo, Norway
; @brief		PINC input file template.
; @date			11.10.15
;

[files]
objects = sphere.txt, sphere2.txt	; paths to objects
output = test						; data file path

[msgfiles]
parsedump = parsedump.txt			; Info on how input was parsed

[time]
nTimeSteps = 300					; Number of time steps
dt=0.1								; Time step (in 1/omega_p of specie 0)

[grid]
; Use comma-separated lists to specify several dimensions.

nSubDomains=1,1					; Number of MPI nodes
trueSize= 7,7					; Number of (true) grid points per MPI node
stepSize=1,1					; Cell size (in Debye lengths of specie 0)
nGhostLayers=0,0,0,0			; Number of Ghost points [x_min, y_min,...,x_max,...]
debye=0.5					; Debye length of specie 0 (in meters)

; Domain size computed as (nNodes*nTGPoints-1)*dr

;Change this


[population]
; Use comma-separated lists to specify several species.
; The first specie is used for normalizing
nParticles=1000,100					; Number of particles
nAlloc=10000,1000					; Number of particles to allocate memory for
q=-1,1								; Particle charge (in elementary charges)
m=1,100							    ; Particle mass (in electron masses)
temperature=200,300					; Temperature (in Kelvin)
drift=0,0

[algorithms]
; TBD: which solvers/algorithms to use?!
poisson = multigrid
pusher = boris
weightingToParticle = first
weightingToGrid = first
preSmooth = gaussSeidel2D				; Choice of presmoother method (Only 1 possible option yet)
postSmooth = gaussSeidel2D				; Choice of postsmoother method
coarseSolv = gaussSeidel2D				; Choice of coarse grid solver

[multigrid]
; Specific parameters of each algorithm? E.g. depth of MG, BCs
mgLevels = 3						; Number of Multigrid levels
mgCycles = 1						; Number of cycles
nPreSmooth = 1					; Number of iterations for the presmoother
nPostSmooth = 1					; Number of iterations for the postsmoother
nCoarseSolve = 1
prolongator = bilinear					; Prolongation stencil
restrictor = halfWeight					; Restrictor stencil
