;
; @file			input.ini
; @author		Sigvald Marholm <sigvaldm@fys.uio.no>
; @copyright	University of Oslo, Norway
; @brief		PINC input file template.
; @date			11.10.15
;

[files]
objects = sphere.txt, sphere2.txt	; paths to objects
output = test						; data file path (including filename prefix)

[msgfiles]
parsedump = parsedump.txt			; Info on how input was parse

[time]
nTimeSteps = 300					; Number of time steps
timeStep = 1						; Time step (in 1/omega_p of specie 0)

[grid]
; Use comma-separated lists to specify several dimensions.
nSubdomains=1,1,1			; Number of subdomains
trueSize=128,128,128		; Number of (true) grid points per MPI node
stepSize=1,1,1				; Cell size (in Debye lengths of specie 0)
nGhostLayers=0,0,0,0,0,0	; Number of Ghost points [x_min, y_min,...,x_max,...]
debye=0.5					; Debye length of specie 0 (in meters)


; Domain size computed as (nSubdomains*trueSize-1)*stepSize

[population]
; Use comma-separated lists to specify several species.
; The first specie is used for normalizing
nParticles=1,1,1			; Number of particles
nAlloc=10,10,10				; Number of particles to allocate memory for
q=1,2,1						; Particle charge (in elemetary charges)
m=1,1,10				    ; Particle mass (in electron masses)
temperature=200				; Temperature (in Kelvin)
drift=0

[modules]
; TBD: which solvers/algorithms to use?!
poisson = multigrid
pusher = boris
weightingToParticle = first
weightingToGrid = first

[multigrid]
; Specific parameters of each algorithm? E.g. depth of MG, BCs
mgLevels = 1						; Number of Multigrid levels
mgCycles = 3						; Number of cycles
preSmoothCycles = 1					; Number of iterations for the presmoother
postSmoothCycles = 1					; Number of iterations for the postsmoother
preSmooth = gaussSeidel					; Choice of presmoother method (Only 1 possible option yet)
postSmooth = gaussSeidel				; Choice of postsmoother method
coarseSolv = gaussSeidel				; Choice of coarse grid solver
